%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 10.0
%%For: (Ikehata) (RDG)
%%Title: (RMCSL SpotColor only.ai)
%%CreationDate: 12/1/2009 2:09 PM
%%BoundingBox: 0 0 0 0
%%HiResBoundingBox: 0 0 0 0
%%DocumentProcessColors:
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKCustomColor: 0.05 0 0.2 0.2 (RVW-MT-01A)
%%+ 0.05 0 0.4 0.2 (RVW-MT-01B)
%%+ 0.05 0 0.6 0.2 (RVW-MT-01C)
%%+ 0.05 0 0.8 0.2 (RVW-MT-01D)
%%+ 0.05 0 1 0.2 (RVW-MT-01E)
%%+ 0.05 0 1 0.3 (RVW-MT-01F)
%%+ 0.05 0 1 0.45 (RVW-MT-01G)
%%+ 0.05 0 1 0.65 (RVW-MT-01H)
%%+ 0.05 0 1 0.85 (RVW-MT-01I)
%%+ 0.05 0 0.8 0.9 (RVW-MT-01J)
%%+ 0.08 0 0.2 0.1 (RVW-MT-01K)
%%+ 0.08 0 0.4 0.1 (RVW-MT-01L)
%%+ 0.08 0 0.6 0.1 (RVW-MT-01M)
%%+ 0.08 0 0.8 0.1 (RVW-MT-01N)
%%+ 0.08 0 1 0.1 (RVW-MT-01O)
%%+ 0.05 0 1 0.22 (RVW-MT-01P)
%%+ 0.05 0 1 0.37 (RVW-MT-01Q)
%%+ 0.05 0 1 0.57 (RVW-MT-01R)
%%+ 0.05 0 1 0.77 (RVW-MT-01S)
%%+ 0.05 0 0.8 0.85 (RVW-MT-01T)
%%+ 0.065 0 0.2 0.2 (RVW-MT-02A)
%%+ 0.08 0 0.4 0.2 (RVW-MT-02B)
%%+ 0.09 0 0.6 0.2 (RVW-MT-02C)
%%+ 0.1 0 0.8 0.2 (RVW-MT-02D)
%%+ 0.11 0 1 0.2 (RVW-MT-02E)
%%+ 0.11 0 1 0.3 (RVW-MT-02F)
%%+ 0.11 0 1 0.45 (RVW-MT-02G)
%%+ 0.11 0 1 0.65 (RVW-MT-02H)
%%+ 0.11 0 1 0.85 (RVW-MT-02I)
%%+ 0.05 0 0.84 0.9 (RVW-MT-02J)
%%+ 0.095 0 0.2 0.1 (RVW-MT-02K)
%%+ 0.11 0 0.4 0.1 (RVW-MT-02L)
%%+ 0.12 0 0.6 0.1 (RVW-MT-02M)
%%+ 0.13 0 0.8 0.1 (RVW-MT-02N)
%%+ 0.14 0 1 0.1 (RVW-MT-02O)
%%+ 0.11 0 1 0.22 (RVW-MT-02P)
%%+ 0.11 0 1 0.37 (RVW-MT-02Q)
%%+ 0.11 0 1 0.57 (RVW-MT-02R)
%%+ 0.11 0 1 0.77 (RVW-MT-02S)
%%+ 0.05 0 0.84 0.85 (RVW-MT-02T)
%%+ 0.11 0 0.2 0.2 (RVW-MT-03A)
%%+ 0.18 0 0.4 0.2 (RVW-MT-03B)
%%+ 0.24 0 0.6 0.2 (RVW-MT-03C)
%%+ 0.3 0 0.8 0.2 (RVW-MT-03D)
%%+ 0.37 0 1 0.2 (RVW-MT-03E)
%%+ 0.37 0 1 0.3 (RVW-MT-03F)
%%+ 0.37 0 1 0.45 (RVW-MT-03G)
%%+ 0.37 0 1 0.65 (RVW-MT-03H)
%%+ 0.37 0 1 0.85 (RVW-MT-03I)
%%+ 0.27 0 0.9 0.9 (RVW-MT-03J)
%%+ 0.14 0 0.2 0.1 (RVW-MT-03K)
%%+ 0.21 0 0.4 0.1 (RVW-MT-03L)
%%+ 0.27 0 0.6 0.1 (RVW-MT-03M)
%%+ 0.33 0 0.8 0.1 (RVW-MT-03N)
%%+ 0.4 0 1 0.1 (RVW-MT-03O)
%%+ 0.37 0 1 0.22 (RVW-MT-03P)
%%+ 0.37 0 1 0.37 (RVW-MT-03Q)
%%+ 0.37 0 1 0.57 (RVW-MT-03R)
%%+ 0.37 0 1 0.77 (RVW-MT-03S)
%%+ 0.27 0 0.9 0.85 (RVW-MT-03T)
%%+ 0.16 0 0.2 0.2 (RVW-MT-04A)
%%+ 0.27 0 0.4 0.2 (RVW-MT-04B)
%%+ 0.38 0 0.6 0.2 (RVW-MT-04C)
%%+ 0.49 0 0.8 0.2 (RVW-MT-04D)
%%+ 0.6 0 1 0.2 (RVW-MT-04E)
%%+ 0.6 0 1 0.3 (RVW-MT-04F)
%%+ 0.6 0 1 0.45 (RVW-MT-04G)
%%+ 0.6 0 1 0.65 (RVW-MT-04H)
%%+ 0.6 0 1 0.85 (RVW-MT-04I)
%%+ 0.5 0 0.9 0.9 (RVW-MT-04J)
%%+ 0.19 0 0.2 0.1 (RVW-MT-04K)
%%+ 0.3 0 0.4 0.1 (RVW-MT-04L)
%%+ 0.41 0 0.6 0.1 (RVW-MT-04M)
%%+ 0.52 0 0.8 0.1 (RVW-MT-04N)
%%+ 0.63 0 1 0.1 (RVW-MT-04O)
%%+ 0.6 0 1 0.22 (RVW-MT-04P)
%%+ 0.6 0 1 0.37 (RVW-MT-04Q)
%%+ 0.6 0 1 0.57 (RVW-MT-04R)
%%+ 0.6 0 1 0.77 (RVW-MT-04S)
%%+ 0.5 0 0.9 0.85 (RVW-MT-04T)
%%+ 0.2 0 0.2 0.2 (RVW-MT-05A)
%%+ 0.36 0 0.4 0.2 (RVW-MT-05B)
%%+ 0.51 0 0.6 0.2 (RVW-MT-05C)
%%+ 0.67 0 0.8 0.2 (RVW-MT-05D)
%%+ 0.82 0 1 0.2 (RVW-MT-05E)
%%+ 0.82 0 1 0.3 (RVW-MT-05F)
%%+ 0.82 0 1 0.45 (RVW-MT-05G)
%%+ 0.82 0 1 0.65 (RVW-MT-05H)
%%+ 0.82 0 1 0.85 (RVW-MT-05I)
%%+ 0.72 0 0.9 0.9 (RVW-MT-05J)
%%+ 0.23 0 0.2 0.1 (RVW-MT-05K)
%%+ 0.39 0 0.4 0.1 (RVW-MT-05L)
%%+ 0.54 0 0.6 0.1 (RVW-MT-05M)
%%+ 0.7 0 0.8 0.1 (RVW-MT-05N)
%%+ 0.85 0 1 0.1 (RVW-MT-05O)
%%+ 0.82 0 1 0.22 (RVW-MT-05P)
%%+ 0.82 0 1 0.37 (RVW-MT-05Q)
%%+ 0.82 0 1 0.57 (RVW-MT-05R)
%%+ 0.82 0 1 0.77 (RVW-MT-05S)
%%+ 0.72 0 0.9 0.85 (RVW-MT-05T)
%%+ 0.25 0 0.2 0.2 (RVW-MT-06A)
%%+ 0.45 0 0.4 0.2 (RVW-MT-06B)
%%+ 0.65 0 0.6 0.2 (RVW-MT-06C)
%%+ 0.85 0 0.8 0.2 (RVW-MT-06D)
%%+ 1 0 1 0.2 (RVW-MT-06E)
%%+ 1 0 1 0.3 (RVW-MT-06F)
%%+ 1 0 1 0.45 (RVW-MT-06G)
%%+ 1 0 1 0.65 (RVW-MT-06H)
%%+ 1 0 1 0.85 (RVW-MT-06I)
%%+ 0.95 0 0.9 0.9 (RVW-MT-06J)
%%+ 0.28 0 0.2 0.1 (RVW-MT-06K)
%%+ 0.48 0 0.4 0.1 (RVW-MT-06L)
%%+ 0.68 0 0.6 0.1 (RVW-MT-06M)
%%+ 0.88 0 0.8 0.1 (RVW-MT-06N)
%%+ 1 0 1 0.1 (RVW-MT-06O)
%%+ 1 0 1 0.22 (RVW-MT-06P)
%%+ 1 0 1 0.37 (RVW-MT-06Q)
%%+ 1 0 1 0.57 (RVW-MT-06R)
%%+ 1 0 1 0.77 (RVW-MT-06S)
%%+ 0.95 0 0.9 0.85 (RVW-MT-06T)
%%+ 0.25 0 0.15 0.2 (RVW-MT-07A)
%%+ 0.45 0 0.29 0.2 (RVW-MT-07B)
%%+ 0.65 0 0.43 0.2 (RVW-MT-07C)
%%+ 0.85 0 0.57 0.2 (RVW-MT-07D)
%%+ 1 0 0.7 0.2 (RVW-MT-07E)
%%+ 1 0 0.7 0.3 (RVW-MT-07F)
%%+ 1 0 0.7 0.45 (RVW-MT-07G)
%%+ 1 0 0.7 0.65 (RVW-MT-07H)
%%+ 1 0 0.7 0.85 (RVW-MT-07I)
%%+ 0.95 0 0.6 0.9 (RVW-MT-07J)
%%+ 0.28 0 0.15 0.1 (RVW-MT-07K)
%%+ 0.48 0 0.29 0.1 (RVW-MT-07L)
%%+ 0.68 0 0.43 0.1 (RVW-MT-07M)
%%+ 0.88 0 0.57 0.1 (RVW-MT-07N)
%%+ 1 0 0.7 0.1 (RVW-MT-07O)
%%+ 1 0 0.7 0.22 (RVW-MT-07P)
%%+ 1 0 0.7 0.37 (RVW-MT-07Q)
%%+ 1 0 0.7 0.57 (RVW-MT-07R)
%%+ 1 0 0.7 0.77 (RVW-MT-07S)
%%+ 0.95 0 0.6 0.85 (RVW-MT-07T)
%%+ 0.25 0 0.08 0.2 (RVW-MT-08A)
%%+ 0.45 0 0.17 0.2 (RVW-MT-08B)
%%+ 0.65 0 0.26 0.2 (RVW-MT-08C)
%%+ 0.85 0 0.35 0.2 (RVW-MT-08D)
%%+ 1 0 0.43 0.2 (RVW-MT-08E)
%%+ 1 0 0.43 0.3 (RVW-MT-08F)
%%+ 1 0 0.43 0.45 (RVW-MT-08G)
%%+ 1 0 0.43 0.65 (RVW-MT-08H)
%%+ 1 0 0.43 0.85 (RVW-MT-08I)
%%+ 0.95 0 0.33 0.9 (RVW-MT-08J)
%%+ 0.28 0 0.08 0.1 (RVW-MT-08K)
%%+ 0.48 0 0.17 0.1 (RVW-MT-08L)
%%+ 0.68 0 0.26 0.1 (RVW-MT-08M)
%%+ 0.88 0 0.35 0.1 (RVW-MT-08N)
%%+ 1 0 0.43 0.1 (RVW-MT-08O)
%%+ 1 0 0.43 0.22 (RVW-MT-08P)
%%+ 1 0 0.43 0.37 (RVW-MT-08Q)
%%+ 1 0 0.43 0.57 (RVW-MT-08R)
%%+ 1 0 0.43 0.77 (RVW-MT-08S)
%%+ 0.95 0 0.33 0.85 (RVW-MT-08T)
%%+ 0.25 0 0 0.2 (RVW-MT-09A)
%%+ 0.45 0 0 0.2 (RVW-MT-09B)
%%+ 0.65 0 0 0.2 (RVW-MT-09C)
%%+ 0.85 0 0 0.2 (RVW-MT-09D)
%%+ 1 0 0 0.2 (RVW-MT-09E)
%%+ 1 0 0 0.3 (RVW-MT-09F)
%%+ 1 0 0 0.45 (RVW-MT-09G)
%%+ 1 0 0 0.65 (RVW-MT-09H)
%%+ 1 0 0 0.85 (RVW-MT-09I)
%%+ 0.85 0 0 0.9 (RVW-MT-09J)
%%+ 0.28 0 0 0.1 (RVW-MT-09K)
%%+ 0.48 0 0 0.1 (RVW-MT-09L)
%%+ 0.68 0 0 0.1 (RVW-MT-09M)
%%+ 0.88 0 0 0.1 (RVW-MT-09N)
%%+ 1 0 0 0.1 (RVW-MT-09O)
%%+ 1 0 0 0.22 (RVW-MT-09P)
%%+ 1 0 0 0.37 (RVW-MT-09Q)
%%+ 1 0 0 0.57 (RVW-MT-09R)
%%+ 1 0 0 0.77 (RVW-MT-09S)
%%+ 0.85 0 0 0.85 (RVW-MT-09T)
%%+ 0.25 0.08 0 0.2 (RVW-MT-10A)
%%+ 0.45 0.17 0 0.2 (RVW-MT-10B)
%%+ 0.65 0.26 0 0.2 (RVW-MT-10C)
%%+ 0.85 0.34 0 0.2 (RVW-MT-10D)
%%+ 1 0.43 0 0.2 (RVW-MT-10E)
%%+ 1 0.43 0 0.3 (RVW-MT-10F)
%%+ 1 0.43 0 0.45 (RVW-MT-10G)
%%+ 1 0.43 0 0.65 (RVW-MT-10H)
%%+ 1 0.43 0 0.85 (RVW-MT-10I)
%%+ 0.95 0.33 0 0.9 (RVW-MT-10J)
%%+ 0.28 0.08 0 0.1 (RVW-MT-10K)
%%+ 0.48 0.17 0 0.1 (RVW-MT-10L)
%%+ 0.68 0.26 0 0.1 (RVW-MT-10M)
%%+ 0.88 0.34 0 0.1 (RVW-MT-10N)
%%+ 1 0.43 0 0.1 (RVW-MT-10O)
%%+ 1 0.43 0 0.22 (RVW-MT-10P)
%%+ 1 0.43 0 0.37 (RVW-MT-10Q)
%%+ 1 0.43 0 0.57 (RVW-MT-10R)
%%+ 1 0.43 0 0.77 (RVW-MT-10S)
%%+ 0.95 0.33 0 0.85 (RVW-MT-10T)
%%+ 0.25 0.15 0 0.2 (RVW-MT-11A)
%%+ 0.45 0.29 0 0.2 (RVW-MT-11B)
%%+ 0.65 0.43 0 0.2 (RVW-MT-11C)
%%+ 0.85 0.57 0 0.2 (RVW-MT-11D)
%%+ 1 0.7 0 0.2 (RVW-MT-11E)
%%+ 1 0.7 0 0.3 (RVW-MT-11F)
%%+ 1 0.7 0 0.45 (RVW-MT-11G)
%%+ 1 0.7 0 0.65 (RVW-MT-11H)
%%+ 1 0.7 0 0.85 (RVW-MT-11I)
%%+ 0.95 0.6 0 0.9 (RVW-MT-11J)
%%+ 0.28 0.15 0 0.1 (RVW-MT-11K)
%%+ 0.48 0.29 0 0.1 (RVW-MT-11L)
%%+ 0.68 0.43 0 0.1 (RVW-MT-11M)
%%+ 0.88 0.57 0 0.1 (RVW-MT-11N)
%%+ 1 0.7 0 0.1 (RVW-MT-11O)
%%+ 1 0.7 0 0.22 (RVW-MT-11P)
%%+ 1 0.7 0 0.37 (RVW-MT-11Q)
%%+ 1 0.7 0 0.57 (RVW-MT-11R)
%%+ 1 0.7 0 0.77 (RVW-MT-11S)
%%+ 0.95 0.6 0 0.85 (RVW-MT-11T)
%%+ 0.25 0.2 0 0.2 (RVW-MT-12A)
%%+ 0.45 0.4 0 0.2 (RVW-MT-12B)
%%+ 0.65 0.6 0 0.2 (RVW-MT-12C)
%%+ 0.85 0.8 0 0.2 (RVW-MT-12D)
%%+ 1 1 0 0.2 (RVW-MT-12E)
%%+ 1 1 0 0.3 (RVW-MT-12F)
%%+ 1 1 0 0.45 (RVW-MT-12G)
%%+ 1 1 0 0.65 (RVW-MT-12H)
%%+ 1 1 0 0.85 (RVW-MT-12I)
%%+ 0.95 0.9 0 0.9 (RVW-MT-12J)
%%+ 0.28 0.2 0 0.1 (RVW-MT-12K)
%%+ 0.48 0.4 0 0.1 (RVW-MT-12L)
%%+ 0.68 0.6 0 0.1 (RVW-MT-12M)
%%+ 0.88 0.8 0 0.1 (RVW-MT-12N)
%%+ 1 1 0 0.1 (RVW-MT-12O)
%%+ 1 1 0 0.22 (RVW-MT-12P)
%%+ 1 1 0 0.37 (RVW-MT-12Q)
%%+ 1 1 0 0.57 (RVW-MT-12R)
%%+ 1 1 0 0.77 (RVW-MT-12S)
%%+ 0.95 0.9 0 0.85 (RVW-MT-12T)
%%+ 0.2 0.2 0 0.2 (RVW-MT-13A)
%%+ 0.36 0.4 0 0.2 (RVW-MT-13B)
%%+ 0.52 0.6 0 0.2 (RVW-MT-13C)
%%+ 0.67 0.8 0 0.2 (RVW-MT-13D)
%%+ 0.83 1 0 0.2 (RVW-MT-13E)
%%+ 0.83 1 0 0.3 (RVW-MT-13F)
%%+ 0.83 1 0 0.45 (RVW-MT-13G)
%%+ 0.83 1 0 0.65 (RVW-MT-13H)
%%+ 0.83 1 0 0.85 (RVW-MT-13I)
%%+ 0.73 0.9 0 0.9 (RVW-MT-13J)
%%+ 0.23 0.2 0 0.1 (RVW-MT-13K)
%%+ 0.39 0.4 0 0.1 (RVW-MT-13L)
%%+ 0.55 0.6 0 0.1 (RVW-MT-13M)
%%+ 0.7 0.8 0 0.1 (RVW-MT-13N)
%%+ 0.86 1 0 0.1 (RVW-MT-13O)
%%+ 0.83 1 0 0.22 (RVW-MT-13P)
%%+ 0.83 1 0 0.37 (RVW-MT-13Q)
%%+ 0.83 1 0 0.57 (RVW-MT-13R)
%%+ 0.83 1 0 0.77 (RVW-MT-13S)
%%+ 0.73 0.9 0 0.85 (RVW-MT-13T)
%%+ 0.16 0.2 0 0.2 (RVW-MT-14A)
%%+ 0.27 0.4 0 0.2 (RVW-MT-14B)
%%+ 0.38 0.6 0 0.2 (RVW-MT-14C)
%%+ 0.5 0.8 0 0.2 (RVW-MT-14D)
%%+ 0.6 1 0 0.2 (RVW-MT-14E)
%%+ 0.6 1 0 0.3 (RVW-MT-14F)
%%+ 0.6 1 0 0.45 (RVW-MT-14G)
%%+ 0.6 1 0 0.65 (RVW-MT-14H)
%%+ 0.6 1 0 0.85 (RVW-MT-14I)
%%+ 0.5 0.9 0 0.9 (RVW-MT-14J)
%%+ 0.19 0.2 0 0.1 (RVW-MT-14K)
%%+ 0.3 0.4 0 0.1 (RVW-MT-14L)
%%+ 0.41 0.6 0 0.1 (RVW-MT-14M)
%%+ 0.53 0.8 0 0.1 (RVW-MT-14N)
%%+ 0.63 1 0 0.1 (RVW-MT-14O)
%%+ 0.6 1 0 0.22 (RVW-MT-14P)
%%+ 0.6 1 0 0.37 (RVW-MT-14Q)
%%+ 0.6 1 0 0.57 (RVW-MT-14R)
%%+ 0.6 1 0 0.77 (RVW-MT-14S)
%%+ 0.5 0.9 0 0.85 (RVW-MT-14T)
%%+ 0.11 0.2 0 0.2 (RVW-MT-15A)
%%+ 0.18 0.4 0 0.2 (RVW-MT-15B)
%%+ 0.25 0.6 0 0.2 (RVW-MT-15C)
%%+ 0.31 0.8 0 0.2 (RVW-MT-15D)
%%+ 0.38 1 0 0.2 (RVW-MT-15E)
%%+ 0.38 1 0 0.3 (RVW-MT-15F)
%%+ 0.38 1 0 0.45 (RVW-MT-15G)
%%+ 0.38 1 0 0.65 (RVW-MT-15H)
%%+ 0.38 1 0 0.85 (RVW-MT-15I)
%%+ 0.28 0.9 0 0.9 (RVW-MT-15J)
%%+ 0.14 0.2 0 0.1 (RVW-MT-15K)
%%+ 0.21 0.4 0 0.1 (RVW-MT-15L)
%%+ 0.28 0.6 0 0.1 (RVW-MT-15M)
%%+ 0.34 0.8 0 0.1 (RVW-MT-15N)
%%+ 0.41 1 0 0.1 (RVW-MT-15O)
%%+ 0.38 1 0 0.22 (RVW-MT-15P)
%%+ 0.38 1 0 0.37 (RVW-MT-15Q)
%%+ 0.38 1 0 0.57 (RVW-MT-15R)
%%+ 0.38 1 0 0.77 (RVW-MT-15S)
%%+ 0.28 0.9 0 0.85 (RVW-MT-15T)
%%+ 0.05 0.2 0 0.2 (RVW-MT-16A)
%%+ 0.05 0.4 0 0.2 (RVW-MT-16B)
%%+ 0.05 0.6 0 0.2 (RVW-MT-16C)
%%+ 0.05 0.8 0 0.2 (RVW-MT-16D)
%%+ 0.05 1 0 0.2 (RVW-MT-16E)
%%+ 0.05 1 0 0.3 (RVW-MT-16F)
%%+ 0.05 1 0 0.45 (RVW-MT-16G)
%%+ 0.05 1 0 0.65 (RVW-MT-16H)
%%+ 0.05 1 0 0.85 (RVW-MT-16I)
%%+ 0.05 0.8 0 0.9 (RVW-MT-16J)
%%+ 0.08 0.2 0 0.1 (RVW-MT-16K)
%%+ 0.08 0.4 0 0.1 (RVW-MT-16L)
%%+ 0.08 0.6 0 0.1 (RVW-MT-16M)
%%+ 0.08 0.8 0 0.1 (RVW-MT-16N)
%%+ 0.08 1 0 0.1 (RVW-MT-16O)
%%+ 0.05 1 0 0.22 (RVW-MT-16P)
%%+ 0.05 1 0 0.37 (RVW-MT-16Q)
%%+ 0.05 1 0 0.57 (RVW-MT-16R)
%%+ 0.05 1 0 0.77 (RVW-MT-16S)
%%+ 0.05 0.8 0 0.85 (RVW-MT-16T)
%%+ 0.05 0.2 0.07 0.2 (RVW-MT-17A)
%%+ 0.05 0.4 0.15 0.2 (RVW-MT-17B)
%%+ 0.05 0.6 0.22 0.2 (RVW-MT-17C)
%%+ 0.05 0.8 0.3 0.2 (RVW-MT-17D)
%%+ 0.05 1 0.37 0.2 (RVW-MT-17E)
%%+ 0.05 1 0.37 0.3 (RVW-MT-17F)
%%+ 0.05 1 0.37 0.45 (RVW-MT-17G)
%%+ 0.05 1 0.37 0.65 (RVW-MT-17H)
%%+ 0.05 1 0.37 0.85 (RVW-MT-17I)
%%+ 0.05 0.9 0.27 0.9 (RVW-MT-17J)
%%+ 0.08 0.2 0.07 0.1 (RVW-MT-17K)
%%+ 0.08 0.4 0.15 0.1 (RVW-MT-17L)
%%+ 0.08 0.6 0.22 0.1 (RVW-MT-17M)
%%+ 0.08 0.8 0.3 0.1 (RVW-MT-17N)
%%+ 0.08 1 0.37 0.1 (RVW-MT-17O)
%%+ 0.05 1 0.37 0.22 (RVW-MT-17P)
%%+ 0.05 1 0.37 0.37 (RVW-MT-17Q)
%%+ 0.05 1 0.37 0.57 (RVW-MT-17R)
%%+ 0.05 1 0.37 0.77 (RVW-MT-17S)
%%+ 0.05 0.9 0.27 0.85 (RVW-MT-17T)
%%+ 0.05 0.2 0.12 0.2 (RVW-MT-18A)
%%+ 0.05 0.4 0.25 0.2 (RVW-MT-18B)
%%+ 0.05 0.6 0.37 0.2 (RVW-MT-18C)
%%+ 0.05 0.8 0.5 0.2 (RVW-MT-18D)
%%+ 0.05 1 0.62 0.2 (RVW-MT-18E)
%%+ 0.05 1 0.62 0.3 (RVW-MT-18F)
%%+ 0.05 1 0.62 0.45 (RVW-MT-18G)
%%+ 0.05 1 0.62 0.65 (RVW-MT-18H)
%%+ 0.05 1 0.62 0.85 (RVW-MT-18I)
%%+ 0.05 0.9 0.52 0.9 (RVW-MT-18J)
%%+ 0.08 0.2 0.12 0.1 (RVW-MT-18K)
%%+ 0.08 0.4 0.25 0.1 (RVW-MT-18L)
%%+ 0.08 0.6 0.37 0.1 (RVW-MT-18M)
%%+ 0.08 0.8 0.5 0.1 (RVW-MT-18N)
%%+ 0.08 1 0.62 0.1 (RVW-MT-18O)
%%+ 0.05 1 0.62 0.22 (RVW-MT-18P)
%%+ 0.05 1 0.62 0.37 (RVW-MT-18Q)
%%+ 0.05 1 0.62 0.57 (RVW-MT-18R)
%%+ 0.05 1 0.62 0.77 (RVW-MT-18S)
%%+ 0.05 0.9 0.52 0.85 (RVW-MT-18T)
%%+ 0.05 0.2 0.2 0.2 (RVW-MT-19A)
%%+ 0.05 0.4 0.4 0.2 (RVW-MT-19B)
%%+ 0.05 0.6 0.6 0.2 (RVW-MT-19C)
%%+ 0.05 0.8 0.8 0.2 (RVW-MT-19D)
%%+ 0.05 1 1 0.2 (RVW-MT-19E)
%%+ 0.05 1 1 0.3 (RVW-MT-19F)
%%+ 0.05 1 1 0.45 (RVW-MT-19G)
%%+ 0.05 1 1 0.65 (RVW-MT-19H)
%%+ 0.05 1 1 0.85 (RVW-MT-19I)
%%+ 0.05 0.9 0.9 0.9 (RVW-MT-19J)
%%+ 0.08 0.2 0.2 0.1 (RVW-MT-19K)
%%+ 0.08 0.4 0.4 0.1 (RVW-MT-19L)
%%+ 0.08 0.6 0.6 0.1 (RVW-MT-19M)
%%+ 0.08 0.8 0.8 0.1 (RVW-MT-19N)
%%+ 0.08 1 1 0.1 (RVW-MT-19O)
%%+ 0.05 1 1 0.22 (RVW-MT-19P)
%%+ 0.05 1 1 0.37 (RVW-MT-19Q)
%%+ 0.05 1 1 0.57 (RVW-MT-19R)
%%+ 0.05 1 1 0.77 (RVW-MT-19S)
%%+ 0.05 0.9 0.9 0.85 (RVW-MT-19T)
%%+ 0.05 0.17 0.2 0.2 (RVW-MT-20A)
%%+ 0.05 0.35 0.4 0.2 (RVW-MT-20B)
%%+ 0.05 0.53 0.6 0.2 (RVW-MT-20C)
%%+ 0.05 0.7 0.8 0.2 (RVW-MT-20D)
%%+ 0.05 0.87 1 0.2 (RVW-MT-20E)
%%+ 0.05 0.87 1 0.3 (RVW-MT-20F)
%%+ 0.05 0.87 1 0.45 (RVW-MT-20G)
%%+ 0.05 0.87 1 0.65 (RVW-MT-20H)
%%+ 0.05 0.87 1 0.85 (RVW-MT-20I)
%%+ 0.05 0.77 0.9 0.9 (RVW-MT-20J)
%%+ 0.08 0.17 0.2 0.1 (RVW-MT-20K)
%%+ 0.08 0.35 0.4 0.1 (RVW-MT-20L)
%%+ 0.08 0.53 0.6 0.1 (RVW-MT-20M)
%%+ 0.08 0.7 0.8 0.1 (RVW-MT-20N)
%%+ 0.08 0.87 1 0.1 (RVW-MT-20O)
%%+ 0.05 0.87 1 0.22 (RVW-MT-20P)
%%+ 0.05 0.87 1 0.37 (RVW-MT-20Q)
%%+ 0.05 0.87 1 0.57 (RVW-MT-20R)
%%+ 0.05 0.87 1 0.77 (RVW-MT-20S)
%%+ 0.05 0.77 0.9 0.85 (RVW-MT-20T)
%%+ 0.05 0.15 0.2 0.2 (RVW-MT-21A)
%%+ 0.05 0.3 0.4 0.2 (RVW-MT-21B)
%%+ 0.05 0.45 0.6 0.2 (RVW-MT-21C)
%%+ 0.05 0.6 0.8 0.2 (RVW-MT-21D)
%%+ 0.05 0.75 1 0.2 (RVW-MT-21E)
%%+ 0.05 0.75 1 0.3 (RVW-MT-21F)
%%+ 0.05 0.75 1 0.45 (RVW-MT-21G)
%%+ 0.05 0.75 1 0.65 (RVW-MT-21H)
%%+ 0.05 0.75 1 0.85 (RVW-MT-21I)
%%+ 0.05 0.65 0.9 0.9 (RVW-MT-21J)
%%+ 0.08 0.15 0.2 0.1 (RVW-MT-21K)
%%+ 0.08 0.3 0.4 0.1 (RVW-MT-21L)
%%+ 0.08 0.45 0.6 0.1 (RVW-MT-21M)
%%+ 0.08 0.6 0.8 0.1 (RVW-MT-21N)
%%+ 0.08 0.75 1 0.1 (RVW-MT-21O)
%%+ 0.05 0.75 1 0.22 (RVW-MT-21P)
%%+ 0.05 0.75 1 0.37 (RVW-MT-21Q)
%%+ 0.05 0.75 1 0.57 (RVW-MT-21R)
%%+ 0.05 0.75 1 0.77 (RVW-MT-21S)
%%+ 0.05 0.65 0.9 0.85 (RVW-MT-21T)
%%+ 0.05 0.12 0.2 0.2 (RVW-MT-22A)
%%+ 0.05 0.25 0.4 0.2 (RVW-MT-22B)
%%+ 0.05 0.37 0.6 0.2 (RVW-MT-22C)
%%+ 0.05 0.5 0.8 0.2 (RVW-MT-22D)
%%+ 0.05 0.62 1 0.2 (RVW-MT-22E)
%%+ 0.05 0.62 1 0.3 (RVW-MT-22F)
%%+ 0.05 0.62 1 0.45 (RVW-MT-22G)
%%+ 0.05 0.62 1 0.65 (RVW-MT-22H)
%%+ 0.05 0.62 1 0.85 (RVW-MT-22I)
%%+ 0.05 0.52 0.9 0.9 (RVW-MT-22J)
%%+ 0.08 0.12 0.2 0.1 (RVW-MT-22K)
%%+ 0.08 0.25 0.4 0.1 (RVW-MT-22L)
%%+ 0.08 0.37 0.6 0.1 (RVW-MT-22M)
%%+ 0.08 0.5 0.8 0.1 (RVW-MT-22N)
%%+ 0.08 0.62 1 0.1 (RVW-MT-22O)
%%+ 0.05 0.62 1 0.22 (RVW-MT-22P)
%%+ 0.05 0.62 1 0.37 (RVW-MT-22Q)
%%+ 0.05 0.62 1 0.57 (RVW-MT-22R)
%%+ 0.05 0.62 1 0.77 (RVW-MT-22S)
%%+ 0.05 0.52 0.9 0.85 (RVW-MT-22T)
%%+ 0.05 0.07 0.2 0.2 (RVW-MT-23A)
%%+ 0.05 0.15 0.4 0.2 (RVW-MT-23B)
%%+ 0.05 0.22 0.6 0.2 (RVW-MT-23C)
%%+ 0.05 0.3 0.8 0.2 (RVW-MT-23D)
%%+ 0.05 0.37 1 0.2 (RVW-MT-23E)
%%+ 0.05 0.37 1 0.3 (RVW-MT-23F)
%%+ 0.05 0.37 1 0.45 (RVW-MT-23G)
%%+ 0.05 0.37 1 0.65 (RVW-MT-23H)
%%+ 0.05 0.37 1 0.85 (RVW-MT-23I)
%%+ 0.05 0.27 0.9 0.9 (RVW-MT-23J)
%%+ 0.08 0.07 0.2 0.1 (RVW-MT-23K)
%%+ 0.08 0.15 0.4 0.1 (RVW-MT-23L)
%%+ 0.08 0.22 0.6 0.1 (RVW-MT-23M)
%%+ 0.08 0.3 0.8 0.1 (RVW-MT-23N)
%%+ 0.08 0.37 1 0.1 (RVW-MT-23O)
%%+ 0.05 0.37 1 0.22 (RVW-MT-23P)
%%+ 0.05 0.37 1 0.37 (RVW-MT-23Q)
%%+ 0.05 0.37 1 0.57 (RVW-MT-23R)
%%+ 0.05 0.37 1 0.77 (RVW-MT-23S)
%%+ 0.05 0.27 0.9 0.85 (RVW-MT-23T)
%%+ 0.05 0.05 0.2 0.2 (RVW-MT-24A)
%%+ 0.05 0.1 0.4 0.2 (RVW-MT-24B)
%%+ 0.05 0.15 0.6 0.2 (RVW-MT-24C)
%%+ 0.05 0.2 0.8 0.2 (RVW-MT-24D)
%%+ 0.05 0.25 1 0.2 (RVW-MT-24E)
%%+ 0.05 0.25 1 0.3 (RVW-MT-24F)
%%+ 0.05 0.25 1 0.45 (RVW-MT-24G)
%%+ 0.05 0.25 1 0.65 (RVW-MT-24H)
%%+ 0.05 0.25 1 0.85 (RVW-MT-24I)
%%+ 0.05 0.15 0.9 0.9 (RVW-MT-24J)
%%+ 0.08 0.05 0.2 0.1 (RVW-MT-24K)
%%+ 0.08 0.1 0.4 0.1 (RVW-MT-24L)
%%+ 0.08 0.15 0.6 0.1 (RVW-MT-24M)
%%+ 0.08 0.2 0.8 0.1 (RVW-MT-24N)
%%+ 0.08 0.25 1 0.1 (RVW-MT-24O)
%%+ 0.05 0.25 1 0.22 (RVW-MT-24P)
%%+ 0.05 0.25 1 0.37 (RVW-MT-24Q)
%%+ 0.05 0.25 1 0.57 (RVW-MT-24R)
%%+ 0.05 0.25 1 0.77 (RVW-MT-24S)
%%+ 0.05 0.15 0.9 0.85 (RVW-MT-24T)
%%+ 0 0 0 0.2 (RVW-MT-25A)
%%+ 0 0 0 0.31 (RVW-MT-25B)
%%+ 0 0 0 0.42 (RVW-MT-25C)
%%+ 0 0 0 0.53 (RVW-MT-25D)
%%+ 0 0 0 0.64 (RVW-MT-25E)
%%+ 0 0 0 0.71 (RVW-MT-25F)
%%+ 0 0 0 0.82 (RVW-MT-25G)
%%+ 0 0 0 0.93 (RVW-MT-25H)
%%+ 0 0 0 1 (RVW-MT-25I)
%%+ 0 0 0 1 (RVW-MT-25J)
%%+ 0 0 0 0.1 (RVW-MT-25K)
%%+ 0 0 0 0.21 (RVW-MT-25L)
%%+ 0 0 0 0.32 (RVW-MT-25M)
%%+ 0 0 0 0.43 (RVW-MT-25N)
%%+ 0 0 0 0.54 (RVW-MT-25O)
%%+ 0 0 0 0.63 (RVW-MT-25P)
%%+ 0 0 0 0.74 (RVW-MT-25Q)
%%+ 0 0 0 0.85 (RVW-MT-25R)
%%+ 0 0 0 0.96 (RVW-MT-25S)
%%+ 0 0 0 1 (RVW-MT-25T)
%%+ 0.4 0.2 0 0.2 (RVW-MT-Blue)
%%+ 0.05 0.35 0.45 0.45 (RVW-MT-Bronze)
%%+ 0.5 0 0.15 0.2 (RVW-MT-Cobalt)
%%+ 0.1 0.2 0.8 0.2 (RVW-MT-Gold)
%%+ 0.4 0 0.3 0.2 (RVW-MT-Green)
%%+ 0 0.45 0.4 0.2 (RVW-MT-Maroon)
%%+ 0.3 0.3 0 0.2 (RVW-MT-Navy)
%%+ 0.3 0.02 0.4 0.2 (RVW-MT-Olive)
%%+ 0.2 0.4 0 0.2 (RVW-MT-Purple)
%%+ 0.1 0.1 0 0.3 (RVW-MT-Silver)
%%+ 0.15 0.2 0.3 0.6 (RVW-MT-TitanBlack)
%%+ 0 0.4 0 0.2 (RVW-MT-Violet)
%%CMYKProcessColor: 1 1 1 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () 
%AI3_TemplateBox: 1032.5 729.3428 1032.5 729.3428
%AI3_TileBox: 0 0 572 816
%AI3_DocumentPreview: None
%AI5_ArtSize: 2063.6221 1459.8424
%AI5_RulerUnits: 1
%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -1400.2207 5021.6846 0.1667 837 822 18 0 0 190 121 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:0 0
%%AI3_PaperRect:-12 830 583 -12
%%AI3_Margin:12 -11 -11 12
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
1 Bn
%AI5_BeginGradient: (Unnamed gradient 1)
(Unnamed gradient 1) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginBrushPattern
(Unnamed 2)
0 A
uu0 J 0 j 1 w 4 M []0 d0 XR
-3286.2314 5048.1875 m
-3177.6592 5048.1875 L
-3177.6592 5046.7749 L
-3286.2314 5046.7749 L
-3286.2314 5048.1875 L
nu0 O
0 0 0 1 k
-3177.6592 5046.8125 m
-3177.7109 5046.7749 L
-3177.8438 5046.8789 L
-3177.6592 5046.8125 L
f-3178.5342 5047.0435 m
-3178.5083 5047.0625 -3178.5205 5047.0938 -3178.4946 5047.1133 C
-3177.9814 5046.8164 L
-3178.2109 5046.6484 -3178.3828 5047.1558 -3178.5342 5047.0435 c
f-3178.6855 5047.0137 m
-3178.8843 5046.9443 -3178.9668 5047.083 -3179.0132 5047.1309 C
-3178.9434 5047.0229 -3178.6416 5047.1641 -3178.6855 5047.0137 C
f-3196.2212 5047.083 m
-3196.2026 5047.082 -3196.1782 5047.0781 -3196.1592 5047.0742 C
-3196.1904 5047.0693 -3196.2109 5047.0742 -3196.2212 5047.083 C
f-3200.7964 5047.5557 m
-3200.8442 5047.6665 L
-3199.9907 5047.4683 -3199.0273 5047.6699 -3198.1252 5047.583 C
-3198.1855 5047.6226 L
-3195.8945 5047.666 -3193.7822 5047.4805 -3191.5088 5047.3955 C
-3191.5444 5047.4082 -3191.5566 5047.4404 -3191.5933 5047.4531 c
-3191.4834 5047.4146 -3191.3618 5047.3438 -3191.2388 5047.3525 C
-3191.2073 5047.3779 -3191.2734 5047.4053 -3191.3125 5047.416 C
-3190.8333 5047.5996 -3189.9028 5047.2998 -3189.6025 5047.4414 C
-3189.4678 5047.4209 -3189.4082 5047.3452 -3189.4834 5047.2861 C
-3187.7041 5047.2397 -3185.8013 5047.2046 -3183.9893 5047.0605 C
-3183.9019 5047.0859 -3183.8862 5047.1357 -3183.9102 5047.1992 C
-3182.3613 5046.9014 -3180.7378 5047.02 -3179.1533 5047.0684 C
-3179.0923 5046.9897 -3179.3145 5046.9854 -3179.1587 5046.9033 C
-3179.6682 5046.8062 -3180.0918 5047.0962 -3180.5537 5046.9531 C
-3180.4946 5046.8779 L
-3180.8311 5046.8306 -3180.5625 5047.0684 -3180.9116 5046.9707 C
-3181.0488 5046.9082 -3180.8772 5046.875 -3180.9414 5046.8691 C
-3181.6558 5046.9004 -3182.4014 5046.832 -3183.0742 5047.0156 C
-3183.2402 5046.8516 -3183.8418 5047.0098 -3184.1062 5046.8525 C
-3184.2913 5046.9185 -3184.4766 5046.9014 -3184.5469 5047.0098 C
-3187.0479 5046.9233 -3189.6025 5047.082 -3192.1653 5047.0693 C
-3193.3638 5047.3877 -3194.7998 5047.0088 -3196.2227 5047.1152 C
-3196.2324 5047.1045 -3196.2305 5047.0918 -3196.2212 5047.083 C
-3196.6855 5047.1611 -3197.3613 5047.1978 -3197.9153 5047.1582 C
-3198.3838 5047.2935 L
-3201.7158 5047.0166 -3205.1201 5047.2109 -3208.5044 5047.0962 c
-3212.3496 5047.0166 -3215.7188 5046.7886 -3219.4639 5047.2065 C
-3219.4592 5047.1753 -3219.4893 5047.1582 -3219.3926 5047.1465 C
-3220.4731 5047.21 -3221.4583 5047.0962 -3222.4756 5047.1621 C
-3222.4727 5047.1309 L
-3224.9983 5047.3926 -3227.7292 5047.0962 -3230.1636 5047.3779 C
-3233.1274 5047.3496 -3236.4785 5047.3779 -3239.6157 5047.4585 C
-3239.6084 5047.3955 L
-3242.1187 5047.5283 -3244.5444 5047.1953 -3247.0488 5047.2949 C
-3249.6252 5047.1523 -3252.3457 5047.6558 -3254.9434 5047.4648 C
-3256.5508 5047.1558 -3258.6621 5047.8169 -3260.1719 5047.498 C
-3263.2734 5047.0156 -3266.2822 5047.3262 -3269.3828 5047.6152 C
-3272.2432 5047.4434 -3275.0996 5047.8848 -3277.8701 5047.5337 C
-3279.1826 5047.7588 -3280.6323 5047.2554 -3282.0933 5047.3203 C
-3282.0413 5047.3984 L
-3282.5654 5047.1621 -3283.2092 5047.7285 -3283.5361 5047.3779 C
-3283.4814 5047.3613 L
-3283.7588 5047.1836 -3284.1262 5047.7817 -3284.2949 5047.5693 C
-3284.3398 5047.6582 L
-3284.6758 5047.6836 -3284.3794 5047.5586 -3284.6387 5047.5229 C
-3284.7363 5047.5337 -3284.6758 5047.6836 -3284.8794 5047.6328 C
-3284.9238 5047.2725 -3285.7026 5047.7109 -3285.7256 5047.3062 C
-3285.5422 5047.3062 -3286.0137 5047.1494 -3285.6011 5047.0645 C
-3285.7188 5047.0229 -3286.2822 5047.0435 -3286.2314 5047.2148 C
-3286.2793 5047.3975 -3286.4995 5047.5562 -3286.1572 5047.6973 C
-3286.0884 5047.5645 L
-3285.9731 5047.6973 -3286.0012 5047.6309 -3285.9595 5047.7305 C
-3285.5122 5047.748 -3285.4521 5047.9414 -3285.1318 5048.0205 C
-3285.1348 5048.0166 -3285.1377 5048.0137 -3285.1333 5048.0068 C
-3284.9141 5047.8477 -3284.6104 5047.9414 -3284.4375 5047.9648 C
-3284.3672 5048.0396 L
-3284.2617 5048.1934 -3283.8584 5047.7363 -3283.9946 5048.0024 C
-3283.0852 5047.936 -3282.0432 5047.9395 -3281.0264 5047.936 C
-3280.8843 5047.8354 -3280.2493 5047.9453 -3280.4707 5047.7515 c
-3280.2163 5047.9722 -3279.46 5048.0283 -3279.1797 5048.02 C
-3279.1899 5048.0405 -3279.2021 5048.0645 -3279.2461 5048.0562 C
-3278.7012 5048.3438 -3278.6006 5047.79 -3278.0898 5048.1426 C
-3278.0103 5047.8926 -3277.1626 5048.2212 -3276.8743 5047.9292 C
-3276.8105 5047.9844 -3276.7898 5048.0337 -3276.8125 5048.0781 C
-3275.8936 5048.083 -3274.8789 5048.1733 -3274.1011 5048.1846 C
-3273.4365 5047.9673 -3272.4922 5048.2832 -3271.9209 5047.9824 C
-3271.4478 5048.0469 -3270.6816 5048.1709 -3270.0215 5048.0508 C
-3270.0852 5048.0869 L
-3269.3398 5048.0693 -3268.4082 5048.0537 -3267.8965 5047.8652 C
-3267.6763 5048.1533 -3267.3545 5048.0962 -3267.0317 5048.1875 C
-3266.5342 5048.0537 -3265.5293 5048.0938 -3264.7695 5047.9722 C
-3264.6533 5048.1055 -3264.1426 5047.916 -3264.1035 5048.1094 C
-3261.9756 5047.7363 -3259.3442 5047.8662 -3257.0718 5048.1484 C
-3257.1045 5048.1621 L
-3256.8096 5048.0562 -3256.4697 5047.8218 -3256.1699 5047.6846 C
-3256.1406 5047.7021 -3256.1436 5047.7334 -3256.2073 5047.7334 C
-3255.7922 5047.6973 -3255.4033 5047.8872 -3254.9893 5047.8516 C
-3254.9922 5047.8833 -3254.9922 5047.8833 -3255.0596 5047.9141 C
-3254.6709 5047.8281 -3254.2559 5048.0684 -3253.7964 5047.9189 C
-3253.7712 5047.9702 L
-3253.4785 5047.8984 L
-3253.4858 5047.9619 -3253.4971 5048.0586 -3253.6533 5048.0371 C
-3250.0898 5048.0996 -3246.4116 5047.7686 -3242.7529 5047.8164 C
-3242.8877 5047.8774 L
-3242.1782 5047.7686 L
-3242.1816 5047.8008 -3242.2158 5047.8164 -3242.2495 5047.8315 C
-3241.3457 5047.9395 -3240.4082 5047.7588 -3239.5273 5047.7861 C
-3239.5317 5047.8169 -3239.6653 5047.8789 -3239.5422 5047.9141 C
-3238.8896 5047.7397 -3238.4946 5048.1406 -3238.1682 5047.7793 C
-3238.1377 5047.7949 -3238.1172 5047.8774 -3238.1836 5047.9058 C
-3236.3701 5047.7861 -3234.5078 5047.7935 -3232.6807 5047.8516 C
-3231.1587 5047.5244 -3229.4583 5047.8203 -3227.8772 5047.5605 C
-3227.8853 5047.6265 L
-3225.8389 5047.3975 -3223.6682 5047.6426 -3221.5469 5047.5962 C
-3220.6663 5047.6226 -3220.0708 5047.5449 -3219.1855 5047.5405 C
-3219.1636 5047.6226 L
-3217.6738 5047.3125 -3216.0322 5047.9004 -3214.4785 5047.5596 C
-3214.5852 5047.6699 L
-3214.3442 5047.499 -3213.6455 5047.7305 -3213.7373 5047.4365 C
-3213.4629 5047.5249 L
-3212.4067 5047.1382 -3211.5413 5047.7046 -3210.2471 5047.4531 C
-3210.3323 5047.5229 L
-3209.9878 5047.4683 -3209.5869 5047.4253 -3209.3323 5047.4897 C
-3209.3716 5047.5 -3209.3535 5047.5205 -3209.4346 5047.5396 C
-3208.3574 5047.8145 -3207.1582 5047.5098 -3206.0215 5047.5205 C
-3206.1499 5047.6499 L
-3205.6006 5047.498 -3204.5923 5047.6396 -3203.8701 5047.5693 C
-3203.9141 5047.6309 L
-3203.5483 5047.5449 L
-3203.5391 5047.6665 L
-3202.5986 5047.6753 -3201.7139 5047.5693 -3200.7964 5047.5557 C
f-3191.3125 5047.416 m
-3191.3154 5047.4146 -3191.3193 5047.4146 -3191.3228 5047.4121 C
-3191.3506 5047.4229 -3191.3369 5047.4209 -3191.3125 5047.416 C
f-3285.0166 5048.0469 m
-3285.0596 5048.0396 -3285.0957 5048.0313 -3285.1318 5048.0205 C
-3285.1233 5048.0469 -3285.0532 5048.0405 -3285.0166 5048.0469 c
fUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7159 8918.1494 m
-6963.0332 8918.1494 L
-6963.0332 8858.1211 L
-7159 8858.1211 L
-7159 8918.1494 L
nu0 O
0.05 0.7 0.9 0 k
-7138.96 8911.5264 m
-7150.9639 8906.7207 -7156.4199 8910.333 v
-7151.6582 8910.1758 -7147.4912 8911.9893 v
-7156.6182 8912.3574 -7159 8917.4707 v
-7156.0234 8914.5732 -7149.0781 8915.8779 v
-7142.1357 8917.1826 -7125.6685 8920.8438 -7130.8252 8915.2471 C
-7134.0791 8913.918 -7135.7061 8913.1895 -7138.96 8911.5264 C
f0.0556 0.84 1 0.17 k
-7129.9961 8916.3799 m
-7132.1016 8914.6758 -7142.7441 8913.8223 -7141.4082 8909.8838 c
-7140.0723 8905.9463 -7137.4971 8904.4111 Y
-7135.6094 8904.4014 -7134.6665 8904.375 -7132.7773 8904.2695 C
-7130.7656 8913.7627 -7129.9961 8916.3799 V
f0.05 0.7 0.9 0 k
-7137.6641 8897.666 m
-7139.1621 8904.2402 -7139.9102 8905.4727 -7141.4082 8909.8838 C
-7139.4229 8904.5684 -7132.9844 8907.7676 v
-7126.1191 8911.1777 -7104.1914 8907.3652 -7118.6309 8897.6191 C
-7126.2441 8898.3486 -7130.0508 8898.4727 -7137.6641 8897.666 C
f0.0556 0.84 1 0.17 k
-7141.9395 8879.3955 m
-7139.7524 8880.5566 -7141.9355 8884.2666 v
-7148.7813 8895.8916 -7147.6582 8902.8262 -7140.4814 8901.5908 c
-7133.3047 8900.3555 -7118.1719 8897.0918 -7114.8955 8900.8994 C
-7116.9912 8892.3242 -7119.0435 8887.5869 -7121.1387 8877.7227 C
-7138.4814 8872.0391 -7141.9395 8879.3955 v
f0.05 0.7 0.9 0 k
-6983.0723 8905.7383 m
-6971.0664 8905.6982 -6965.6094 8911.0117 v
-6970.3701 8908.7813 -6974.5381 8909.334 v
-6965.4121 8913.2764 -6963.0332 8917.8369 v
-6966.0059 8914.5352 -6972.9512 8914.2178 v
-6979.8965 8913.9004 -6996.3652 8916.1318 -6991.2061 8908.7734 C
-6987.9531 8907.4512 -6986.3252 8906.833 -6983.0723 8905.7383 C
f0.0556 0.84 1 0.17 k
-6992.0332 8910.3457 m
-6989.9307 8908.0996 -6979.2852 8909.9482 -6980.6221 8904.5146 c
-6981.9595 8899.0811 -6984.5313 8896.1318 Y
-6986.6274 8895.1104 -6987.6758 8894.6074 -6989.7715 8893.6338 C
-6991.2666 8906.4355 -6992.0332 8910.3457 V
f0.05 0.7 0.9 0 k
-6984.3633 8889.3438 m
-6982.8662 8895.3535 -6982.1191 8898.4287 -6980.6221 8904.5146 C
-6982.6523 8896.5742 -6989.0449 8898.8047 v
-6998.6563 8902.1572 -7016.0996 8894.1318 -7003.3984 8885.6836 C
-6995.7852 8886.583 -6991.9766 8887.3047 -6984.3633 8889.3438 C
f0.0556 0.84 1 0.17 k
-6980.0938 8878.3281 m
-6982.0264 8877.9795 -6980.0957 8881.0967 v
-6973.3496 8891.9863 -6976.9688 8897.5107 -6984.1445 8892.5859 c
-6991.3203 8887.6582 -7004.2949 8886.915 -7007.5713 8890.21 C
-7005.1289 8882.2529 -7003.3359 8878.7383 -7000.8926 8873.9941 C
-6983.5527 8873.1602 -6980.0938 8878.3281 v
fu0.05 0.7 0.9 0 k
-6995.4277 8879.5215 m
-7009.8345 8880.1807 -7024.0845 8884.5732 -7037.8652 8888.8203 c
-7053.4668 8893.6279 -7068.2051 8898.1699 -7083.1953 8897.8135 c
-7088.2734 8897.6934 -7097.0762 8895.6875 -7106.3955 8893.5635 c
-7123.1255 8889.75 -7135.4551 8887.251 -7142.5449 8888.6445 C
-7143.6865 8888.7871 -7145.4863 8889.2539 V
-7145.7852 8892.3662 -7146.2598 8894.3906 Y
-7142.8242 8884.4551 -7098.5723 8900.3301 -7083.2637 8900.6934 c
-7053.9629 8901.3887 -7025.0166 8883.7607 -6995.2959 8882.3975 c
-6978.2471 8881.6172 -6976.2988 8890.9063 Y
-6976.8262 8888.251 -6977.4404 8884.7207 V
-6979.3857 8883.0107 -6980.8164 8882.0195 Y
-6984.0762 8880.3682 -6988.7383 8879.2148 -6995.4277 8879.5215 c
f-7126.8848 8861.2295 m
-7113.8828 8862.5166 -7100.5156 8865.7334 -7093.6255 8869.2324 c
-7076.3325 8878.0166 -7057.5723 8875.4268 -7041.5039 8871.7334 C
-7038.3438 8871.0039 L
-7023.0684 8867.4512 -6992.6387 8860.375 -6980.6074 8865.9951 C
-6979.5615 8866.2959 -6977.9824 8867.3379 V
-6976.5977 8866.1475 -6974.7383 8866.791 -6975.8906 8865.7021 c
-6986.8496 8855.3311 -7025.0234 8864.9951 -7042.1484 8868.9287 c
-7058.8721 8872.7695 -7076.4111 8874.7461 -7092.3213 8866.665 c
-7107.3535 8859.0303 -7148.4902 8853.7666 -7152.9609 8861.8555 c
-7153.2578 8862.3926 -7152.5547 8862.4902 -7151.4473 8863.4512 C
-7149.9785 8862.5762 -7148.71 8862.1191 Y
-7145.6895 8860.9307 -7138.7485 8860.0557 -7126.8848 8861.2295 c
f0.02 0.28 0.72 0 k
-6977.9824 8867.3379 m
-6979.5615 8866.2959 -6980.6074 8865.9951 Y
-6992.6387 8860.375 -7023.0684 8867.4512 -7038.3438 8871.0039 C
-7041.5039 8871.7334 L
-7057.5723 8875.4268 -7076.3325 8878.0166 -7093.6255 8869.2324 c
-7100.5156 8865.7334 -7113.8828 8862.5166 -7126.8848 8861.2295 c
-7138.7485 8860.0557 -7145.6895 8860.9307 -7148.71 8862.1191 C
-7149.9785 8862.5762 -7151.4473 8863.4512 V
-7149.8018 8864.875 -7147.2598 8868.2031 -7145.7524 8877.7031 c
-7145.0684 8882.0166 -7145.1904 8886.1699 -7145.4863 8889.2539 C
-7143.6865 8888.7871 -7142.5449 8888.6445 Y
-7135.4551 8887.251 -7123.1255 8889.75 -7106.3955 8893.5635 c
-7097.0762 8895.6875 -7088.2734 8897.6934 -7083.1953 8897.8135 c
-7068.2051 8898.1699 -7053.4668 8893.6279 -7037.8652 8888.8203 c
-7024.0845 8884.5732 -7009.8345 8880.1807 -6995.4277 8879.5215 c
-6988.7383 8879.2148 -6984.0762 8880.3682 -6980.8164 8882.0195 C
-6979.3857 8883.0107 -6977.4404 8884.7207 V
-6978.1328 8880.7422 -6978.9385 8875.6523 -6979.2256 8871.999 c
-6979.4346 8869.3486 -6978.7891 8868.0322 -6977.9824 8867.3379 C
fUUU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 2)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7159 8920.8438 m
-7133.1089 8920.8438 L
-7133.1089 8895.0039 L
-7159 8895.0039 L
-7159 8920.8438 L
n*u
0 O
0.62 0.04 0.93 0 k
-7133.4077 8899.2246 m
-7133.2969 8899.1406 -7133.1973 8899.0498 -7133.1089 8898.9521 C
-7133.1089 8896.2324 L
-7133.7085 8895.4902 -7134.7285 8895.0039 -7135.5703 8895.0039 c
-7136.1948 8895.0039 -7136.8989 8895.3691 -7137.1328 8895.6572 C
-7137.2632 8895.7861 -7137.4199 8895.8379 -7137.5752 8895.8379 c
-7137.7329 8895.8379 -7137.8613 8895.7861 -7137.9141 8895.6807 c
-7138.0957 8895.291 -7138.4351 8895.0303 -7138.9048 8895.0303 c
-7139.6592 8895.0303 -7142.5239 8897.7119 -7142.5239 8898.4688 c
-7142.5239 8898.5986 -7142.4199 8898.6514 -7142.2373 8898.6514 c
-7142.0029 8898.6514 -7141.6128 8898.5469 -7141.2476 8898.3652 C
-7141.0132 8898.2607 -7139.9199 8897.4531 -7139.6328 8897.4531 c
-7139.2949 8897.4531 -7139.0605 8898.2607 -7138.7207 8898.2607 c
-7138.4351 8898.2607 -7137.3408 8897.2715 -7137.0796 8897.0879 c
-7136.8452 8896.9316 -7136.0908 8896.1777 -7135.4399 8896.1777 c
-7134.5288 8896.1777 -7133.6157 8896.6699 -7133.6157 8897.6611 c
-7133.6157 8898.1826 -7134.4238 8899.7188 -7137.2632 8900.2139 c
-7137.5239 8900.2646 -7138.8765 8900.2412 -7139.1895 8900.2646 c
-7139.5029 8900.291 -7141.0391 8899.8223 -7141.3789 8899.7451 c
-7142.4199 8899.5107 -7142.4985 8899.5107 -7144.4512 8899.5107 c
-7144.5825 8899.5107 -7144.6606 8899.5107 -7144.6606 8899.4316 c
-7144.6606 8899.3799 -7144.6333 8899.3018 -7144.5557 8899.1973 C
-7144.2949 8898.8076 -7144.0605 8898.2871 -7144.0605 8897.6875 c
-7144.0605 8896.3574 -7145.4155 8895.0039 -7146.9263 8895.0039 c
-7149.8428 8895.0039 -7149.8428 8896.7236 -7149.8428 8896.958 c
-7149.8428 8897.5059 -7149.5039 8898.625 -7148.2549 8898.625 c
-7147.5508 8898.625 -7147.2637 8898.2871 -7147.2637 8897.9746 c
-7147.2637 8897.7402 -7147.3945 8897.5566 -7147.5771 8897.4785 c
-7147.8389 8897.375 -7147.9419 8897.2432 -7147.9419 8897.1143 c
-7147.9419 8896.8535 -7147.5771 8896.6191 -7147.1343 8896.6191 c
-7146.3262 8896.6191 -7145.5708 8897.4004 -7145.5708 8898.0527 c
-7145.5708 8900.1367 -7149.9209 8900.7363 -7150.1548 8900.7334 c
-7152.0254 8900.7236 -7153.2549 8901.7666 -7153.2168 8903.7959 c
-7153.1938 8905.1494 -7154.3892 8908.6934 -7156.2646 8908.6934 c
-7156.8389 8908.6934 -7157.2813 8908.3555 -7157.2813 8907.6514 c
-7157.2813 8906.999 -7157.0991 8906.5566 -7156.8892 8906.5566 c
-7156.7861 8906.5566 -7156.6548 8906.7139 -7156.5254 8906.999 C
-7156.4727 8907.1572 -7156.2915 8907.2607 -7156.0825 8907.2607 c
-7155.6133 8907.2607 -7155.0151 8906.8447 -7155.0151 8905.6719 c
-7155.0151 8904.499 -7155.7183 8904.0322 -7156.4468 8904.0322 c
-7157.7754 8904.0322 -7159 8905.1494 -7159 8907.5205 c
-7159 8909.4746 -7157.75 8910.4111 -7156.6812 8910.4111 c
-7155.6133 8910.4111 -7155.2495 8909.8125 -7154.8848 8909.5264 c
-7154.7549 8909.4229 -7154.6758 8909.3711 -7154.6245 8909.3711 c
-7154.5469 8909.3711 -7154.52 8909.4492 -7154.52 8909.6055 c
-7154.52 8910.2295 -7154.0508 8913.0166 -7154.0508 8913.5898 c
-7154.0508 8914.3184 -7154.0508 8920.2822 -7156.1089 8920.2822 c
-7157.0728 8920.2822 -7157.5679 8919.5283 -7157.5679 8918.6406 c
-7157.5679 8917.9902 -7156.6289 8917.1318 -7156.3169 8916.6885 c
-7155.7959 8915.9863 -7155.7959 8915.4639 Y
-7155.7959 8915.3086 -7155.8477 8915.2295 -7155.9517 8915.2051 C
-7156.9678 8915.0742 -7157.1768 8914.9951 -7157.1768 8914.71 c
-7157.1768 8914.2412 -7156.4209 8913.4326 -7156.0303 8913.252 c
-7155.7437 8913.1211 -7155.6133 8912.835 -7155.6133 8912.5479 c
-7155.6133 8912.2607 -7155.7437 8911.9238 -7156.1865 8911.9238 c
-7157.2021 8911.9238 -7158.9229 8914.5537 -7158.9229 8915.0479 c
-7158.9229 8915.5166 -7158.6616 8915.8555 -7158.27 8916.0391 c
-7158.1665 8916.0898 -7158.1143 8916.2207 -7158.1143 8916.375 c
-7158.1143 8916.5332 -7158.1665 8916.6885 -7158.2969 8916.8193 C
-7158.5835 8917.0527 -7158.9468 8917.7578 -7158.9468 8918.3818 c
-7158.9468 8919.2227 -7158.4604 8920.2432 -7157.7207 8920.8438 C
-7155.0439 8920.8438 L
-7154.9341 8920.752 -7154.8301 8920.6514 -7154.7285 8920.5439 c
-7154.4678 8920.2822 -7154.3125 8920.1797 -7154.1812 8920.1797 c
-7154.0254 8920.1797 -7153.6089 8920.7783 -7153.4785 8920.7783 c
-7152.8008 8920.7783 -7152.8008 8920.2314 -7152.8008 8919.0332 c
-7152.8008 8918.8486 -7152.8535 8918.0166 -7152.8535 8917.8613 c
-7152.8535 8917.6016 -7152.7754 8917.4707 -7152.6445 8917.4707 c
-7152.5396 8917.4707 -7152.4102 8917.5742 -7152.2788 8917.7314 c
-7151.5078 8918.6875 -7150.0596 8920.0967 -7148.0928 8920.8438 C
-7142.5278 8920.8438 L
-7141.3564 8920.3828 -7140.4448 8919.6406 -7139.7349 8918.7725 C
-7139.5425 8919.623 -7138.9136 8920.8418 -7136.9766 8920.8418 c
-7135.9438 8920.8418 -7135.0239 8920.293 -7134.6079 8919.4639 C
-7133.6665 8919.1318 -7133.1108 8918.123 -7133.1108 8916.9756 c
-7133.1108 8915.0391 -7134.3301 8914.4102 -7135.1797 8914.2158 C
-7134.3096 8913.5098 -7133.5693 8912.5967 -7133.1089 8911.4258 C
-7133.1089 8905.8594 L
-7133.8564 8903.8926 -7135.2646 8902.4443 -7136.2207 8901.6719 c
-7136.3774 8901.542 -7136.4551 8901.4375 -7136.4551 8901.3574 c
-7136.4551 8900.9688 -7134.2148 8900.9414 -7133.7461 8900.9414 c
-7133.4863 8900.9414 -7133.3564 8900.709 -7133.3564 8900.4746 c
-7133.3564 8900.2646 -7133.4336 8900.083 -7133.6157 8900.0566 c
-7133.8237 8900.0322 -7133.9551 8899.9795 -7133.9551 8899.8486 c
-7133.9551 8899.7188 -7133.7988 8899.5361 -7133.4077 8899.2246 c
f1 D
-7136.2988 8917.4258 m
-7136.23 8917.4131 -7136.1743 8917.4033 -7136.1421 8917.4033 c
-7135.7783 8917.4033 -7135.2832 8917.7939 -7135.2832 8918.498 c
-7135.2832 8918.5547 -7135.2896 8918.6113 -7135.2998 8918.668 C
-7135.9854 8918.6543 -7136.3662 8918.168 -7136.3662 8917.8086 c
-7136.3662 8917.7461 -7136.3276 8917.5732 -7136.2988 8917.4258 C
f-7133.9185 8917.002 m
-7133.9185 8917.3926 -7134.0835 8917.8867 -7134.3872 8918.2354 C
-7134.5181 8917.2031 -7135.4956 8916.5703 -7136.2471 8916.5703 c
-7136.8208 8916.5703 -7137.1846 8916.8301 -7137.1846 8917.1172 c
-7137.1846 8917.1494 -7137.1846 8917.2246 -7137.1509 8917.3018 C
-7137.1812 8917.4199 -7137.1992 8917.5557 -7137.1992 8917.7051 c
-7137.1992 8918.3877 -7136.6772 8919.2559 -7135.8086 8919.5098 C
-7136.1445 8919.8203 -7136.5825 8920.0352 -7136.9502 8920.0352 c
-7138.4077 8920.0352 -7138.9292 8919.0166 -7138.9292 8918.1855 c
-7138.9292 8917.9688 -7138.9209 8917.7813 -7138.8945 8917.6113 C
-7138.4512 8916.9775 -7138.1064 8916.498 -7137.8179 8916.1367 C
-7137.4541 8915.8447 -7136.9736 8915.502 -7136.3423 8915.0566 C
-7136.1709 8915.0303 -7135.9849 8915.0215 -7135.7676 8915.0215 c
-7134.9336 8915.0215 -7133.9185 8915.543 -7133.9185 8917.002 c
f-7135.7261 8904.251 m
-7135.4141 8904.251 -7133.6157 8905.4492 -7133.6157 8908.6006 c
-7133.6157 8911.5654 -7135.3276 8914.4814 -7138.5757 8914.5371 C
-7138.5781 8914.5098 -7138.5796 8914.4795 -7138.5796 8914.4502 c
-7138.5796 8914.3252 -7138.7769 8912.6035 -7139.8911 8911.2422 C
-7139.8086 8911.252 -7139.7236 8911.2578 -7139.6328 8911.2578 c
-7138.5132 8911.2578 -7137.6274 8910.1367 -7137.6274 8909.1475 c
-7137.6274 8908.1582 -7138.4351 8906.5166 -7140.9092 8906.5166 c
-7143.1797 8906.5166 -7144.2173 8908.3535 -7144.3564 8909.6797 C
-7145.6064 8909.9902 -7147.0449 8911.0332 -7147.0449 8913.043 c
-7147.0449 8915.5166 -7145.4048 8916.3252 -7144.4141 8916.3252 c
-7143.4238 8916.3252 -7142.3047 8915.4395 -7142.3047 8914.3184 c
-7142.3047 8914.249 -7142.3086 8914.1807 -7142.3145 8914.1172 C
-7141.0869 8915.0566 -7139.7246 8915.373 -7139.5029 8915.373 c
-7139.4751 8915.373 -7139.4468 8915.374 -7139.4199 8915.375 C
-7139.5645 8918.5146 -7142.1621 8920.3359 -7145.3516 8920.3359 c
-7147.6436 8920.3359 -7150.3008 8918.9023 -7150.3008 8917.9131 c
-7150.3008 8917.4971 -7149.5181 8917.4189 -7149.3628 8917.4189 c
-7149.2588 8917.4189 -7148.6592 8917.5479 Y
-7148.5293 8917.5479 -7148.4512 8917.4443 -7148.4512 8917.3135 c
-7148.4512 8917.0791 -7149.0767 8916.1162 -7150.0132 8916.1162 c
-7150.5352 8916.1162 -7151.2383 8916.0645 -7151.4727 8915.7773 c
-7151.6289 8915.5957 -7152.1499 8914.4229 -7152.1499 8914.1895 c
-7152.1499 8914.0566 -7152.0708 8913.9805 -7151.9155 8913.9805 c
-7151.7075 8913.9805 -7150.7949 8914.1621 -7150.6133 8914.1621 c
-7149.2329 8914.1621 -7148.2168 8913.3555 -7148.2168 8911.8965 c
-7148.2168 8911.7412 -7148.2432 8911.168 -7148.4775 8911.168 c
-7148.6079 8911.168 -7148.9727 8911.7148 -7149.1021 8911.7148 c
-7149.2329 8911.7148 -7149.3101 8911.6367 -7149.3101 8911.5059 c
-7149.3101 8911.4805 -7149.2075 8910.8291 -7149.2075 8910.7246 c
-7149.2075 8909.7617 -7149.8325 8909.4492 -7150.0669 8909.4492 c
-7150.5605 8909.4492 -7150.8213 8909.8389 -7150.8213 8910.3604 c
-7150.8213 8910.4902 -7150.7949 8910.6211 -7150.7695 8910.7773 C
-7150.6133 8911.4551 -7150.0669 8911.7148 -7150.0669 8912.2607 c
-7150.0669 8913.0166 -7151.0557 8913.2773 -7151.8115 8913.2773 c
-7152.7231 8913.2773 -7153.2695 8911.6621 -7153.2695 8909.9414 c
-7153.2695 8908.9141 -7152.8765 8907.4326 -7152.4009 8906.2666 c
-7151.9727 8905.2207 -7150.9492 8905.2422 -7150.5552 8905.1631 c
-7150.5449 8905.1621 -7149.5605 8904.96 -7149.2412 8904.666 c
-7148.8276 8904.2822 -7148.6992 8903.4629 -7148.6982 8903.4512 c
-7148.6621 8903.0957 -7148.6807 8901.9453 -7147.5845 8901.5098 c
-7146.4326 8901.0527 -7145.0088 8900.6826 -7144.0088 8900.6826 c
-7142.2896 8900.6826 -7140.6748 8901.2295 -7140.6748 8902.1406 c
-7140.6748 8902.8965 -7140.9355 8903.5215 -7141.6909 8903.5215 c
-7142.2373 8903.5215 -7142.4985 8902.9746 -7143.1758 8902.8184 C
-7143.3325 8902.791 -7143.4629 8902.7666 -7143.5918 8902.7666 c
-7144.1133 8902.7666 -7144.5039 8903.0273 -7144.5039 8903.5215 c
-7144.5039 8903.7559 -7144.1919 8904.3799 -7143.2285 8904.3799 c
-7143.1235 8904.3799 -7142.4717 8904.2773 -7142.4453 8904.2773 c
-7142.3154 8904.2773 -7142.2373 8904.3555 -7142.2373 8904.4854 c
-7142.2373 8904.6162 -7142.7837 8904.9795 -7142.7837 8905.1104 c
-7142.7837 8905.3457 -7142.2109 8905.3711 -7142.0552 8905.3711 c
-7141.0918 8905.3711 -7139.7896 8904.7461 -7139.7896 8903.2871 c
-7139.7896 8903.1045 -7139.9717 8902.2451 -7139.9717 8902.0371 c
-7139.9717 8901.8799 -7139.8936 8901.8027 -7139.7637 8901.8027 c
-7139.0332 8901.8027 -7137.8096 8902.5059 -7137.8096 8904.0684 c
-7137.8096 8904.7979 -7136.9502 8905.501 -7136.6108 8905.501 c
-7136.4028 8905.501 -7135.9604 8904.251 -7135.7261 8904.251 c
f-7144.3271 8910.7119 m
-7144.2246 8911.5078 -7143.9595 8912.1777 -7143.6016 8912.7363 C
-7143.6357 8912.7324 -7143.6636 8912.7295 -7143.6846 8912.7295 c
-7144.0493 8912.7295 -7144.4668 8912.8867 -7144.7012 8913.1211 C
-7144.9355 8913.3291 -7145.1436 8913.4326 -7145.3262 8913.4326 c
-7145.5869 8913.4326 -7145.8472 8913.1738 -7145.8472 8912.5742 c
-7145.8472 8911.4688 -7145.0615 8910.9453 -7144.3271 8910.7119 C
f-7140.8311 8908.8086 m
-7141.1172 8908.9131 -7141.2476 8909.3555 -7141.2476 8909.7461 c
-7141.2476 8909.8486 -7141.23 8909.9941 -7141.1836 8910.1523 C
-7141.7646 8909.8311 -7142.4727 8909.6191 -7143.3354 8909.583 C
-7143.1729 8908.7891 -7142.6836 8907.6885 -7141.2739 8907.6885 c
-7140.4409 8907.6885 -7140.3101 8908.3135 -7140.3101 8908.3916 c
-7140.3101 8908.5742 -7140.4927 8908.7051 -7140.8311 8908.8086 C
f-7143.3936 8910.5439 m
-7143.3589 8910.543 -7143.3247 8910.543 -7143.2949 8910.543 c
-7141.5078 8910.543 -7139.7461 8912.2412 -7139.4556 8914.4619 C
-7141.5215 8914.0703 -7143.2188 8912.2061 -7143.3936 8910.5439 C
f*U
U%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 4)
0 A
u0 D
0 J 0 j 1 w 4 M []0 d0 XR
-7158.8833 8920.7988 m
-7067.0479 8920.7988 L
-7067.0479 8916.5195 L
-7158.8833 8916.5195 L
-7158.8833 8920.7988 L
n0 O
0 0 0 1 k
-7158.6631 8918.1191 m
-7159 8918.1855 -7158.4814 8918.375 -7158.8833 8918.2324 C
-7158.8379 8918.1143 -7158.7725 8918.0254 -7158.6631 8918.1191 C
f-7068.1675 8918.2852 m
-7069.2524 8919.0479 -7070.6816 8918.2773 -7071.8701 8918.7637 C
-7072.0098 8918.7959 -7071.8345 8918.3457 -7072.1484 8918.4463 C
-7073.3008 8919.0391 -7075.1162 8918.6855 -7076.5195 8918.2285 C
-7076.4346 8918.1104 L
-7076.7017 8918.0254 -7077.0283 8918.415 -7077.3115 8918.3613 C
-7077.3135 8918.2822 -7077.2207 8918.25 -7077.2861 8918.1426 C
-7077.3574 8918.3789 -7077.7983 8918.252 -7077.9185 8918.4277 C
-7078.0303 8918.3359 -7078.0195 8918.1484 -7078.1641 8918.0449 C
-7078.3262 8918.3135 L
-7078.7769 8918.9531 -7079.4209 8918.2695 -7080.0361 8918.5996 C
-7080.0063 8918.5371 -7079.9453 8918.4883 -7079.9941 8918.4277 C
-7080.9814 8918.8164 -7082.2168 8918.7441 -7083.3208 8918.8867 C
-7083.2769 8918.791 -7083.2363 8918.6191 -7083.3008 8918.5117 C
-7083.3555 8918.7949 -7083.6963 8918.8662 -7083.9922 8918.9219 C
-7084.1255 8918.6309 -7084.4995 8919.1875 -7084.8467 8919.0273 C
-7084.8169 8918.9629 L
-7085.0732 8919.2676 -7085.1973 8918.7871 -7085.4053 8919.1523 C
-7085.5684 8918.9238 L
-7085.6807 8919.334 -7085.9395 8918.7109 -7086.1514 8918.9199 C
-7086.1445 8919.0039 L
-7086.3442 8919.1035 -7086.4482 8918.8975 -7086.6338 8918.9668 C
-7086.6514 8918.9199 L
-7087.0854 8919.0273 -7087.3379 8918.7988 -7087.3271 8919.1191 C
-7087.4795 8918.8623 -7086.9063 8919.002 -7087.1455 8918.6289 C
-7088.5732 8918.959 -7090.0459 8918.8945 -7091.4834 8918.9004 C
-7091.6465 8918.7715 -7091.7505 8918.7324 -7091.7871 8918.6113 C
-7091.9307 8918.6758 -7092.3281 8918.6699 -7092.4585 8918.834 C
-7092.4102 8918.8271 -7092.5513 8918.6699 -7092.6274 8918.6543 C
-7092.8887 8918.5332 -7092.9131 8919.0059 -7093.2002 8918.8623 C
-7093.0859 8918.7773 -7093.0469 8918.6738 -7093.0854 8918.5547 C
-7093.3301 8918.8047 -7093.6577 8918.7646 -7093.9473 8918.8447 C
-7093.9023 8918.791 -7093.8325 8918.7598 -7093.8433 8918.6582 C
-7094.1602 8918.9414 -7094.4209 8918.5996 -7094.6982 8918.7783 C
-7094.5947 8918.5938 L
-7095.0415 8918.3691 -7094.7266 8918.9805 -7095.1128 8918.8477 C
-7095.02 8918.7891 -7095.0527 8918.7158 -7095.0361 8918.6406 C
-7095.3965 8918.9775 -7095.9795 8918.8662 -7096.3389 8918.9805 C
-7096.3174 8918.9551 -7096.3232 8918.9043 Y
-7096.7148 8918.9463 -7097.1245 8918.8418 -7097.5552 8918.9883 C
-7097.7119 8918.9063 -7097.5039 8918.5371 -7097.9185 8918.6055 C
-7097.9033 8918.9766 -7098.6221 8918.7578 -7098.3779 8919.1777 C
-7098.7319 8919.1172 -7099.2925 8918.9775 -7099.5283 8919.1035 C
-7099.3691 8918.9629 -7099.7007 8918.6494 -7099.4063 8918.6191 C
-7099.6289 8918.3936 L
-7099.5957 8918.2422 -7099.3999 8918.4453 -7099.4707 8918.2539 C
-7099.6182 8918.2695 -7100.0479 8918.415 -7100.1797 8918.3555 C
-7100.4531 8918.583 -7100.7041 8919.0078 -7101.1465 8919.0547 C
-7100.9385 8918.9102 -7101.2646 8918.6455 -7101.1235 8918.582 C
-7101.7407 8919.293 L
-7101.8877 8919.3105 -7101.7725 8918.999 -7101.9854 8919.0967 C
-7101.9746 8919.1953 -7102.0674 8919.2559 -7102.1318 8919.3359 C
-7102.1875 8919.293 -7102.7441 8919.4277 -7102.8081 8919.0625 C
-7102.8735 8918.9199 -7102.5684 8918.9863 -7102.7314 8918.8555 C
-7103.0029 8918.8594 -7103.0151 8918.9844 -7103.2871 8918.9902 C
-7103.2925 8918.9414 L
-7103.4717 8918.8867 -7103.8213 8919.0967 -7103.6265 8919.2988 C
-7103.5015 8919.3105 -7103.6738 8919.0791 -7103.4888 8919.1855 C
-7103.6152 8919.3975 -7103.9312 8919.457 -7104.2031 8919.4609 C
-7104.1104 8919.4023 -7104.1216 8919.3047 -7104.0845 8919.2012 C
-7104.4497 8919.4883 -7104.8369 8919.5791 -7105.2451 8919.6982 C
-7105.2515 8919.873 -7105.0928 8919.3828 -7105.0327 8919.4746 C
-7105.5557 8919.2334 -7106.1128 8919.8164 -7106.5479 8919.4639 C
-7106.4766 8919.4326 -7106.5098 8919.7109 -7106.5146 8919.6621 C
-7106.7666 8919.6406 -7106.7549 8919.3887 -7106.9189 8919.4814 C
-7106.9355 8919.334 -7107.1255 8919.5293 -7107.2944 8919.5742 C
-7107.3818 8919.6807 -7107.3384 8919.502 -7107.1914 8919.4863 C
-7107.4268 8919.6113 -7108.3691 8919.8379 -7108.9131 8919.623 C
-7108.9023 8919.7207 -7109.2471 8919.9814 -7109.3721 8919.9707 C
-7109.3232 8919.7422 L
-7109.4375 8919.6055 -7109.7422 8919.7617 -7109.7632 8919.5654 C
-7110.0303 8919.8438 -7108.7344 8919.3301 -7109.0957 8919.5439 C
-7109.1895 8919.3535 -7109.5991 8919.9082 -7109.5215 8919.5967 C
-7109.7725 8919.6055 -7110.0161 8919.8623 -7110.2559 8919.6484 C
-7110.1865 8919.6855 -7110.0522 8919.3311 -7110.2549 8919.3477 C
-7110.6123 8919.3887 -7110.3564 8919.457 -7110.6465 8919.5332 C
-7110.8281 8919.627 L
-7110.8398 8919.8486 -7111.1475 8919.5967 -7111.0146 8919.8447 C
-7111.0586 8919.6621 -7111.5337 8919.959 -7111.4971 8919.5898 C
-7111.4473 8919.2988 L
-7111.6016 8919.3203 -7111.7002 8919.6055 -7111.8213 8919.7334 C
-7111.8418 8919.707 -7111.8823 8919.6484 -7111.8745 8919.6016 C
-7111.8994 8920.0469 -7112.2432 8919.5645 -7112.4268 8919.9082 C
-7112.7505 8919.7539 -7113.2495 8919.8945 -7113.4023 8919.6172 C
-7113.6514 8919.752 -7113.8784 8919.9121 -7114.1621 8919.8164 C
-7114.1055 8919.7734 -7114.0283 8919.7617 -7114.0122 8919.666 C
-7114.1904 8919.5352 -7114.2344 8919.6523 -7114.3975 8919.7246 C
-7114.3608 8919.6582 -7114.7539 8919.4639 -7114.9521 8919.3066 C
-7115.1992 8919.4395 -7115.1143 8919.6797 -7115.1392 8919.8262 C
-7115.3652 8919.3867 -7115.8379 8920.1094 -7116.1211 8919.7109 C
-7116.0352 8919.6494 -7115.7598 8919.4951 -7115.9658 8919.3848 C
-7116.1919 8918.9463 -7116.4219 8919.709 -7116.7861 8919.498 C
-7116.6968 8919.8623 L
-7116.8594 8919.6367 -7117.2334 8920.0742 -7117.1963 8919.7031 C
-7117.3184 8919.834 -7117.6265 8919.582 -7117.5859 8919.9375 C
-7118.1846 8919.6367 -7119.0425 8920.1191 -7119.4102 8919.4814 C
-7119.4961 8919.541 -7119.7104 8919.4805 -7119.6665 8919.6631 C
-7119.5239 8919.8613 -7119.4673 8919.5215 -7119.4141 8919.6563 C
-7119.4912 8919.667 -7119.5078 8919.7646 -7119.5161 8919.8135 C
-7119.7021 8919.7324 -7119.8486 8919.707 -7119.6729 8919.4111 C
-7120.0869 8919.1914 -7120.1001 8920.0156 -7120.6274 8919.877 C
-7120.6035 8919.7295 -7120.6436 8919.6738 -7120.7979 8919.6973 C
-7121.0903 8919.9492 L
-7121.4312 8919.8906 -7121.2842 8919.6143 -7121.2925 8919.3652 C
-7121.4746 8919.4082 -7121.6973 8919.3965 -7121.7803 8919.582 C
-7122.0015 8919.2695 L
-7121.8398 8919.4951 -7122.1514 8919.4199 -7122.2368 8919.4805 C
-7122.1514 8919.4199 L
-7122.1846 8919.3135 -7122.3955 8919.3789 -7122.5024 8919.4102 C
-7122.4766 8919.5645 -7122.2617 8919.627 -7122.1445 8919.6719 C
-7122.2373 8919.7813 -7122.3823 8919.7559 -7122.5059 8919.8848 C
-7122.4648 8919.6406 -7122.8027 8919.7109 -7122.9473 8919.6855 C
-7123.1133 8919.6318 -7123.1348 8919.9043 -7123.1831 8919.8965 C
-7123.1875 8919.7695 -7123.4541 8919.875 -7123.3247 8919.6973 C
-7123.2681 8919.6563 -7123.1953 8919.8203 -7123.1016 8919.709 C
-7123.2109 8919.6143 -7123.1982 8919.3936 -7123.4258 8919.5547 C
-7123.5967 8919.6758 -7123.3818 8920.0371 -7123.7061 8919.8828 C
-7123.6211 8919.8223 -7123.6055 8919.7246 -7123.5391 8919.6367 C
-7123.8433 8919.5098 L
-7123.8564 8919.7324 L
-7123.8975 8919.6758 -7123.8691 8919.6563 -7123.8877 8919.627 C
-7123.9785 8919.8613 -7124.3521 8919.6982 -7124.4209 8919.9629 C
-7124.5742 8919.9863 -7124.7441 8919.8086 -7124.8906 8919.7822 C
-7124.8623 8919.7637 L
-7125.0415 8919.6318 -7125.2793 8919.7188 -7125.4297 8919.8691 C
-7125.4219 8919.8203 L
-7125.5195 8919.8027 -7125.7505 8919.8379 -7125.8735 8919.9688 C
-7126.1201 8919.7998 -7125.9561 8919.1279 -7126.2295 8919.4082 C
-7126.48 8919.415 -7126.6221 8919.8164 -7126.5215 8919.959 C
-7126.9717 8919.8086 -7127.4834 8920.1719 -7127.9009 8919.8262 C
-7127.9658 8919.915 -7127.9248 8919.9727 -7128.0586 8920.0254 C
-7128.7197 8919.9375 -7129.4551 8920.2891 -7129.9814 8919.8516 C
-7129.79 8919.7578 -7129.9688 8919.6289 -7129.9727 8919.502 C
-7130.1309 8919.7012 -7130.1631 8919.2949 -7130.2197 8919.6367 C
-7130.2041 8919.8379 -7130.2197 8919.9355 -7130.0337 8920.0166 C
-7130.4282 8920.125 -7131.0283 8920.125 -7131.2471 8919.9375 C
-7131.1377 8920.0303 -7131.2227 8920.0918 -7131.3086 8920.1523 C
-7131.2803 8919.8311 -7131.5713 8919.7822 -7131.7915 8919.8965 C
-7131.8223 8920.0918 L
-7131.9658 8919.8906 L
-7132.0503 8919.9531 -7132.0591 8920.2998 -7132.2773 8920.1133 C
-7132.2891 8920.0371 -7132.3018 8919.96 -7132.3418 8919.9043 C
-7132.5693 8920.0645 -7132.8906 8920.3359 -7133.1377 8920.1699 C
-7133.3398 8919.8848 L
-7133.4453 8919.915 -7133.6235 8920.0879 -7133.4375 8920.1699 C
-7133.8594 8919.998 -7134.1309 8919.9766 -7134.2646 8919.7295 C
-7134.9912 8920.3311 -7136.0459 8920.3555 -7136.8906 8920.3125 C
-7136.8652 8920.166 L
-7137.0923 8920.0293 -7136.9834 8920.4219 -7137.1416 8920.3203 C
-7137.0684 8920.1807 -7137.3145 8920.0166 -7137.1362 8919.8447 C
-7137.4609 8919.6914 -7137.5547 8920.0996 -7137.7656 8920.166 C
-7137.7979 8920.3574 -7137.5957 8920.043 -7137.6367 8920.2871 C
-7137.6729 8920.3555 -7138.0859 8920.1367 -7138.1362 8920.4277 C
-7138.2178 8920.3135 -7138.1543 8920.0996 -7138.1104 8919.9814 C
-7138.3086 8920.123 L
-7138.5513 8919.7822 -7137.7559 8919.5156 -7138.0107 8919.0967 C
-7138.1934 8919.1426 L
-7138.3682 8918.8379 -7137.71 8918.7988 -7138.1689 8918.6943 C
-7138.3682 8918.8379 -7138.5381 8919.2598 -7138.3608 8919.3887 C
-7138.7754 8919.4688 -7138.5527 8920.082 -7138.9985 8920.0566 C
-7139.1201 8919.8867 -7138.6416 8920.0166 -7138.7275 8919.7773 C
-7138.9375 8919.543 -7139.1484 8919.9082 -7139.3354 8919.8262 C
-7139.1279 8919.9355 -7139.3032 8920.2295 -7139.4375 8920.2822 C
-7139.6641 8920.1455 -7139.29 8920.0078 -7139.6113 8919.9775 C
-7139.6641 8920.1455 -7139.9595 8920.2715 -7139.7041 8920.3887 C
-7139.8203 8920.7695 -7140.0381 8920.2822 -7140.2129 8920.5781 C
-7140.3174 8920.3105 -7139.8823 8919.959 -7140.2354 8919.8252 C
-7140.1792 8920.083 -7140.6704 8920.1758 -7140.4839 8920.5586 C
-7140.6221 8920.4844 -7140.6367 8920.2813 -7140.5361 8920.123 C
-7140.7334 8919.9639 -7141.0151 8920.5938 -7141.0801 8920.082 C
-7141.1479 8920.3457 L
-7141.21 8920.2598 -7141.2983 8920.1953 -7141.3994 8920.0527 C
-7141.5732 8920.0479 -7141.96 8920.4102 -7141.9443 8920.0117 C
-7142 8920.0527 -7142.3975 8920.0352 -7142.2441 8920.3105 C
-7141.9971 8920.4785 -7141.96 8920.1094 -7141.8223 8920.4814 C
-7141.9971 8920.1777 -7142.1787 8920.5215 -7142.3213 8920.623 C
-7142.3447 8920.4688 L
-7142.4297 8920.5293 -7142.6255 8920.4951 -7142.6787 8920.6621 C
-7142.6133 8920.5742 -7142.6475 8920.4688 -7142.7148 8920.4316 C
-7142.8042 8920.666 L
-7143.1494 8920.7822 -7142.8857 8920.2539 -7143.2217 8920.3223 C
-7142.9663 8920.1406 L
-7143.0225 8920.1797 -7143.1367 8919.96 -7143.2979 8920.0332 C
-7143.3604 8920.2471 -7143.4775 8920.5039 -7143.5313 8920.6699 C
-7143.7207 8920.7637 -7143.6162 8920.4287 -7143.8027 8920.6484 C
-7143.5586 8920.3906 L
-7143.5215 8920.3203 -7143.7231 8920.0371 -7143.9761 8920.043 C
-7144.1377 8920.1172 -7144.3887 8920.4258 -7144.1338 8920.543 C
-7144.2607 8920.5469 -7144.4385 8920.415 -7144.3379 8920.2598 C
-7144.6255 8920.334 -7144.2998 8920.4902 -7144.5479 8920.623 C
-7144.6494 8920.4805 -7144.9658 8920.2773 -7145.1563 8920.0703 C
-7144.8975 8919.7119 L
-7145.0693 8919.709 L
-7144.8467 8919.4219 -7145.1826 8919.4902 -7145.0566 8919.1875 C
-7145.1743 8919.1406 -7145.3169 8919.2432 -7145.4307 8919.3223 C
-7145.0864 8919.8066 -7145.8159 8919.9844 -7145.7158 8920.4258 C
-7146.1875 8920.5469 -7146.0107 8919.3516 -7146.5024 8920.043 C
-7146.4219 8920.1582 -7146.6533 8920.4941 -7146.3564 8920.3662 C
-7146.6494 8920.3184 -7146.5557 8920.8096 -7146.9014 8920.627 C
-7146.6455 8920.4453 -7147.1763 8920.1797 -7146.8066 8919.915 C
-7146.8311 8920.0625 -7146.6001 8920.0273 -7146.5435 8919.9863 C
-7146.6641 8919.8164 -7146.5186 8919.541 -7146.8184 8919.541 C
-7147.0015 8919.583 -7147.2524 8919.5918 -7147.2158 8919.8223 C
-7147.2085 8920.0742 -7146.9365 8919.7949 -7147.0537 8920.0508 C
-7147.4185 8920.1387 -7147.4795 8919.7539 -7147.6304 8920.2031 C
-7147.3999 8920.167 -7147.3423 8920.4277 -7147.3467 8920.6016 C
-7147.6143 8920.707 L
-7147.5625 8920.5391 L
-7147.9922 8920.418 -7147.6895 8920.8438 -7148.1055 8920.7988 C
-7148.3008 8920.4668 L
-7148.2017 8920.1807 -7147.6953 8920.5938 -7147.7695 8920.1279 C
-7148.04 8920.1094 -7148.1299 8920.3457 -7148.3848 8920.2246 C
-7148.3281 8920.1855 -7148.2505 8920.1738 -7148.1943 8920.1318 C
-7148.2915 8920.1172 -7148.3877 8919.499 -7148.7734 8919.8613 C
-7148.9727 8920.002 -7148.8262 8920.0273 -7148.8311 8920.2012 C
-7149.2656 8920.2539 -7149.3955 8920.4316 -7149.6753 8920.459 C
-7149.6177 8920.1191 -7150.1699 8920.4258 -7149.8608 8920.0781 C
-7149.7188 8920.2773 -7149.0903 8920.2578 -7148.9365 8919.9326 C
-7149.0947 8919.5303 -7148.5952 8919.9902 -7148.5024 8919.582 C
-7148.8506 8919.5723 -7148.8335 8919.1758 -7148.8896 8918.915 C
-7148.9863 8918.8975 -7149.0801 8919.0078 -7149.1377 8919.0479 C
-7149.1787 8919.293 -7149.0522 8919.2891 -7149.0449 8919.541 C
-7149.4336 8919.4746 -7149.8081 8919.6113 -7150.0225 8919.8486 C
-7150.1523 8919.7285 -7150.1113 8919.4844 -7149.9575 8919.4609 C
-7150.4199 8919.5332 -7150.9141 8919.499 -7151.3535 8919.4258 C
-7151.0693 8919.8252 -7151.8433 8919.5195 -7151.6494 8919.8516 C
-7151.4141 8919.9414 -7151.2119 8920.2246 -7151.3418 8920.4043 C
-7151.4888 8920.3789 -7151.3369 8920.2295 -7151.3984 8920.1445 C
-7151.5859 8920.3623 -7151.6895 8919.7949 -7151.8735 8920.1387 C
-7151.4512 8920.0098 -7151.7915 8919.6523 -7151.7139 8919.3398 C
-7152.0186 8919.5156 -7151.7007 8919.1172 -7152.0024 8919.1172 C
-7152.3057 8919.291 -7152.6787 8919.4277 -7153.0161 8919.4951 C
-7153.4399 8919.1982 -7154.0898 8919.4902 -7154.4683 8919.502 C
-7154.6665 8919.3438 -7154.5322 8918.9902 -7154.7471 8918.9287 C
-7154.9995 8918.9355 -7154.5601 8919.3105 -7154.9336 8919.1484 C
-7154.8975 8919.0781 L
-7155.0107 8919.1602 -7155.5825 8918.8379 -7155.6929 8919.3457 C
-7155.5776 8918.9629 L
-7155.6475 8918.9277 -7155.7119 8919.0156 -7155.7695 8919.0566 C
-7155.7725 8918.9316 -7155.8535 8918.8184 -7155.7402 8918.7363 C
-7155.9707 8918.4727 -7156.2241 8918.7783 -7156.4746 8918.7891 C
-7156.3135 8919.0156 L
-7156.7422 8919.1934 -7157.0293 8918.9688 -7157.4443 8919.0479 C
-7157.4316 8918.8262 L
-7157.6787 8918.959 L
-7157.6182 8918.7441 -7157.8447 8918.6055 -7157.9751 8918.7852 C
-7157.3335 8918.2422 L
-7157.1553 8918.373 -7157.5283 8918.5098 -7157.4165 8918.7285 C
-7157.3213 8918.9199 -7156.9375 8918.8594 -7156.8755 8918.6455 C
-7157.0225 8918.6211 -7157.0293 8918.6699 -7157.1436 8918.75 C
-7157.1919 8918.4414 -7156.9688 8918.4531 -7156.8584 8918.2471 C
-7156.9355 8918.2598 -7157.0449 8918.166 -7157.0615 8918.2637 C
-7156.9102 8918.1133 -7156.7578 8918.0898 -7156.5059 8918.082 C
-7156.6763 8918.2031 -7156.4131 8918.2734 -7156.4775 8918.3613 C
-7156.4575 8918.0898 -7156.2168 8918.0059 -7155.9053 8918.082 C
-7155.6831 8918.3965 -7155.3208 8917.8799 -7154.96 8917.9668 C
-7155.1064 8918.2422 -7155.2935 8918.4629 -7155.5127 8918.5742 C
-7155.2861 8918.7119 -7155.2607 8918.5654 -7155.0337 8918.7051 C
-7154.9238 8918.499 -7154.8457 8918.1855 -7154.5503 8918.0605 C
-7154.5342 8918.2637 L
-7154.2666 8918.1602 -7154.2666 8917.8594 -7153.9258 8917.915 C
-7153.3418 8918.0156 -7152.7407 8918.0156 -7152.2949 8918.041 C
-7152.2783 8918.2432 L
-7152.0303 8917.8096 -7151.4521 8918.083 -7151.1182 8917.8906 C
-7150.5503 8918.0859 -7149.8848 8917.6973 -7149.5938 8918.0469 C
-7148.5913 8917.8906 -7147.7148 8917.7383 -7146.6768 8917.8125 C
-7146.8516 8918.1074 L
-7146.6655 8917.8906 -7146.7305 8918.2773 -7146.5479 8918.2334 C
-7146.7578 8917.998 -7146.2949 8917.9277 -7146.1665 8917.7471 C
-7145.7041 8917.9766 -7145.1104 8917.7266 -7144.7007 8917.5195 C
-7144.6846 8917.7227 L
-7144.2705 8917.3418 -7143.7759 8917.6758 -7143.2598 8917.7383 C
-7143.2007 8917.8223 -7143.1074 8918.0127 -7142.9536 8917.9902 C
-7142.6738 8917.6621 -7142.5273 8917.6855 -7142.1167 8917.4805 C
-7141.8169 8917.4805 -7141.3301 8917.5615 -7141.0254 8917.6895 C
-7139.8975 8917.2285 -7138.7456 8917.5234 -7137.5732 8917.2461 C
-7137.4888 8917.4844 L
-7136.3521 8916.9746 -7134.9541 8917.4375 -7133.9839 8917.1758 C
-7134.0776 8917.583 L
-7133.7734 8917.709 -7133.3843 8917.4766 -7133.4619 8917.1875 C
-7133.1567 8917.3125 -7132.7007 8916.9902 -7132.5068 8917.3252 C
-7132.1953 8917.4004 -7132.1255 8917.1367 -7131.8662 8917.082 C
-7131.2422 8917.2363 -7131.0107 8917.2012 -7130.4224 8917.125 C
-7130.5684 8917.0996 L
-7130.6328 8917.1895 -7130.6387 8917.3623 -7130.4922 8917.3887 C
-7130.2725 8917.2754 -7129.6846 8917.498 -7129.9033 8917.0117 C
-7129.2754 8917.293 -7128.4385 8916.7822 -7127.8271 8917.1621 C
-7127.8789 8917.0293 -7127.7246 8917.0039 -7127.6602 8916.9141 C
-7127.1089 8916.9082 -7126.5293 8917.1797 -7126.0898 8916.9531 C
-7126.0024 8917.0195 -7126.2295 8917.1797 -7126.0049 8917.1934 C
-7125.8721 8917.1426 -7126.0024 8917.0195 -7125.8384 8916.9453 C
-7124.9453 8916.6973 -7124.0303 8917.2012 -7123.2188 8917.1367 C
-7121.7754 8916.8799 -7120.2695 8917.0098 -7118.8867 8916.9668 C
-7118.9023 8917.0645 L
-7118.4395 8916.6914 -7117.8159 8917.4463 -7117.4463 8916.8848 C
-7117.3369 8916.9775 -7117.0283 8916.9287 -7117.1094 8917.1172 C
-7116.7407 8916.8535 -7116.0771 8917.3652 -7115.5439 8917.0303 C
-7115.5928 8917.0215 -7115.6211 8917.041 -7115.6777 8917.083 C
-7115.1392 8917.2988 -7114.6641 8917.0039 -7114.0957 8917.1982 C
-7114.1533 8917.2412 -7114.2583 8917.2715 -7114.2754 8917.3691 C
-7114.0557 8917.5566 -7113.7549 8916.957 -7113.6348 8917.4277 C
-7113.5088 8917.4238 -7113.5449 8917.1914 -7113.6221 8917.2051 C
-7112.3779 8917.3887 -7111.0498 8917.0879 -7109.7549 8916.9805 C
-7108.8271 8917.2607 -7109.6982 8917.7734 -7108.9663 8917.4219 C
-7108.9063 8917.5127 -7108.9229 8917.2422 -7108.9131 8917.3398 C
-7108.6299 8917.207 -7108.4717 8917.8652 -7108.2754 8917.6191 C
-7108.3564 8917.3301 -7108.1445 8917.457 -7108.1387 8917.2813 C
-7107.5713 8917.4688 -7107.4575 8917.7295 -7107.0098 8917.5098 C
-7107.0435 8917.6621 L
-7106.5186 8917.2324 -7105.9102 8917.4629 -7105.4673 8916.9668 C
-7102.5728 8916.877 -7099.7983 8916.6016 -7096.9761 8916.5439 C
-7094.1865 8916.6387 -7091.4551 8916.415 -7088.6221 8916.6797 C
-7087.9585 8917.0791 -7087.9087 8917.0684 -7087.1797 8916.9063 C
-7087.2095 8916.9707 -7087.2549 8916.9863 -7087.2061 8917.0469 C
-7087.1699 8916.7188 -7086.6929 8917.0156 -7086.6235 8916.7031 C
-7085.5762 8916.7637 -7084.6113 8916.6738 -7083.5337 8916.6719 C
-7083.7041 8916.707 -7083.7896 8916.9746 -7083.5869 8916.9531 C
-7083.3755 8916.7441 L
-7083.3408 8916.8359 L
-7083.2021 8916.7871 -7083.0513 8916.625 -7083.1943 8916.5195 C
-7080.4873 8916.2363 -7077.8242 8916.8945 -7075.1729 8916.8135 C
-7074.5435 8916.9502 -7073.6475 8916.8252 -7072.9629 8916.7578 C
-7070.9355 8917.1953 -7069.1079 8917.5479 -7067.0479 8917.2422 C
-7067.3169 8918.0898 -7068.1675 8918.2852 V
f-7158.2578 8918.0859 m
-7158.1855 8918.25 -7157.9497 8918.3398 -7158.1377 8918.5586 C
-7158.1611 8918.4043 -7158.2822 8918.2324 -7158.2578 8918.0859 C
f-7151.9619 8919.7734 m
-7151.9536 8919.7246 -7151.8721 8919.8398 -7151.8521 8919.8662 C
-7151.9297 8919.8789 -7152.0024 8920.0166 -7152.0645 8919.9316 C
-7151.9854 8919.9199 -7151.9976 8919.8418 -7151.9619 8919.7734 C
f-7150.3521 8919.8711 m
-7150.3765 8920.0166 -7150.7207 8920.1318 -7150.9238 8920.1494 C
-7150.3521 8919.8711 L
f-7148.8521 8920.4727 m
-7148.7227 8920.5957 -7148.7583 8920.6631 -7148.9326 8920.6582 C
-7148.9453 8920.582 -7148.8877 8920.543 -7148.8521 8920.4727 C
f-7148.7456 8920.1406 m
-7148.6211 8920.1367 -7148.5591 8920.2227 -7148.4985 8920.3066 C
-7148.5029 8920.1807 -7148.7871 8920.3848 -7148.7456 8920.1406 C
f-7145.4893 8920.5645 m
-7145.4111 8920.5527 -7145.2417 8920.4316 -7145.1689 8920.5938 C
-7145.2505 8920.4805 -7145.5498 8920.7783 -7145.4893 8920.5645 C
f-7143.9761 8920.3438 m
-7143.9272 8920.3535 -7143.9072 8920.3799 -7143.8506 8920.3398 C
-7143.7607 8920.4063 -7143.8555 8920.5127 -7143.9312 8920.5264 C
-7143.9761 8920.3438 L
f-7116.4287 8919.7578 m
-7116.5923 8919.8301 L
-7116.5684 8919.6855 L
-7116.4287 8919.7578 L
f-7104.3574 8919.75 m
-7104.1943 8919.6582 -7104.2441 8919.8867 -7104.2168 8919.9082 C
-7104.3643 8919.9238 -7104.1621 8919.7285 -7104.3574 8919.75 C
f-7097.8486 8919.0215 m
-7097.8984 8919.0254 L
-7097.8818 8918.7266 L
-7097.8486 8919.0215 L
fU%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 5)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7159 8920.8438 m
-7133.0591 8920.8438 L
-7133.0591 8894.8994 L
-7159 8894.8994 L
-7159 8920.8438 L
n*u
1 D
0 O
0.62 0.04 0.93 0 k
-7133.9858 8914.7588 m
-7133.2168 8914.8018 -7133.0718 8915.5898 -7133.4526 8915.6523 c
-7133.8086 8915.7109 -7133.9175 8915.9199 -7133.7866 8916.1025 c
-7133.6675 8916.2715 -7133.1934 8916.6533 -7133.0635 8916.7822 C
-7133.0615 8916.7822 -7133.0635 8919.5117 -7133.0635 8919.5127 c
-7133.0703 8920.3535 -7133.6494 8920.2432 -7134.3896 8920.8438 C
-7137.1104 8920.8438 L
-7137.2085 8920.7539 -7137.2993 8920.6543 -7137.3818 8920.543 c
-7137.6943 8920.1533 -7137.8774 8919.9971 -7138.0063 8919.9971 c
-7138.1377 8919.9971 -7138.1895 8920.127 -7138.2158 8920.3359 c
-7138.2417 8920.5166 -7138.4238 8920.5957 -7138.6318 8920.5957 c
-7138.8662 8920.5957 -7139.1006 8920.4658 -7139.1006 8920.2051 c
-7139.1006 8919.7363 -7139.1279 8917.4951 -7139.5186 8917.4951 c
-7139.5967 8917.4951 -7139.7002 8917.5742 -7139.8311 8917.7314 c
-7140.6025 8918.6875 -7142.0513 8920.0967 -7144.0176 8920.8438 C
-7149.5835 8920.8438 L
-7150.9722 8920.2959 -7151.9951 8919.3574 -7152.7495 8918.2773 c
-7154.8066 8915.335 -7155.0142 8915.0215 -7156.3423 8915.0215 c
-7157.1768 8915.0215 -7158.1919 8915.543 -7158.1919 8916.999 c
-7158.1919 8917.7051 -7157.4111 8918.668 -7156.6553 8918.668 c
-7155.9521 8918.668 -7155.5615 8918.1738 -7155.5615 8917.8086 c
-7155.5615 8917.7051 -7155.6665 8917.2871 -7155.6665 8917.21 c
-7155.6665 8916.7666 -7155.3535 8916.7666 -7155.2754 8916.7666 c
-7154.9897 8916.7666 -7154.7295 8917.1309 -7154.7295 8917.7051 c
-7154.7295 8918.5117 -7155.4585 8919.5791 -7156.6294 8919.5791 c
-7157.9839 8919.5791 -7159 8918.3818 -7159 8916.9756 c
-7159 8914.3965 -7156.8374 8914.1367 -7156.2646 8914.1367 c
-7155.5361 8914.1367 -7154.6504 8914.3965 -7154.1294 8914.8135 C
-7154.0254 8914.8916 -7153.9209 8914.9443 -7153.8433 8914.9443 c
-7153.6606 8914.9443 -7153.5303 8914.7334 -7153.5303 8914.4492 c
-7153.5303 8914.0332 -7152.4102 8909.5781 -7148.1382 8909.5781 c
-7146.8105 8909.5781 -7144.6753 8910.5947 -7144.6753 8913.043 c
-7144.6753 8915.5166 -7146.3154 8916.3252 -7147.3057 8916.3252 c
-7148.2959 8916.3252 -7149.4155 8915.4395 -7149.4155 8914.3184 c
-7149.4155 8912.9902 -7148.3218 8912.7051 -7147.9038 8912.7051 c
-7147.5137 8912.7051 -7147.0713 8912.834 -7146.9663 8913.1211 C
-7146.8623 8913.459 -7146.7329 8913.6406 -7146.5498 8913.6406 c
-7146.4722 8913.6406 -7145.8462 8913.5117 -7145.8462 8912.6768 c
-7145.8462 8910.751 -7147.9038 8910.542 -7148.4248 8910.542 c
-7150.3535 8910.542 -7152.6958 8912.7559 -7152.6958 8915.2822 c
-7152.6958 8918.5898 -7149.7534 8920.3359 -7146.7583 8920.3359 c
-7143.6064 8920.3359 -7142.4097 8918.5381 -7142.4097 8918.2246 c
-7142.4097 8917.9902 -7143.6592 8917.5479 -7143.6592 8917.3398 c
-7143.6592 8917.002 -7142.9561 8916.1426 -7142.2266 8916.1426 c
-7140.6631 8916.1426 -7139.96 8914.918 -7139.96 8914.1895 c
-7139.96 8914.0566 -7140.0386 8913.9805 -7140.1943 8913.9805 c
-7140.4033 8913.9805 -7141.2622 8914.1621 -7141.4458 8914.1621 c
-7142.0967 8914.1621 -7143.2314 8914.1074 -7143.9678 8912.999 c
-7144.5854 8912.0723 -7144.1143 8911.1572 -7144.3994 8910.4053 c
-7144.5352 8910.0449 -7145.9375 8908.791 -7145.9521 8908.6074 C
-7145.9727 8908.6289 L
-7146.1943 8908.6289 -7147.5566 8908.3125 -7148.7842 8907.375 C
-7148.7783 8907.4395 -7148.7744 8907.5059 -7148.7744 8907.5762 c
-7148.7744 8908.6973 -7149.8936 8909.582 -7150.8838 8909.582 c
-7151.8745 8909.582 -7153.5142 8908.7734 -7153.5142 8906.2998 c
-7153.5142 8904.29 -7152.0762 8903.2461 -7150.8262 8902.9375 C
-7150.6875 8901.6113 -7149.6494 8899.7734 -7147.3794 8899.7734 c
-7144.9058 8899.7734 -7144.0977 8901.4141 -7144.0977 8902.4053 c
-7144.0977 8903.3936 -7144.9834 8904.5127 -7146.1025 8904.5127 c
-7146.1934 8904.5127 -7146.2783 8904.5098 -7146.3599 8904.498 C
-7145.2471 8905.8604 -7145.0498 8907.5811 -7145.0498 8907.7061 C
-7144.6602 8908.4277 -7144.1743 8908.9844 v
-7143.3174 8909.9688 -7143.4995 8911.0469 -7143.2935 8911.7148 c
-7142.9185 8912.9414 -7142.4346 8911.6367 -7142.4346 8911.5059 c
-7142.4346 8911.4795 -7142.5391 8910.8291 -7142.5391 8910.7236 c
-7142.5391 8909.7617 -7141.9146 8909.4492 -7141.6802 8909.4492 c
-7141.1846 8909.4492 -7140.9248 8909.8389 -7140.9248 8910.3604 c
-7140.9248 8910.4902 -7140.9502 8910.6191 -7140.9766 8910.7764 C
-7141.1328 8911.4541 -7141.6802 8911.7148 -7141.6802 8912.2607 c
-7141.6802 8913.0166 -7141.0542 8913.2773 -7140.2998 8913.2773 C
-7138.8096 8913.749 -7138.4238 8914.7617 v
-7138.0386 8915.7734 -7138.4238 8916.4287 -7138.3721 8916.6885 c
-7137.8774 8919.5283 -7136.3408 8920.3359 -7135.8193 8920.3359 c
-7134.8286 8920.3359 -7134.3354 8919.4238 -7134.3354 8918.5117 c
-7134.3354 8917.8613 -7135.0913 8917.1055 -7135.2471 8916.8711 c
-7135.4287 8916.6113 -7136.2065 8915.6396 -7136.4272 8915.457 c
-7136.5088 8915.3887 -7136.9038 8915.168 -7137.0386 8914.8574 C
-7137.3335 8914.4688 -7137.3486 8914.2871 -7137.9814 8913.9063 c
-7138.5454 8913.5684 -7138.1265 8913.2607 Y
-7137.8394 8913.0273 -7137.7881 8912.3252 -7137.7881 8911.8037 c
-7137.7881 8910.8652 -7136.8232 8910.2412 -7136.5889 8910.2412 c
-7136.4595 8910.2412 -7136.3545 8910.3184 -7136.3545 8910.4492 C
-7136.4858 8911.0479 -7136.4858 8911.1523 v
-7136.4858 8911.2051 -7136.6934 8912.665 -7136.6665 8912.8037 C
-7136.4551 8912.8818 -7136.0635 8912.3848 -7135.6416 8911.9902 C
-7134.6958 8911.4941 -7133.5674 8909.1748 -7133.5674 8907.1406 c
-7133.5674 8903.8594 -7135.4951 8901.2031 -7138.8042 8901.2031 c
-7141.3286 8901.2031 -7143.3618 8903.1299 -7143.3618 8905.083 c
-7143.3618 8905.7334 -7143.0479 8907.6367 -7141.3286 8907.6367 c
-7140.7305 8907.6367 -7140.4697 8907.375 -7140.4697 8907.1143 c
-7140.4697 8906.9326 -7140.5742 8906.7236 -7140.7822 8906.4902 C
-7141.0166 8906.2549 -7141.1729 8905.8389 -7141.1729 8905.4746 c
-7141.1729 8905.2412 -7140.9385 8904.0918 -7139.5854 8904.0918 c
-7138.4648 8904.0918 -7137.5791 8905.2139 -7137.5791 8906.2031 c
-7137.5791 8907.1934 -7138.3857 8908.834 -7140.8608 8908.834 c
-7143.3096 8908.834 -7144.3247 8906.6982 -7144.3247 8905.3701 c
-7144.3247 8900.915 -7139.6631 8900.3691 -7139.4546 8900.3691 c
-7139.1685 8900.3691 -7138.96 8900.2383 -7138.96 8900.0566 c
-7138.96 8899.9775 -7139.0122 8899.874 -7139.0898 8899.7695 C
-7139.5073 8899.249 -7139.7666 8898.3623 -7139.7666 8897.6348 c
-7139.7666 8897.0605 -7139.5073 8894.8994 -7136.9282 8894.8994 c
-7135.5215 8894.8994 -7134.3232 8895.7324 -7134.3232 8897.0879 c
-7134.3232 8898.2598 -7135.3921 8898.9893 -7136.1982 8898.9893 c
-7136.7715 8898.9893 -7137.1362 8898.7285 -7137.1362 8898.4414 c
-7137.1362 8898.3623 -7137.1362 8898.0527 -7136.6934 8898.0527 c
-7136.6152 8898.0527 -7136.1982 8898.1563 -7136.0942 8898.1563 c
-7135.7295 8898.1563 -7135.2354 8897.7646 -7135.2354 8897.0605 c
-7135.2354 8896.2021 -7136.2246 8895.707 -7136.9014 8895.707 c
-7138.3599 8895.707 -7138.8818 8896.7227 -7138.8818 8897.5557 c
-7138.8818 8898.8848 -7138.5698 8899.0918 -7135.6265 8901.1494 c
-7134.5439 8901.9053 -7133.6064 8902.9287 -7133.0591 8904.3164 C
-7133.0591 8909.8818 L
-7133.4951 8911.0254 -7134.1538 8911.9932 -7134.8174 8912.7559 C
-7136.4351 8914.1914 -7136.5034 8914.6191 -7133.9858 8914.7588 c
f0 D
-7152.3169 8905.8301 m
-7152.3169 8906.4287 -7152.0562 8906.6914 -7151.7959 8906.6914 c
-7151.6138 8906.6914 -7151.4058 8906.5859 -7151.1714 8906.3779 C
-7150.9375 8906.1436 -7150.5195 8905.9883 -7150.1553 8905.9883 c
-7150.1338 8905.9883 -7150.1055 8905.9902 -7150.0713 8905.9941 C
-7150.4287 8905.4326 -7150.6943 8904.7637 -7150.7969 8903.9697 C
-7151.5313 8904.2031 -7152.3169 8904.7266 -7152.3169 8905.8301 c
f-7146.7798 8901.6484 m
-7146.7798 8901.5703 -7146.9102 8900.9453 -7147.7432 8900.9453 c
-7149.1538 8900.9453 -7149.6431 8902.0449 -7149.8047 8902.8418 C
-7148.9424 8902.875 -7148.2354 8903.0879 -7147.6538 8903.4092 C
-7147.7002 8903.251 -7147.7178 8903.1055 -7147.7178 8903.0039 c
-7147.7178 8902.6133 -7147.5874 8902.1699 -7147.3008 8902.0654 C
-7146.9614 8901.96 -7146.7798 8901.8311 -7146.7798 8901.6484 c
f-7145.9258 8907.7188 m
-7146.2158 8905.498 -7147.9785 8903.7988 -7149.7646 8903.7988 c
-7149.7935 8903.7988 -7149.8281 8903.7998 -7149.8633 8903.8018 C
-7149.6895 8905.4629 -7147.9912 8907.3262 -7145.9258 8907.7188 C
f*U
U%AI8_EndBrushPattern
%AI8_BeginBrushPattern
(Unnamed Brush Pat 7)
0 A
u0 J 0 j 1 w 4 M []0 d0 XR
-7108.0845 8920.8438 m
-7108.0845 8894.9014 L
-7159 8894.9014 L
-7159 8920.8438 L
-7108.0845 8920.8438 L
n*u
0 O
0.62 0.04 0.93 0 k
-7111.1978 8901.6738 m
-7111.3535 8901.543 -7111.4321 8901.4395 -7111.4321 8901.3613 c
-7111.4321 8900.9707 -7109.1914 8900.9443 -7108.7222 8900.9443 c
-7108.4614 8900.9443 -7108.3325 8900.71 -7108.3325 8900.4756 c
-7108.3325 8900.2666 -7108.4102 8900.085 -7108.5918 8900.0566 c
-7108.8008 8900.0332 -7108.9302 8899.9805 -7108.9302 8899.8486 c
-7108.9302 8899.7207 -7108.7744 8899.5381 -7108.3838 8899.2246 C
-7108.2734 8899.1426 -7108.1738 8899.0527 -7108.0845 8898.9541 C
-7108.0845 8896.2324 L
-7108.6831 8895.4902 -7109.7046 8895.0059 -7110.5449 8895.0059 c
-7111.1714 8895.0059 -7111.8745 8895.3711 -7112.1089 8895.6572 C
-7112.2383 8895.7871 -7112.3945 8895.8389 -7112.5503 8895.8389 c
-7112.7075 8895.8389 -7112.8374 8895.7871 -7112.8896 8895.6836 c
-7113.0718 8895.293 -7113.4102 8895.0332 -7113.8794 8895.0332 c
-7114.6353 8895.0332 -7117.5 8897.7148 -7117.5 8898.4688 c
-7117.5 8898.6006 -7117.3955 8898.6523 -7117.2129 8898.6523 c
-7116.9785 8898.6523 -7116.5879 8898.5479 -7116.2241 8898.3652 C
-7115.9897 8898.2607 -7114.8955 8897.4551 -7114.6079 8897.4551 c
-7114.2695 8897.4551 -7114.0352 8898.2607 -7113.6978 8898.2607 c
-7113.4102 8898.2607 -7112.3169 8897.2715 -7112.0566 8897.0898 c
-7111.8223 8896.9326 -7111.0664 8896.1777 -7110.4155 8896.1777 c
-7109.5039 8896.1777 -7108.5918 8896.6719 -7108.5918 8897.6621 c
-7108.5918 8898.1836 -7109.3994 8899.7207 -7112.2383 8900.2148 c
-7112.4995 8900.2666 -7113.8535 8900.2412 -7114.1665 8900.2666 c
-7114.4785 8900.293 -7116.0161 8899.8252 -7116.3535 8899.7461 c
-7117.3955 8899.5117 -7117.4736 8899.5117 -7119.4272 8899.5117 c
-7119.5576 8899.5117 -7119.6362 8899.5117 -7119.6362 8899.4326 c
-7119.6362 8899.3818 -7119.6094 8899.3037 -7119.5313 8899.2002 C
-7119.2705 8898.8086 -7119.0361 8898.2871 -7119.0361 8897.6885 c
-7119.0361 8896.3604 -7120.3906 8895.0059 -7121.9014 8895.0059 c
-7124.8184 8895.0059 -7124.8184 8896.7246 -7124.8184 8896.959 c
-7124.8184 8897.5059 -7124.4795 8898.626 -7123.2295 8898.626 c
-7122.5264 8898.626 -7122.2402 8898.2871 -7122.2402 8897.9746 c
-7122.2402 8897.7412 -7122.3706 8897.5586 -7122.5527 8897.4805 c
-7122.8135 8897.375 -7122.9175 8897.2461 -7122.9175 8897.1162 c
-7122.9175 8896.8555 -7122.5527 8896.6211 -7122.1094 8896.6211 c
-7121.3022 8896.6211 -7120.5474 8897.4023 -7120.5474 8898.0527 c
-7120.5474 8900.1367 -7124.8975 8900.7363 -7125.1313 8900.7363 c
-7125.4185 8900.7363 -7125.6777 8900.6582 -7125.8862 8900.3457 C
-7128.1255 8897.2227 -7132.0273 8894.9063 -7133.54 8894.9023 C
-7133.54 8894.9023 L
-7133.5415 8894.9023 -7133.5415 8894.9023 -7133.5425 8894.9023 c
-7133.5435 8894.9023 -7133.5435 8894.9023 -7133.5439 8894.9023 C
-7133.5439 8894.9023 L
-7135.5498 8894.9053 -7139.1675 8897.4814 -7141.1978 8900.3457 c
-7141.4063 8900.6582 -7141.6665 8900.7363 -7141.9526 8900.7363 c
-7143.3071 8900.7363 -7146.8496 8899.5635 -7146.8496 8897.6885 c
-7146.8496 8897.1162 -7146.5103 8896.6719 -7145.8081 8896.6719 c
-7145.1558 8896.6719 -7144.7134 8896.8555 -7144.7134 8897.0635 c
-7144.7134 8897.168 -7144.8706 8897.2979 -7145.1558 8897.4287 C
-7145.3135 8897.4805 -7145.4175 8897.6621 -7145.4175 8897.8711 c
-7145.4175 8898.3398 -7145 8898.9395 -7143.8281 8898.9395 c
-7142.6558 8898.9395 -7142.1875 8898.2354 -7142.1875 8897.5059 c
-7142.1875 8896.1777 -7143.3071 8894.9541 -7145.6777 8894.9541 c
-7147.6313 8894.9541 -7148.5679 8896.2031 -7148.5679 8897.2715 c
-7148.5679 8898.3398 -7147.9697 8898.7051 -7147.6826 8899.0693 c
-7147.5786 8899.2002 -7147.5264 8899.2773 -7147.5264 8899.3291 c
-7147.5264 8899.4082 -7147.6055 8899.4326 -7147.7607 8899.4326 c
-7148.3857 8899.4326 -7151.1729 8899.9023 -7151.7466 8899.9023 c
-7152.4751 8899.9023 -7158.4395 8899.9023 -7158.4395 8897.8447 c
-7158.4395 8896.8799 -7157.6846 8896.3867 -7156.7983 8896.3867 c
-7156.1475 8896.3867 -7155.2881 8897.3252 -7154.8457 8897.6367 c
-7154.1426 8898.1582 -7153.6206 8898.1582 Y
-7153.4648 8898.1582 -7153.3862 8898.1045 -7153.3599 8897.999 C
-7153.2305 8896.9854 -7153.1519 8896.7773 -7152.8662 8896.7773 c
-7152.3975 8896.7773 -7151.5898 8897.5332 -7151.4072 8897.9238 c
-7151.2778 8898.21 -7150.9902 8898.3398 -7150.7041 8898.3398 c
-7150.4185 8898.3398 -7150.0791 8898.21 -7150.0791 8897.7666 c
-7150.0791 8896.751 -7152.71 8895.0332 -7153.2046 8895.0332 c
-7153.6738 8895.0332 -7154.0122 8895.293 -7154.1943 8895.6836 c
-7154.2466 8895.7871 -7154.3774 8895.8389 -7154.5327 8895.8389 c
-7154.6895 8895.8389 -7154.8457 8895.7871 -7154.9761 8895.6572 C
-7155.21 8895.3711 -7155.9126 8895.0059 -7156.5386 8895.0059 c
-7157.3794 8895.0059 -7158.3999 8895.4902 -7159 8896.2324 C
-7159 8898.9092 L
-7158.9082 8899.0166 -7158.8081 8899.123 -7158.7002 8899.2246 C
-7158.4395 8899.4863 -7158.3359 8899.6406 -7158.3359 8899.7725 c
-7158.3359 8899.9287 -7158.9346 8900.3457 -7158.9346 8900.4756 c
-7158.9346 8901.1523 -7158.3882 8901.1523 -7157.1895 8901.1523 c
-7157.0063 8901.1523 -7156.1738 8901.1006 -7156.0176 8901.1006 c
-7155.7568 8901.1006 -7155.6274 8901.1797 -7155.6274 8901.3086 c
-7155.6274 8901.4131 -7155.7305 8901.543 -7155.8862 8901.6738 c
-7156.8442 8902.4453 -7158.2529 8903.8945 -7159 8905.8604 C
-7159 8911.4268 L
-7158.4526 8912.8154 -7157.5166 8913.8379 -7156.4336 8914.5938 c
-7153.4912 8916.6494 -7153.1782 8916.8574 -7153.1782 8918.1855 c
-7153.1782 8919.0195 -7153.6992 8920.0352 -7155.1582 8920.0352 c
-7155.8354 8920.0352 -7156.8242 8919.541 -7156.8242 8918.6807 c
-7156.8242 8917.9775 -7156.3306 8917.5879 -7155.9648 8917.5879 c
-7155.8618 8917.5879 -7155.4438 8917.6914 -7155.3662 8917.6914 c
-7154.9238 8917.6914 -7154.9238 8917.3789 -7154.9238 8917.2998 c
-7154.9238 8917.0146 -7155.2881 8916.7539 -7155.8618 8916.7539 c
-7156.6685 8916.7539 -7157.7358 8917.4814 -7157.7358 8918.6543 c
-7157.7358 8920.0098 -7156.5386 8920.8428 -7155.1318 8920.8428 c
-7152.5537 8920.8428 -7152.2935 8918.6807 -7152.2935 8918.1074 c
-7152.2935 8917.3789 -7152.5537 8916.4932 -7152.9702 8915.9717 C
-7153.0479 8915.8662 -7153.1006 8915.7637 -7153.1006 8915.6865 c
-7153.1006 8915.5039 -7152.8911 8915.373 -7152.6055 8915.373 c
-7152.3975 8915.373 -7147.7344 8914.8262 -7147.7344 8910.373 c
-7147.7344 8909.0449 -7148.7515 8906.9092 -7151.1992 8906.9092 c
-7153.6738 8906.9092 -7154.4814 8908.5498 -7154.4814 8909.5391 c
-7154.4814 8910.5293 -7153.5962 8911.6484 -7152.4751 8911.6484 c
-7151.1206 8911.6484 -7150.8862 8910.5029 -7150.8862 8910.2686 c
-7150.8862 8909.9053 -7151.0435 8909.4863 -7151.2778 8909.2529 C
-7151.4858 8909.0166 -7151.5898 8908.8096 -7151.5898 8908.627 c
-7151.5898 8908.3652 -7151.3286 8908.1074 -7150.7305 8908.1074 c
-7149.0122 8908.1074 -7148.6992 8910.0098 -7148.6992 8910.6582 c
-7148.6992 8912.6133 -7150.7305 8914.5391 -7153.2568 8914.5391 c
-7156.5649 8914.5391 -7158.4922 8911.8838 -7158.4922 8908.6016 c
-7158.4922 8906.3105 -7157.0586 8903.6533 -7156.0698 8903.6533 c
-7155.6519 8903.6533 -7155.5742 8904.4326 -7155.5742 8904.5908 c
-7155.5742 8904.6943 -7155.7046 8905.2939 Y
-7155.7046 8905.4238 -7155.6006 8905.502 -7155.4702 8905.502 c
-7155.2358 8905.502 -7154.2729 8904.877 -7154.2729 8903.9395 c
-7154.2729 8903.4189 -7154.2207 8902.7148 -7153.9336 8902.4805 c
-7153.7524 8902.3252 -7152.5801 8901.8037 -7152.3457 8901.8037 c
-7152.2144 8901.8037 -7152.1367 8901.8818 -7152.1367 8902.0391 c
-7152.1367 8902.2461 -7152.3193 8903.1582 -7152.3193 8903.3398 c
-7152.3193 8904.7207 -7151.5122 8905.7363 -7150.0527 8905.7363 c
-7149.8975 8905.7363 -7149.3242 8905.7109 -7149.3242 8905.4766 c
-7149.3242 8905.3457 -7149.8711 8904.9805 -7149.8711 8904.8516 c
-7149.8711 8904.7207 -7149.7935 8904.6406 -7149.6626 8904.6406 c
-7149.6367 8904.6406 -7148.9858 8904.7461 -7148.8809 8904.7461 c
-7147.9175 8904.7461 -7147.6055 8904.1221 -7147.6055 8903.8877 c
-7147.6055 8903.3926 -7147.9951 8903.1318 -7148.5166 8903.1318 c
-7148.6465 8903.1318 -7148.7778 8903.1582 -7148.9336 8903.1846 C
-7149.6104 8903.3398 -7149.8711 8903.8877 -7150.4185 8903.8877 c
-7151.1729 8903.8877 -7151.4336 8902.8975 -7151.4336 8902.1426 c
-7151.4336 8901.2295 -7149.8184 8900.6836 -7148.0991 8900.6836 c
-7146.1465 8900.6836 -7142.5786 8902.0908 -7142.5786 8902.8193 C
-7143.6982 8906.1016 -7143.8545 8906.7266 v
-7143.9063 8906.96 -7143.9839 8907.0645 -7144.0889 8907.0645 c
-7144.4282 8907.0645 -7145.0527 8905.3711 -7145.3394 8905.3711 c
-7145.7031 8905.3711 -7145.9121 8906.4141 -7145.9121 8907.5596 c
-7145.9121 8911.0742 -7143.6465 8916.1807 -7143.1504 8916.9102 c
-7143.0474 8917.0654 -7142.9946 8917.1973 -7142.9946 8917.3262 c
-7142.9946 8917.5352 -7143.1504 8917.6914 -7143.3857 8917.6914 c
-7143.4639 8917.6914 -7146.8496 8916.4404 -7146.8496 8915.7119 c
-7146.8496 8915.5557 -7146.7969 8915.4258 -7146.7969 8915.2949 c
-7146.7969 8914.8789 -7147.0313 8914.6973 -7147.5786 8914.6973 c
-7148.3857 8914.6973 -7148.4385 8915.0605 -7148.4385 8915.2695 c
-7148.4385 8915.4785 -7148.3857 8915.7383 -7148.3857 8916.2852 c
-7148.3857 8916.5195 -7148.4639 8917.249 -7148.6729 8917.2998 c
-7149.4814 8917.4814 -7150.2617 8918.0039 -7150.2617 8918.3682 c
-7150.2617 8918.915 -7149.5054 8920.3477 -7149.1934 8920.3477 c
-7148.7246 8920.3477 -7147.7344 8918.082 -7147.3706 8918.082 c
-7147.1626 8918.082 -7146.4849 8920.4785 -7146.0425 8920.4785 c
-7145.8594 8920.4785 -7145.6514 8920.2432 -7145.6514 8919.8789 c
-7145.6514 8919.3066 -7146.1465 8918.4727 -7146.1465 8918.082 c
-7146.1465 8917.8994 -7146.0688 8917.7949 -7145.9121 8917.7949 c
-7145.5728 8917.7949 -7144.2715 8918.4463 -7142.5786 8919.3066 c
-7141.1978 8919.9814 -7140.1816 8920.8428 -7138.4102 8920.8428 c
-7135.6504 8920.8428 -7133.6455 8918.9688 -7133.6455 8915.5039 c
-7133.6455 8914.4355 -7133.8262 8913.29 -7134.1138 8912.1182 c
-7134.2954 8911.3877 -7135.5454 8908.2109 -7135.5454 8907.5342 c
-7135.5454 8907.2471 -7135.4414 8907.1172 -7135.2334 8907.1172 c
-7135.0513 8907.1172 -7134.2974 8907.4023 -7133.5439 8907.4033 C
-7133.5439 8907.4033 L
-7133.5435 8907.4033 -7133.5435 8907.4033 -7133.5425 8907.4033 c
-7133.5415 8907.4033 -7133.5415 8907.4033 -7133.54 8907.4033 C
-7133.54 8907.4033 L
-7132.7866 8907.4023 -7132.0337 8907.1172 -7131.8506 8907.1172 c
-7131.6426 8907.1172 -7131.5386 8907.2471 -7131.5386 8907.5342 c
-7131.5386 8908.2109 -7132.7881 8911.3877 -7132.9702 8912.1182 c
-7133.2568 8913.29 -7133.4395 8914.4355 -7133.4395 8915.5039 c
-7133.4395 8918.9688 -7131.4336 8920.8428 -7128.6729 8920.8428 c
-7126.9023 8920.8428 -7125.8862 8919.9814 -7124.5054 8919.3066 c
-7122.8135 8918.4463 -7121.5103 8917.7949 -7121.1719 8917.7949 c
-7121.0161 8917.7949 -7120.9375 8917.8994 -7120.9375 8918.082 c
-7120.9375 8918.4727 -7121.4326 8919.3066 -7121.4326 8919.8789 c
-7121.4326 8920.2432 -7121.2246 8920.4785 -7121.0425 8920.4785 c
-7120.5474 8920.4785 -7119.8706 8917.665 -7119.6362 8917.665 c
-7119.3755 8917.665 -7119.0098 8918.8887 -7118.7231 8919.9316 c
-7118.5938 8920.4258 -7118.2554 8920.6074 -7117.9688 8920.6074 c
-7117.6035 8920.6074 -7117.2393 8920.3477 -7117.2393 8919.9814 c
-7117.2393 8919.8535 -7117.2915 8919.6973 -7117.3955 8919.541 c
-7119.2705 8916.6758 -7118.8018 8915.3223 -7119.0625 8914.7734 c
-7119.1665 8914.5654 -7119.4785 8914.4619 -7119.7656 8914.4619 c
-7120.2344 8914.4619 -7120.2344 8914.5938 -7120.2344 8915.7119 c
-7120.2344 8916.4404 -7123.6201 8917.6914 -7123.6982 8917.6914 c
-7123.9326 8917.6914 -7124.0889 8917.5352 -7124.0889 8917.3262 c
-7124.0889 8917.1973 -7124.0366 8917.0654 -7123.9326 8916.9102 c
-7123.4375 8916.1807 -7121.1719 8911.0742 -7121.1719 8907.5596 c
-7121.1719 8906.4141 -7121.3809 8905.3711 -7121.7446 8905.3711 c
-7122.0845 8905.3711 -7122.6313 8907.5078 -7123.0215 8907.5078 c
-7123.2295 8907.5078 -7124.0889 8903.9131 -7124.3755 8903.2627 c
-7124.4546 8903.0791 -7124.5054 8902.9238 -7124.5054 8902.8193 c
-7124.5054 8902.0908 -7120.9375 8900.6836 -7118.9839 8900.6836 c
-7117.2656 8900.6836 -7115.6504 8901.2295 -7115.6504 8902.1426 c
-7115.6504 8902.8975 -7115.9111 8903.5234 -7116.6665 8903.5234 c
-7117.2129 8903.5234 -7117.4736 8902.9756 -7118.1504 8902.8193 C
-7118.3066 8902.7939 -7118.4375 8902.7676 -7118.5674 8902.7676 c
-7119.0879 8902.7676 -7119.4785 8903.0283 -7119.4785 8903.5234 c
-7119.4785 8903.7578 -7119.1665 8904.3828 -7118.2031 8904.3828 c
-7118.0986 8904.3828 -7117.4473 8904.2773 -7117.4214 8904.2773 c
-7117.2915 8904.2773 -7117.2129 8904.3564 -7117.2129 8904.4863 c
-7117.2129 8904.6172 -7117.7598 8904.9805 -7117.7598 8905.1104 c
-7117.7598 8905.3457 -7117.1875 8905.3711 -7117.0313 8905.3711 c
-7116.0674 8905.3711 -7114.7646 8904.7461 -7114.7646 8903.2891 c
-7114.7646 8903.1055 -7114.9473 8902.2461 -7114.9473 8902.0391 c
-7114.9473 8901.8818 -7114.8687 8901.8037 -7114.7393 8901.8037 c
-7114.0098 8901.8037 -7112.7856 8902.5078 -7112.7856 8904.0703 c
-7112.7856 8904.7988 -7111.9258 8905.502 -7111.5879 8905.502 c
-7111.3794 8905.502 -7110.9375 8904.252 -7110.7026 8904.252 c
-7110.3887 8904.252 -7108.5918 8905.4502 -7108.5918 8908.6016 c
-7108.5918 8911.5967 -7110.3374 8914.5391 -7113.6455 8914.5391 c
-7116.1719 8914.5391 -7118.3848 8912.1973 -7118.3848 8910.2686 c
-7118.3848 8909.7471 -7118.1768 8907.6895 -7116.25 8907.6895 c
-7115.4165 8907.6895 -7115.2866 8908.3154 -7115.2866 8908.3926 c
-7115.2866 8908.5762 -7115.4688 8908.7061 -7115.8066 8908.8096 C
-7116.0938 8908.9141 -7116.2241 8909.3574 -7116.2241 8909.7471 c
-7116.2241 8910.1631 -7115.9375 8911.2578 -7114.6079 8911.2578 c
-7113.4878 8911.2578 -7112.6035 8910.1387 -7112.6035 8909.1484 c
-7112.6035 8908.1582 -7113.4102 8906.5166 -7115.8848 8906.5166 c
-7118.3335 8906.5166 -7119.3486 8908.6543 -7119.3486 8909.9814 c
-7119.3486 8914.2539 -7114.8955 8915.373 -7114.4785 8915.373 c
-7114.1914 8915.373 -7113.9834 8915.5039 -7113.9834 8915.6865 c
-7113.9834 8915.7637 -7114.0352 8915.8662 -7114.1138 8915.9717 C
-7114.5303 8916.4932 -7114.7915 8917.3789 -7114.7915 8918.1074 c
-7114.7915 8918.6807 -7114.5303 8920.8428 -7111.9521 8920.8428 c
-7110.5449 8920.8428 -7109.3481 8919.8262 -7109.3481 8918.4727 c
-7109.3481 8917.2998 -7110.4155 8916.5723 -7111.2222 8916.5723 c
-7111.7959 8916.5723 -7112.1602 8916.8311 -7112.1602 8917.1191 c
-7112.1602 8917.1973 -7112.1602 8917.5098 -7111.7178 8917.5098 c
-7111.6401 8917.5098 -7111.2222 8917.4053 -7111.1182 8917.4053 c
-7110.7534 8917.4053 -7110.2593 8917.7949 -7110.2593 8918.498 c
-7110.2593 8919.2539 -7111.2222 8920.0352 -7111.9258 8920.0352 c
-7113.3848 8920.0352 -7113.9058 8919.0195 -7113.9058 8918.1855 c
-7113.9058 8916.8574 -7113.5928 8916.6494 -7110.6494 8914.5938 c
-7109.5674 8913.8379 -7108.6313 8912.8154 -7108.0845 8911.4268 C
-7108.0845 8905.8604 L
-7108.8311 8903.8945 -7110.2402 8902.4453 -7111.1978 8901.6738 c
f1 D
-7134.6338 8915.2949 m
-7134.6338 8918.1602 -7136.1978 8919.5938 -7137.1602 8919.5938 c
-7137.7075 8919.5938 -7139.6606 8918.7324 -7139.6606 8916.3887 c
-7139.6606 8915.9199 -7139.6094 8915.4258 -7139.5835 8915.0098 c
-7139.5313 8914.2539 -7139.2441 8913.8623 -7138.75 8913.4453 c
-7138.4375 8913.1855 -7137.6289 8912.4814 -7137.6289 8911.5967 c
-7137.6289 8910.8926 -7138.3066 8909.7471 -7139.6094 8909.7471 c
-7140.2085 8909.7471 -7141.6665 8910.0098 -7141.6665 8913.1602 c
-7141.6665 8915.8164 -7140.7295 8917.5879 -7140.5718 8917.8223 C
-7140.4946 8917.9775 -7140.4424 8918.082 -7140.4424 8918.1602 c
-7140.4424 8918.2383 -7140.4946 8918.29 -7140.5474 8918.29 c
-7141.4849 8918.29 -7142.9165 8914.9814 -7142.9165 8912.0127 c
-7142.9165 8909.8262 -7141.3799 8904.7988 -7139.9736 8904.7988 c
-7138.4897 8904.7988 -7134.6338 8910.4512 -7134.6338 8915.2949 c
f-7133.54 8904.9023 m
-7133.54 8904.9023 L
-7133.5415 8904.9023 -7133.5415 8904.9023 -7133.5425 8904.9023 c
-7133.5435 8904.9023 -7133.5435 8904.9023 -7133.5439 8904.9023 C
-7133.5439 8904.9023 L
-7134.5313 8904.9053 -7135.3374 8905.2422 -7135.8584 8905.7891 c
-7135.9634 8905.8926 -7136.0928 8905.9707 -7136.2222 8905.9707 c
-7136.6401 8905.9707 -7138.8535 8904.252 -7138.8535 8902.9238 c
-7138.8535 8901.5166 -7135.6504 8899.6162 -7133.54 8899.1211 C
-7133.54 8899.0957 L
-7130.8594 8899.9551 -7128.2305 8901.5957 -7128.2305 8902.9238 c
-7128.2305 8904.252 -7130.4438 8905.9707 -7130.8618 8905.9707 c
-7130.9912 8905.9707 -7131.1206 8905.8926 -7131.2256 8905.7891 c
-7131.7466 8905.2422 -7132.5518 8904.9053 -7133.54 8904.9023 C
f-7124.1685 8912.0127 m
-7124.1685 8914.9814 -7125.6001 8918.29 -7126.5366 8918.29 c
-7126.5898 8918.29 -7126.6416 8918.2383 -7126.6416 8918.1602 c
-7126.6416 8918.082 -7126.5898 8917.9775 -7126.5122 8917.8223 C
-7126.3555 8917.5879 -7125.4185 8915.8164 -7125.4185 8913.1602 c
-7125.4185 8911.623 -7125.8862 8909.6943 -7127.3711 8909.6943 c
-7127.9185 8909.6943 -7129.5854 8910.5547 -7129.5854 8911.4404 c
-7129.5854 8911.623 -7129.4814 8912.4307 -7128.6206 8913.1074 c
-7128.1265 8913.498 -7127.7354 8914.0967 -7127.5015 8914.8262 C
-7127.3975 8915.2432 -7127.3184 8915.7383 -7127.3184 8916.2324 c
-7127.3184 8917.041 -7127.6577 8919.6191 -7129.6113 8919.6191 c
-7130.6782 8919.6191 -7132.4497 8918.4727 -7132.4497 8915.2949 c
-7132.4497 8910.4512 -7128.5942 8904.7988 -7127.1104 8904.7988 c
-7125.7041 8904.7988 -7124.1685 8909.8262 -7124.1685 8912.0127 c
f*U
U%AI8_EndBrushPattern
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Brush Manager Order)
(Adobe Brush Manager Order)
( Adobe Calligraphic Brush Tool/ 2 pt. \221\310\211~/ Adobe Calligraphic Brush T) -
(ool/ 3 pt. \203t\203\211\203b\203g/ Adobe Calligraphic Brush Tool/ 3 pt. \211~/ Adobe Ca) -
(lligraphic Brush Tool/ 5 pt. \203t\203\211\203b\203g/ Adobe Calligraphic Brush Tool/ ) -
(5 pt. \221\310\211~/ Adobe Calligraphic Brush Tool/ 7 pt. \211~/ Adobe ArtOnPath B) -
(rush Tool/ \211\224\225M - \215\327/ Adobe ArtOnPath Brush Tool/ \226\330\222Y - \215\327\221\276/ Adobe A) -
(rtOnPath Brush Tool/ \203o\203i\201[/ Adobe PatternOnPath Brush Tool/ \203I\201[\203i\203\201\203) -
(\223\203g\203{\201[\203_\201[/) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(2 pt. \221\310\211~)
(1 2 2 26 74 15 15 0 1 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. \203t\203\211\203b\203g)
(1 3 3 9 9 15 15 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(3 pt. \211~)
(1 3 3 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. \203t\203\211\203b\203g)
(1 5 5 0 0 90 90 0 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(5 pt. \221\310\211~)
(1 5 5 10 90 -65 35 0 1 1 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe Calligraphic Brush Tool)
(7 pt. \211~)
(1 7 7 100 100 0 0 0 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(\203o\203i\201[)
(1 / Unnamed Brush Pat/ / / / / 5 0.976471 0.741176 0.372549 /  1 0 1 0) -
( 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(\211\224\225M - \215\327)
(1 / Unnamed 2/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI8_BeginPluginObject
(Adobe ArtOnPath Brush Tool)
(\226\330\222Y - \215\327\221\276)
(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI8_BeginPluginObject
(Adobe PatternOnPath Brush Tool)
(\203I\201[\203i\203\201\203\223\203g\203{\201[\203_\201[)
(1 / Unnamed Brush Pat 7/ Unnamed Brush Pat 5/ Unnamed Brush Pat 2/ / /) -
( 5 0.423529 0.72549 0.313726 /  1 0 1 0 1 0 0 0) .
%AI8_EndPluginObject
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) 0 Xs
([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) Pc
0.1 0.2 0.8 0.2 (RVW-MT-Gold) 0 x
(RVW-MT-Gold) Pc
0.1 0.1 0 0.3 (RVW-MT-Silver) 0 x
(RVW-MT-Silver) Pc
0.05 0.35 0.45 0.45 (RVW-MT-Bronze) 0 x
(RVW-MT-Bronze) Pc
0.15 0.2 0.3 0.6 (RVW-MT-TitanBlack) 0 x
(RVW-MT-TitanBlack) Pc
0.3 0.02 0.4 0.2 (RVW-MT-Olive) 0 x
(RVW-MT-Olive) Pc
0.4 0 0.3 0.2 (RVW-MT-Green) 0 x
(RVW-MT-Green) Pc
0.5 0 0.15 0.2 (RVW-MT-Cobalt) 0 x
(RVW-MT-Cobalt) Pc
0.4 0.2 0 0.2 (RVW-MT-Blue) 0 x
(RVW-MT-Blue) Pc
0.3 0.3 0 0.2 (RVW-MT-Navy) 0 x
(RVW-MT-Navy) Pc
0.2 0.4 0 0.2 (RVW-MT-Purple) 0 x
(RVW-MT-Purple) Pc
0 0.4 0 0.2 (RVW-MT-Violet) 0 x
(RVW-MT-Violet) Pc
0 0.45 0.4 0.2 (RVW-MT-Maroon) 0 x
(RVW-MT-Maroon) Pc
0.05 0 0.2 0.2 (RVW-MT-01A) 0 x
(RVW-MT-01A) Pc
0.05 0 0.4 0.2 (RVW-MT-01B) 0 x
(RVW-MT-01B) Pc
0.05 0 0.6 0.2 (RVW-MT-01C) 0 x
(RVW-MT-01C) Pc
0.05 0 0.8 0.2 (RVW-MT-01D) 0 x
(RVW-MT-01D) Pc
0.05 0 1 0.2 (RVW-MT-01E) 0 x
(RVW-MT-01E) Pc
0.05 0 1 0.3 (RVW-MT-01F) 0 x
(RVW-MT-01F) Pc
0.05 0 1 0.45 (RVW-MT-01G) 0 x
(RVW-MT-01G) Pc
0.05 0 1 0.65 (RVW-MT-01H) 0 x
(RVW-MT-01H) Pc
0.05 0 1 0.85 (RVW-MT-01I) 0 x
(RVW-MT-01I) Pc
0.05 0 0.8 0.9 (RVW-MT-01J) 0 x
(RVW-MT-01J) Pc
0.08 0 0.2 0.1 (RVW-MT-01K) 0 x
(RVW-MT-01K) Pc
0.08 0 0.4 0.1 (RVW-MT-01L) 0 x
(RVW-MT-01L) Pc
0.08 0 0.6 0.1 (RVW-MT-01M) 0 x
(RVW-MT-01M) Pc
0.08 0 0.8 0.1 (RVW-MT-01N) 0 x
(RVW-MT-01N) Pc
0.08 0 1 0.1 (RVW-MT-01O) 0 x
(RVW-MT-01O) Pc
0.05 0 1 0.22 (RVW-MT-01P) 0 x
(RVW-MT-01P) Pc
0.05 0 1 0.37 (RVW-MT-01Q) 0 x
(RVW-MT-01Q) Pc
0.05 0 1 0.57 (RVW-MT-01R) 0 x
(RVW-MT-01R) Pc
0.05 0 1 0.77 (RVW-MT-01S) 0 x
(RVW-MT-01S) Pc
0.05 0 0.8 0.85 (RVW-MT-01T) 0 x
(RVW-MT-01T) Pc
0.065 0 0.2 0.2 (RVW-MT-02A) 0 x
(RVW-MT-02A) Pc
0.08 0 0.4 0.2 (RVW-MT-02B) 0 x
(RVW-MT-02B) Pc
0.09 0 0.6 0.2 (RVW-MT-02C) 0 x
(RVW-MT-02C) Pc
0.1 0 0.8 0.2 (RVW-MT-02D) 0 x
(RVW-MT-02D) Pc
0.11 0 1 0.2 (RVW-MT-02E) 0 x
(RVW-MT-02E) Pc
0.11 0 1 0.3 (RVW-MT-02F) 0 x
(RVW-MT-02F) Pc
0.11 0 1 0.45 (RVW-MT-02G) 0 x
(RVW-MT-02G) Pc
0.11 0 1 0.65 (RVW-MT-02H) 0 x
(RVW-MT-02H) Pc
0.11 0 1 0.85 (RVW-MT-02I) 0 x
(RVW-MT-02I) Pc
0.05 0 0.84 0.9 (RVW-MT-02J) 0 x
(RVW-MT-02J) Pc
0.095 0 0.2 0.1 (RVW-MT-02K) 0 x
(RVW-MT-02K) Pc
0.11 0 0.4 0.1 (RVW-MT-02L) 0 x
(RVW-MT-02L) Pc
0.12 0 0.6 0.1 (RVW-MT-02M) 0 x
(RVW-MT-02M) Pc
0.13 0 0.8 0.1 (RVW-MT-02N) 0 x
(RVW-MT-02N) Pc
0.14 0 1 0.1 (RVW-MT-02O) 0 x
(RVW-MT-02O) Pc
0.11 0 1 0.22 (RVW-MT-02P) 0 x
(RVW-MT-02P) Pc
0.11 0 1 0.37 (RVW-MT-02Q) 0 x
(RVW-MT-02Q) Pc
0.11 0 1 0.57 (RVW-MT-02R) 0 x
(RVW-MT-02R) Pc
0.11 0 1 0.77 (RVW-MT-02S) 0 x
(RVW-MT-02S) Pc
0.05 0 0.84 0.85 (RVW-MT-02T) 0 x
(RVW-MT-02T) Pc
0.11 0 0.2 0.2 (RVW-MT-03A) 0 x
(RVW-MT-03A) Pc
0.18 0 0.4 0.2 (RVW-MT-03B) 0 x
(RVW-MT-03B) Pc
0.24 0 0.6 0.2 (RVW-MT-03C) 0 x
(RVW-MT-03C) Pc
0.3 0 0.8 0.2 (RVW-MT-03D) 0 x
(RVW-MT-03D) Pc
0.37 0 1 0.2 (RVW-MT-03E) 0 x
(RVW-MT-03E) Pc
0.37 0 1 0.3 (RVW-MT-03F) 0 x
(RVW-MT-03F) Pc
0.37 0 1 0.45 (RVW-MT-03G) 0 x
(RVW-MT-03G) Pc
0.37 0 1 0.65 (RVW-MT-03H) 0 x
(RVW-MT-03H) Pc
0.37 0 1 0.85 (RVW-MT-03I) 0 x
(RVW-MT-03I) Pc
0.27 0 0.9 0.9 (RVW-MT-03J) 0 x
(RVW-MT-03J) Pc
0.14 0 0.2 0.1 (RVW-MT-03K) 0 x
(RVW-MT-03K) Pc
0.21 0 0.4 0.1 (RVW-MT-03L) 0 x
(RVW-MT-03L) Pc
0.27 0 0.6 0.1 (RVW-MT-03M) 0 x
(RVW-MT-03M) Pc
0.33 0 0.8 0.1 (RVW-MT-03N) 0 x
(RVW-MT-03N) Pc
0.4 0 1 0.1 (RVW-MT-03O) 0 x
(RVW-MT-03O) Pc
0.37 0 1 0.22 (RVW-MT-03P) 0 x
(RVW-MT-03P) Pc
0.37 0 1 0.37 (RVW-MT-03Q) 0 x
(RVW-MT-03Q) Pc
0.37 0 1 0.57 (RVW-MT-03R) 0 x
(RVW-MT-03R) Pc
0.37 0 1 0.77 (RVW-MT-03S) 0 x
(RVW-MT-03S) Pc
0.27 0 0.9 0.85 (RVW-MT-03T) 0 x
(RVW-MT-03T) Pc
0.16 0 0.2 0.2 (RVW-MT-04A) 0 x
(RVW-MT-04A) Pc
0.27 0 0.4 0.2 (RVW-MT-04B) 0 x
(RVW-MT-04B) Pc
0.38 0 0.6 0.2 (RVW-MT-04C) 0 x
(RVW-MT-04C) Pc
0.49 0 0.8 0.2 (RVW-MT-04D) 0 x
(RVW-MT-04D) Pc
0.6 0 1 0.2 (RVW-MT-04E) 0 x
(RVW-MT-04E) Pc
0.6 0 1 0.3 (RVW-MT-04F) 0 x
(RVW-MT-04F) Pc
0.6 0 1 0.45 (RVW-MT-04G) 0 x
(RVW-MT-04G) Pc
0.6 0 1 0.65 (RVW-MT-04H) 0 x
(RVW-MT-04H) Pc
0.6 0 1 0.85 (RVW-MT-04I) 0 x
(RVW-MT-04I) Pc
0.5 0 0.9 0.9 (RVW-MT-04J) 0 x
(RVW-MT-04J) Pc
0.19 0 0.2 0.1 (RVW-MT-04K) 0 x
(RVW-MT-04K) Pc
0.3 0 0.4 0.1 (RVW-MT-04L) 0 x
(RVW-MT-04L) Pc
0.41 0 0.6 0.1 (RVW-MT-04M) 0 x
(RVW-MT-04M) Pc
0.52 0 0.8 0.1 (RVW-MT-04N) 0 x
(RVW-MT-04N) Pc
0.63 0 1 0.1 (RVW-MT-04O) 0 x
(RVW-MT-04O) Pc
0.6 0 1 0.22 (RVW-MT-04P) 0 x
(RVW-MT-04P) Pc
0.6 0 1 0.37 (RVW-MT-04Q) 0 x
(RVW-MT-04Q) Pc
0.6 0 1 0.57 (RVW-MT-04R) 0 x
(RVW-MT-04R) Pc
0.6 0 1 0.77 (RVW-MT-04S) 0 x
(RVW-MT-04S) Pc
0.5 0 0.9 0.85 (RVW-MT-04T) 0 x
(RVW-MT-04T) Pc
0.2 0 0.2 0.2 (RVW-MT-05A) 0 x
(RVW-MT-05A) Pc
0.36 0 0.4 0.2 (RVW-MT-05B) 0 x
(RVW-MT-05B) Pc
0.51 0 0.6 0.2 (RVW-MT-05C) 0 x
(RVW-MT-05C) Pc
0.67 0 0.8 0.2 (RVW-MT-05D) 0 x
(RVW-MT-05D) Pc
0.82 0 1 0.2 (RVW-MT-05E) 0 x
(RVW-MT-05E) Pc
0.82 0 1 0.3 (RVW-MT-05F) 0 x
(RVW-MT-05F) Pc
0.82 0 1 0.45 (RVW-MT-05G) 0 x
(RVW-MT-05G) Pc
0.82 0 1 0.65 (RVW-MT-05H) 0 x
(RVW-MT-05H) Pc
0.82 0 1 0.85 (RVW-MT-05I) 0 x
(RVW-MT-05I) Pc
0.72 0 0.9 0.9 (RVW-MT-05J) 0 x
(RVW-MT-05J) Pc
0.23 0 0.2 0.1 (RVW-MT-05K) 0 x
(RVW-MT-05K) Pc
0.39 0 0.4 0.1 (RVW-MT-05L) 0 x
(RVW-MT-05L) Pc
0.54 0 0.6 0.1 (RVW-MT-05M) 0 x
(RVW-MT-05M) Pc
0.7 0 0.8 0.1 (RVW-MT-05N) 0 x
(RVW-MT-05N) Pc
0.85 0 1 0.1 (RVW-MT-05O) 0 x
(RVW-MT-05O) Pc
0.82 0 1 0.22 (RVW-MT-05P) 0 x
(RVW-MT-05P) Pc
0.82 0 1 0.37 (RVW-MT-05Q) 0 x
(RVW-MT-05Q) Pc
0.82 0 1 0.57 (RVW-MT-05R) 0 x
(RVW-MT-05R) Pc
0.82 0 1 0.77 (RVW-MT-05S) 0 x
(RVW-MT-05S) Pc
0.72 0 0.9 0.85 (RVW-MT-05T) 0 x
(RVW-MT-05T) Pc
0.25 0 0.2 0.2 (RVW-MT-06A) 0 x
(RVW-MT-06A) Pc
0.45 0 0.4 0.2 (RVW-MT-06B) 0 x
(RVW-MT-06B) Pc
0.65 0 0.6 0.2 (RVW-MT-06C) 0 x
(RVW-MT-06C) Pc
0.85 0 0.8 0.2 (RVW-MT-06D) 0 x
(RVW-MT-06D) Pc
1 0 1 0.2 (RVW-MT-06E) 0 x
(RVW-MT-06E) Pc
1 0 1 0.3 (RVW-MT-06F) 0 x
(RVW-MT-06F) Pc
1 0 1 0.45 (RVW-MT-06G) 0 x
(RVW-MT-06G) Pc
1 0 1 0.65 (RVW-MT-06H) 0 x
(RVW-MT-06H) Pc
1 0 1 0.85 (RVW-MT-06I) 0 x
(RVW-MT-06I) Pc
0.95 0 0.9 0.9 (RVW-MT-06J) 0 x
(RVW-MT-06J) Pc
0.28 0 0.2 0.1 (RVW-MT-06K) 0 x
(RVW-MT-06K) Pc
0.48 0 0.4 0.1 (RVW-MT-06L) 0 x
(RVW-MT-06L) Pc
0.68 0 0.6 0.1 (RVW-MT-06M) 0 x
(RVW-MT-06M) Pc
0.88 0 0.8 0.1 (RVW-MT-06N) 0 x
(RVW-MT-06N) Pc
1 0 1 0.1 (RVW-MT-06O) 0 x
(RVW-MT-06O) Pc
1 0 1 0.22 (RVW-MT-06P) 0 x
(RVW-MT-06P) Pc
1 0 1 0.37 (RVW-MT-06Q) 0 x
(RVW-MT-06Q) Pc
1 0 1 0.57 (RVW-MT-06R) 0 x
(RVW-MT-06R) Pc
1 0 1 0.77 (RVW-MT-06S) 0 x
(RVW-MT-06S) Pc
0.95 0 0.9 0.85 (RVW-MT-06T) 0 x
(RVW-MT-06T) Pc
0.25 0 0.15 0.2 (RVW-MT-07A) 0 x
(RVW-MT-07A) Pc
0.45 0 0.29 0.2 (RVW-MT-07B) 0 x
(RVW-MT-07B) Pc
0.65 0 0.43 0.2 (RVW-MT-07C) 0 x
(RVW-MT-07C) Pc
0.85 0 0.57 0.2 (RVW-MT-07D) 0 x
(RVW-MT-07D) Pc
1 0 0.7 0.2 (RVW-MT-07E) 0 x
(RVW-MT-07E) Pc
1 0 0.7 0.3 (RVW-MT-07F) 0 x
(RVW-MT-07F) Pc
1 0 0.7 0.45 (RVW-MT-07G) 0 x
(RVW-MT-07G) Pc
1 0 0.7 0.65 (RVW-MT-07H) 0 x
(RVW-MT-07H) Pc
1 0 0.7 0.85 (RVW-MT-07I) 0 x
(RVW-MT-07I) Pc
0.95 0 0.6 0.9 (RVW-MT-07J) 0 x
(RVW-MT-07J) Pc
0.28 0 0.15 0.1 (RVW-MT-07K) 0 x
(RVW-MT-07K) Pc
0.48 0 0.29 0.1 (RVW-MT-07L) 0 x
(RVW-MT-07L) Pc
0.68 0 0.43 0.1 (RVW-MT-07M) 0 x
(RVW-MT-07M) Pc
0.88 0 0.57 0.1 (RVW-MT-07N) 0 x
(RVW-MT-07N) Pc
1 0 0.7 0.1 (RVW-MT-07O) 0 x
(RVW-MT-07O) Pc
1 0 0.7 0.22 (RVW-MT-07P) 0 x
(RVW-MT-07P) Pc
1 0 0.7 0.37 (RVW-MT-07Q) 0 x
(RVW-MT-07Q) Pc
1 0 0.7 0.57 (RVW-MT-07R) 0 x
(RVW-MT-07R) Pc
1 0 0.7 0.77 (RVW-MT-07S) 0 x
(RVW-MT-07S) Pc
0.95 0 0.6 0.85 (RVW-MT-07T) 0 x
(RVW-MT-07T) Pc
0.25 0 0.08 0.2 (RVW-MT-08A) 0 x
(RVW-MT-08A) Pc
0.45 0 0.17 0.2 (RVW-MT-08B) 0 x
(RVW-MT-08B) Pc
0.65 0 0.26 0.2 (RVW-MT-08C) 0 x
(RVW-MT-08C) Pc
0.85 0 0.35 0.2 (RVW-MT-08D) 0 x
(RVW-MT-08D) Pc
1 0 0.43 0.2 (RVW-MT-08E) 0 x
(RVW-MT-08E) Pc
1 0 0.43 0.3 (RVW-MT-08F) 0 x
(RVW-MT-08F) Pc
1 0 0.43 0.45 (RVW-MT-08G) 0 x
(RVW-MT-08G) Pc
1 0 0.43 0.65 (RVW-MT-08H) 0 x
(RVW-MT-08H) Pc
1 0 0.43 0.85 (RVW-MT-08I) 0 x
(RVW-MT-08I) Pc
0.95 0 0.33 0.9 (RVW-MT-08J) 0 x
(RVW-MT-08J) Pc
0.28 0 0.08 0.1 (RVW-MT-08K) 0 x
(RVW-MT-08K) Pc
0.48 0 0.17 0.1 (RVW-MT-08L) 0 x
(RVW-MT-08L) Pc
0.68 0 0.26 0.1 (RVW-MT-08M) 0 x
(RVW-MT-08M) Pc
0.88 0 0.35 0.1 (RVW-MT-08N) 0 x
(RVW-MT-08N) Pc
1 0 0.43 0.1 (RVW-MT-08O) 0 x
(RVW-MT-08O) Pc
1 0 0.43 0.22 (RVW-MT-08P) 0 x
(RVW-MT-08P) Pc
1 0 0.43 0.37 (RVW-MT-08Q) 0 x
(RVW-MT-08Q) Pc
1 0 0.43 0.57 (RVW-MT-08R) 0 x
(RVW-MT-08R) Pc
1 0 0.43 0.77 (RVW-MT-08S) 0 x
(RVW-MT-08S) Pc
0.95 0 0.33 0.85 (RVW-MT-08T) 0 x
(RVW-MT-08T) Pc
0.25 0 0 0.2 (RVW-MT-09A) 0 x
(RVW-MT-09A) Pc
0.45 0 0 0.2 (RVW-MT-09B) 0 x
(RVW-MT-09B) Pc
0.65 0 0 0.2 (RVW-MT-09C) 0 x
(RVW-MT-09C) Pc
0.85 0 0 0.2 (RVW-MT-09D) 0 x
(RVW-MT-09D) Pc
1 0 0 0.2 (RVW-MT-09E) 0 x
(RVW-MT-09E) Pc
1 0 0 0.3 (RVW-MT-09F) 0 x
(RVW-MT-09F) Pc
1 0 0 0.45 (RVW-MT-09G) 0 x
(RVW-MT-09G) Pc
1 0 0 0.65 (RVW-MT-09H) 0 x
(RVW-MT-09H) Pc
1 0 0 0.85 (RVW-MT-09I) 0 x
(RVW-MT-09I) Pc
0.85 0 0 0.9 (RVW-MT-09J) 0 x
(RVW-MT-09J) Pc
0.28 0 0 0.1 (RVW-MT-09K) 0 x
(RVW-MT-09K) Pc
0.48 0 0 0.1 (RVW-MT-09L) 0 x
(RVW-MT-09L) Pc
0.68 0 0 0.1 (RVW-MT-09M) 0 x
(RVW-MT-09M) Pc
0.88 0 0 0.1 (RVW-MT-09N) 0 x
(RVW-MT-09N) Pc
1 0 0 0.1 (RVW-MT-09O) 0 x
(RVW-MT-09O) Pc
1 0 0 0.22 (RVW-MT-09P) 0 x
(RVW-MT-09P) Pc
1 0 0 0.37 (RVW-MT-09Q) 0 x
(RVW-MT-09Q) Pc
1 0 0 0.57 (RVW-MT-09R) 0 x
(RVW-MT-09R) Pc
1 0 0 0.77 (RVW-MT-09S) 0 x
(RVW-MT-09S) Pc
0.85 0 0 0.85 (RVW-MT-09T) 0 x
(RVW-MT-09T) Pc
0.25 0.08 0 0.2 (RVW-MT-10A) 0 x
(RVW-MT-10A) Pc
0.45 0.17 0 0.2 (RVW-MT-10B) 0 x
(RVW-MT-10B) Pc
0.65 0.26 0 0.2 (RVW-MT-10C) 0 x
(RVW-MT-10C) Pc
0.85 0.34 0 0.2 (RVW-MT-10D) 0 x
(RVW-MT-10D) Pc
1 0.43 0 0.2 (RVW-MT-10E) 0 x
(RVW-MT-10E) Pc
1 0.43 0 0.3 (RVW-MT-10F) 0 x
(RVW-MT-10F) Pc
1 0.43 0 0.45 (RVW-MT-10G) 0 x
(RVW-MT-10G) Pc
1 0.43 0 0.65 (RVW-MT-10H) 0 x
(RVW-MT-10H) Pc
1 0.43 0 0.85 (RVW-MT-10I) 0 x
(RVW-MT-10I) Pc
0.95 0.33 0 0.9 (RVW-MT-10J) 0 x
(RVW-MT-10J) Pc
0.28 0.08 0 0.1 (RVW-MT-10K) 0 x
(RVW-MT-10K) Pc
0.48 0.17 0 0.1 (RVW-MT-10L) 0 x
(RVW-MT-10L) Pc
0.68 0.26 0 0.1 (RVW-MT-10M) 0 x
(RVW-MT-10M) Pc
0.88 0.34 0 0.1 (RVW-MT-10N) 0 x
(RVW-MT-10N) Pc
1 0.43 0 0.1 (RVW-MT-10O) 0 x
(RVW-MT-10O) Pc
1 0.43 0 0.22 (RVW-MT-10P) 0 x
(RVW-MT-10P) Pc
1 0.43 0 0.37 (RVW-MT-10Q) 0 x
(RVW-MT-10Q) Pc
1 0.43 0 0.57 (RVW-MT-10R) 0 x
(RVW-MT-10R) Pc
1 0.43 0 0.77 (RVW-MT-10S) 0 x
(RVW-MT-10S) Pc
0.95 0.33 0 0.85 (RVW-MT-10T) 0 x
(RVW-MT-10T) Pc
0.25 0.15 0 0.2 (RVW-MT-11A) 0 x
(RVW-MT-11A) Pc
0.45 0.29 0 0.2 (RVW-MT-11B) 0 x
(RVW-MT-11B) Pc
0.65 0.43 0 0.2 (RVW-MT-11C) 0 x
(RVW-MT-11C) Pc
0.85 0.57 0 0.2 (RVW-MT-11D) 0 x
(RVW-MT-11D) Pc
1 0.7 0 0.2 (RVW-MT-11E) 0 x
(RVW-MT-11E) Pc
1 0.7 0 0.3 (RVW-MT-11F) 0 x
(RVW-MT-11F) Pc
1 0.7 0 0.45 (RVW-MT-11G) 0 x
(RVW-MT-11G) Pc
1 0.7 0 0.65 (RVW-MT-11H) 0 x
(RVW-MT-11H) Pc
1 0.7 0 0.85 (RVW-MT-11I) 0 x
(RVW-MT-11I) Pc
0.95 0.6 0 0.9 (RVW-MT-11J) 0 x
(RVW-MT-11J) Pc
0.28 0.15 0 0.1 (RVW-MT-11K) 0 x
(RVW-MT-11K) Pc
0.48 0.29 0 0.1 (RVW-MT-11L) 0 x
(RVW-MT-11L) Pc
0.68 0.43 0 0.1 (RVW-MT-11M) 0 x
(RVW-MT-11M) Pc
0.88 0.57 0 0.1 (RVW-MT-11N) 0 x
(RVW-MT-11N) Pc
1 0.7 0 0.1 (RVW-MT-11O) 0 x
(RVW-MT-11O) Pc
1 0.7 0 0.22 (RVW-MT-11P) 0 x
(RVW-MT-11P) Pc
1 0.7 0 0.37 (RVW-MT-11Q) 0 x
(RVW-MT-11Q) Pc
1 0.7 0 0.57 (RVW-MT-11R) 0 x
(RVW-MT-11R) Pc
1 0.7 0 0.77 (RVW-MT-11S) 0 x
(RVW-MT-11S) Pc
0.95 0.6 0 0.85 (RVW-MT-11T) 0 x
(RVW-MT-11T) Pc
0.25 0.2 0 0.2 (RVW-MT-12A) 0 x
(RVW-MT-12A) Pc
0.45 0.4 0 0.2 (RVW-MT-12B) 0 x
(RVW-MT-12B) Pc
0.65 0.6 0 0.2 (RVW-MT-12C) 0 x
(RVW-MT-12C) Pc
0.85 0.8 0 0.2 (RVW-MT-12D) 0 x
(RVW-MT-12D) Pc
1 1 0 0.2 (RVW-MT-12E) 0 x
(RVW-MT-12E) Pc
1 1 0 0.3 (RVW-MT-12F) 0 x
(RVW-MT-12F) Pc
1 1 0 0.45 (RVW-MT-12G) 0 x
(RVW-MT-12G) Pc
1 1 0 0.65 (RVW-MT-12H) 0 x
(RVW-MT-12H) Pc
1 1 0 0.85 (RVW-MT-12I) 0 x
(RVW-MT-12I) Pc
0.95 0.9 0 0.9 (RVW-MT-12J) 0 x
(RVW-MT-12J) Pc
0.28 0.2 0 0.1 (RVW-MT-12K) 0 x
(RVW-MT-12K) Pc
0.48 0.4 0 0.1 (RVW-MT-12L) 0 x
(RVW-MT-12L) Pc
0.68 0.6 0 0.1 (RVW-MT-12M) 0 x
(RVW-MT-12M) Pc
0.88 0.8 0 0.1 (RVW-MT-12N) 0 x
(RVW-MT-12N) Pc
1 1 0 0.1 (RVW-MT-12O) 0 x
(RVW-MT-12O) Pc
1 1 0 0.22 (RVW-MT-12P) 0 x
(RVW-MT-12P) Pc
1 1 0 0.37 (RVW-MT-12Q) 0 x
(RVW-MT-12Q) Pc
1 1 0 0.57 (RVW-MT-12R) 0 x
(RVW-MT-12R) Pc
1 1 0 0.77 (RVW-MT-12S) 0 x
(RVW-MT-12S) Pc
0.95 0.9 0 0.85 (RVW-MT-12T) 0 x
(RVW-MT-12T) Pc
0.2 0.2 0 0.2 (RVW-MT-13A) 0 x
(RVW-MT-13A) Pc
0.36 0.4 0 0.2 (RVW-MT-13B) 0 x
(RVW-MT-13B) Pc
0.52 0.6 0 0.2 (RVW-MT-13C) 0 x
(RVW-MT-13C) Pc
0.67 0.8 0 0.2 (RVW-MT-13D) 0 x
(RVW-MT-13D) Pc
0.83 1 0 0.2 (RVW-MT-13E) 0 x
(RVW-MT-13E) Pc
0.83 1 0 0.3 (RVW-MT-13F) 0 x
(RVW-MT-13F) Pc
0.83 1 0 0.45 (RVW-MT-13G) 0 x
(RVW-MT-13G) Pc
0.83 1 0 0.65 (RVW-MT-13H) 0 x
(RVW-MT-13H) Pc
0.83 1 0 0.85 (RVW-MT-13I) 0 x
(RVW-MT-13I) Pc
0.73 0.9 0 0.9 (RVW-MT-13J) 0 x
(RVW-MT-13J) Pc
0.23 0.2 0 0.1 (RVW-MT-13K) 0 x
(RVW-MT-13K) Pc
0.39 0.4 0 0.1 (RVW-MT-13L) 0 x
(RVW-MT-13L) Pc
0.55 0.6 0 0.1 (RVW-MT-13M) 0 x
(RVW-MT-13M) Pc
0.7 0.8 0 0.1 (RVW-MT-13N) 0 x
(RVW-MT-13N) Pc
0.86 1 0 0.1 (RVW-MT-13O) 0 x
(RVW-MT-13O) Pc
0.83 1 0 0.22 (RVW-MT-13P) 0 x
(RVW-MT-13P) Pc
0.83 1 0 0.37 (RVW-MT-13Q) 0 x
(RVW-MT-13Q) Pc
0.83 1 0 0.57 (RVW-MT-13R) 0 x
(RVW-MT-13R) Pc
0.83 1 0 0.77 (RVW-MT-13S) 0 x
(RVW-MT-13S) Pc
0.73 0.9 0 0.85 (RVW-MT-13T) 0 x
(RVW-MT-13T) Pc
0.16 0.2 0 0.2 (RVW-MT-14A) 0 x
(RVW-MT-14A) Pc
0.27 0.4 0 0.2 (RVW-MT-14B) 0 x
(RVW-MT-14B) Pc
0.38 0.6 0 0.2 (RVW-MT-14C) 0 x
(RVW-MT-14C) Pc
0.5 0.8 0 0.2 (RVW-MT-14D) 0 x
(RVW-MT-14D) Pc
0.6 1 0 0.2 (RVW-MT-14E) 0 x
(RVW-MT-14E) Pc
0.6 1 0 0.3 (RVW-MT-14F) 0 x
(RVW-MT-14F) Pc
0.6 1 0 0.45 (RVW-MT-14G) 0 x
(RVW-MT-14G) Pc
0.6 1 0 0.65 (RVW-MT-14H) 0 x
(RVW-MT-14H) Pc
0.6 1 0 0.85 (RVW-MT-14I) 0 x
(RVW-MT-14I) Pc
0.5 0.9 0 0.9 (RVW-MT-14J) 0 x
(RVW-MT-14J) Pc
0.19 0.2 0 0.1 (RVW-MT-14K) 0 x
(RVW-MT-14K) Pc
0.3 0.4 0 0.1 (RVW-MT-14L) 0 x
(RVW-MT-14L) Pc
0.41 0.6 0 0.1 (RVW-MT-14M) 0 x
(RVW-MT-14M) Pc
0.53 0.8 0 0.1 (RVW-MT-14N) 0 x
(RVW-MT-14N) Pc
0.63 1 0 0.1 (RVW-MT-14O) 0 x
(RVW-MT-14O) Pc
0.6 1 0 0.22 (RVW-MT-14P) 0 x
(RVW-MT-14P) Pc
0.6 1 0 0.37 (RVW-MT-14Q) 0 x
(RVW-MT-14Q) Pc
0.6 1 0 0.57 (RVW-MT-14R) 0 x
(RVW-MT-14R) Pc
0.6 1 0 0.77 (RVW-MT-14S) 0 x
(RVW-MT-14S) Pc
0.5 0.9 0 0.85 (RVW-MT-14T) 0 x
(RVW-MT-14T) Pc
0.11 0.2 0 0.2 (RVW-MT-15A) 0 x
(RVW-MT-15A) Pc
0.18 0.4 0 0.2 (RVW-MT-15B) 0 x
(RVW-MT-15B) Pc
0.25 0.6 0 0.2 (RVW-MT-15C) 0 x
(RVW-MT-15C) Pc
0.31 0.8 0 0.2 (RVW-MT-15D) 0 x
(RVW-MT-15D) Pc
0.38 1 0 0.2 (RVW-MT-15E) 0 x
(RVW-MT-15E) Pc
0.38 1 0 0.3 (RVW-MT-15F) 0 x
(RVW-MT-15F) Pc
0.38 1 0 0.45 (RVW-MT-15G) 0 x
(RVW-MT-15G) Pc
0.38 1 0 0.65 (RVW-MT-15H) 0 x
(RVW-MT-15H) Pc
0.38 1 0 0.85 (RVW-MT-15I) 0 x
(RVW-MT-15I) Pc
0.28 0.9 0 0.9 (RVW-MT-15J) 0 x
(RVW-MT-15J) Pc
0.14 0.2 0 0.1 (RVW-MT-15K) 0 x
(RVW-MT-15K) Pc
0.21 0.4 0 0.1 (RVW-MT-15L) 0 x
(RVW-MT-15L) Pc
0.28 0.6 0 0.1 (RVW-MT-15M) 0 x
(RVW-MT-15M) Pc
0.34 0.8 0 0.1 (RVW-MT-15N) 0 x
(RVW-MT-15N) Pc
0.41 1 0 0.1 (RVW-MT-15O) 0 x
(RVW-MT-15O) Pc
0.38 1 0 0.22 (RVW-MT-15P) 0 x
(RVW-MT-15P) Pc
0.38 1 0 0.37 (RVW-MT-15Q) 0 x
(RVW-MT-15Q) Pc
0.38 1 0 0.57 (RVW-MT-15R) 0 x
(RVW-MT-15R) Pc
0.38 1 0 0.77 (RVW-MT-15S) 0 x
(RVW-MT-15S) Pc
0.28 0.9 0 0.85 (RVW-MT-15T) 0 x
(RVW-MT-15T) Pc
0.05 0.2 0 0.2 (RVW-MT-16A) 0 x
(RVW-MT-16A) Pc
0.05 0.4 0 0.2 (RVW-MT-16B) 0 x
(RVW-MT-16B) Pc
0.05 0.6 0 0.2 (RVW-MT-16C) 0 x
(RVW-MT-16C) Pc
0.05 0.8 0 0.2 (RVW-MT-16D) 0 x
(RVW-MT-16D) Pc
0.05 1 0 0.2 (RVW-MT-16E) 0 x
(RVW-MT-16E) Pc
0.05 1 0 0.3 (RVW-MT-16F) 0 x
(RVW-MT-16F) Pc
0.05 1 0 0.45 (RVW-MT-16G) 0 x
(RVW-MT-16G) Pc
0.05 1 0 0.65 (RVW-MT-16H) 0 x
(RVW-MT-16H) Pc
0.05 1 0 0.85 (RVW-MT-16I) 0 x
(RVW-MT-16I) Pc
0.05 0.8 0 0.9 (RVW-MT-16J) 0 x
(RVW-MT-16J) Pc
0.08 0.2 0 0.1 (RVW-MT-16K) 0 x
(RVW-MT-16K) Pc
0.08 0.4 0 0.1 (RVW-MT-16L) 0 x
(RVW-MT-16L) Pc
0.08 0.6 0 0.1 (RVW-MT-16M) 0 x
(RVW-MT-16M) Pc
0.08 0.8 0 0.1 (RVW-MT-16N) 0 x
(RVW-MT-16N) Pc
0.08 1 0 0.1 (RVW-MT-16O) 0 x
(RVW-MT-16O) Pc
0.05 1 0 0.22 (RVW-MT-16P) 0 x
(RVW-MT-16P) Pc
0.05 1 0 0.37 (RVW-MT-16Q) 0 x
(RVW-MT-16Q) Pc
0.05 1 0 0.57 (RVW-MT-16R) 0 x
(RVW-MT-16R) Pc
0.05 1 0 0.77 (RVW-MT-16S) 0 x
(RVW-MT-16S) Pc
0.05 0.8 0 0.85 (RVW-MT-16T) 0 x
(RVW-MT-16T) Pc
0.05 0.2 0.07 0.2 (RVW-MT-17A) 0 x
(RVW-MT-17A) Pc
0.05 0.4 0.15 0.2 (RVW-MT-17B) 0 x
(RVW-MT-17B) Pc
0.05 0.6 0.22 0.2 (RVW-MT-17C) 0 x
(RVW-MT-17C) Pc
0.05 0.8 0.3 0.2 (RVW-MT-17D) 0 x
(RVW-MT-17D) Pc
0.05 1 0.37 0.2 (RVW-MT-17E) 0 x
(RVW-MT-17E) Pc
0.05 1 0.37 0.3 (RVW-MT-17F) 0 x
(RVW-MT-17F) Pc
0.05 1 0.37 0.45 (RVW-MT-17G) 0 x
(RVW-MT-17G) Pc
0.05 1 0.37 0.65 (RVW-MT-17H) 0 x
(RVW-MT-17H) Pc
0.05 1 0.37 0.85 (RVW-MT-17I) 0 x
(RVW-MT-17I) Pc
0.05 0.9 0.27 0.9 (RVW-MT-17J) 0 x
(RVW-MT-17J) Pc
0.08 0.2 0.07 0.1 (RVW-MT-17K) 0 x
(RVW-MT-17K) Pc
0.08 0.4 0.15 0.1 (RVW-MT-17L) 0 x
(RVW-MT-17L) Pc
0.08 0.6 0.22 0.1 (RVW-MT-17M) 0 x
(RVW-MT-17M) Pc
0.08 0.8 0.3 0.1 (RVW-MT-17N) 0 x
(RVW-MT-17N) Pc
0.08 1 0.37 0.1 (RVW-MT-17O) 0 x
(RVW-MT-17O) Pc
0.05 1 0.37 0.22 (RVW-MT-17P) 0 x
(RVW-MT-17P) Pc
0.05 1 0.37 0.37 (RVW-MT-17Q) 0 x
(RVW-MT-17Q) Pc
0.05 1 0.37 0.57 (RVW-MT-17R) 0 x
(RVW-MT-17R) Pc
0.05 1 0.37 0.77 (RVW-MT-17S) 0 x
(RVW-MT-17S) Pc
0.05 0.9 0.27 0.85 (RVW-MT-17T) 0 x
(RVW-MT-17T) Pc
0.05 0.2 0.12 0.2 (RVW-MT-18A) 0 x
(RVW-MT-18A) Pc
0.05 0.4 0.25 0.2 (RVW-MT-18B) 0 x
(RVW-MT-18B) Pc
0.05 0.6 0.37 0.2 (RVW-MT-18C) 0 x
(RVW-MT-18C) Pc
0.05 0.8 0.5 0.2 (RVW-MT-18D) 0 x
(RVW-MT-18D) Pc
0.05 1 0.62 0.2 (RVW-MT-18E) 0 x
(RVW-MT-18E) Pc
0.05 1 0.62 0.3 (RVW-MT-18F) 0 x
(RVW-MT-18F) Pc
0.05 1 0.62 0.45 (RVW-MT-18G) 0 x
(RVW-MT-18G) Pc
0.05 1 0.62 0.65 (RVW-MT-18H) 0 x
(RVW-MT-18H) Pc
0.05 1 0.62 0.85 (RVW-MT-18I) 0 x
(RVW-MT-18I) Pc
0.05 0.9 0.52 0.9 (RVW-MT-18J) 0 x
(RVW-MT-18J) Pc
0.08 0.2 0.12 0.1 (RVW-MT-18K) 0 x
(RVW-MT-18K) Pc
0.08 0.4 0.25 0.1 (RVW-MT-18L) 0 x
(RVW-MT-18L) Pc
0.08 0.6 0.37 0.1 (RVW-MT-18M) 0 x
(RVW-MT-18M) Pc
0.08 0.8 0.5 0.1 (RVW-MT-18N) 0 x
(RVW-MT-18N) Pc
0.08 1 0.62 0.1 (RVW-MT-18O) 0 x
(RVW-MT-18O) Pc
0.05 1 0.62 0.22 (RVW-MT-18P) 0 x
(RVW-MT-18P) Pc
0.05 1 0.62 0.37 (RVW-MT-18Q) 0 x
(RVW-MT-18Q) Pc
0.05 1 0.62 0.57 (RVW-MT-18R) 0 x
(RVW-MT-18R) Pc
0.05 1 0.62 0.77 (RVW-MT-18S) 0 x
(RVW-MT-18S) Pc
0.05 0.9 0.52 0.85 (RVW-MT-18T) 0 x
(RVW-MT-18T) Pc
0.05 0.2 0.2 0.2 (RVW-MT-19A) 0 x
(RVW-MT-19A) Pc
0.05 0.4 0.4 0.2 (RVW-MT-19B) 0 x
(RVW-MT-19B) Pc
0.05 0.6 0.6 0.2 (RVW-MT-19C) 0 x
(RVW-MT-19C) Pc
0.05 0.8 0.8 0.2 (RVW-MT-19D) 0 x
(RVW-MT-19D) Pc
0.05 1 1 0.2 (RVW-MT-19E) 0 x
(RVW-MT-19E) Pc
0.05 1 1 0.3 (RVW-MT-19F) 0 x
(RVW-MT-19F) Pc
0.05 1 1 0.45 (RVW-MT-19G) 0 x
(RVW-MT-19G) Pc
0.05 1 1 0.65 (RVW-MT-19H) 0 x
(RVW-MT-19H) Pc
0.05 1 1 0.85 (RVW-MT-19I) 0 x
(RVW-MT-19I) Pc
0.05 0.9 0.9 0.9 (RVW-MT-19J) 0 x
(RVW-MT-19J) Pc
0.08 0.2 0.2 0.1 (RVW-MT-19K) 0 x
(RVW-MT-19K) Pc
0.08 0.4 0.4 0.1 (RVW-MT-19L) 0 x
(RVW-MT-19L) Pc
0.08 0.6 0.6 0.1 (RVW-MT-19M) 0 x
(RVW-MT-19M) Pc
0.08 0.8 0.8 0.1 (RVW-MT-19N) 0 x
(RVW-MT-19N) Pc
0.08 1 1 0.1 (RVW-MT-19O) 0 x
(RVW-MT-19O) Pc
0.05 1 1 0.22 (RVW-MT-19P) 0 x
(RVW-MT-19P) Pc
0.05 1 1 0.37 (RVW-MT-19Q) 0 x
(RVW-MT-19Q) Pc
0.05 1 1 0.57 (RVW-MT-19R) 0 x
(RVW-MT-19R) Pc
0.05 1 1 0.77 (RVW-MT-19S) 0 x
(RVW-MT-19S) Pc
0.05 0.9 0.9 0.85 (RVW-MT-19T) 0 x
(RVW-MT-19T) Pc
0.05 0.17 0.2 0.2 (RVW-MT-20A) 0 x
(RVW-MT-20A) Pc
0.05 0.35 0.4 0.2 (RVW-MT-20B) 0 x
(RVW-MT-20B) Pc
0.05 0.53 0.6 0.2 (RVW-MT-20C) 0 x
(RVW-MT-20C) Pc
0.05 0.7 0.8 0.2 (RVW-MT-20D) 0 x
(RVW-MT-20D) Pc
0.05 0.87 1 0.2 (RVW-MT-20E) 0 x
(RVW-MT-20E) Pc
0.05 0.87 1 0.3 (RVW-MT-20F) 0 x
(RVW-MT-20F) Pc
0.05 0.87 1 0.45 (RVW-MT-20G) 0 x
(RVW-MT-20G) Pc
0.05 0.87 1 0.65 (RVW-MT-20H) 0 x
(RVW-MT-20H) Pc
0.05 0.87 1 0.85 (RVW-MT-20I) 0 x
(RVW-MT-20I) Pc
0.05 0.77 0.9 0.9 (RVW-MT-20J) 0 x
(RVW-MT-20J) Pc
0.08 0.17 0.2 0.1 (RVW-MT-20K) 0 x
(RVW-MT-20K) Pc
0.08 0.35 0.4 0.1 (RVW-MT-20L) 0 x
(RVW-MT-20L) Pc
0.08 0.53 0.6 0.1 (RVW-MT-20M) 0 x
(RVW-MT-20M) Pc
0.08 0.7 0.8 0.1 (RVW-MT-20N) 0 x
(RVW-MT-20N) Pc
0.08 0.87 1 0.1 (RVW-MT-20O) 0 x
(RVW-MT-20O) Pc
0.05 0.87 1 0.22 (RVW-MT-20P) 0 x
(RVW-MT-20P) Pc
0.05 0.87 1 0.37 (RVW-MT-20Q) 0 x
(RVW-MT-20Q) Pc
0.05 0.87 1 0.57 (RVW-MT-20R) 0 x
(RVW-MT-20R) Pc
0.05 0.87 1 0.77 (RVW-MT-20S) 0 x
(RVW-MT-20S) Pc
0.05 0.77 0.9 0.85 (RVW-MT-20T) 0 x
(RVW-MT-20T) Pc
0.05 0.15 0.2 0.2 (RVW-MT-21A) 0 x
(RVW-MT-21A) Pc
0.05 0.3 0.4 0.2 (RVW-MT-21B) 0 x
(RVW-MT-21B) Pc
0.05 0.45 0.6 0.2 (RVW-MT-21C) 0 x
(RVW-MT-21C) Pc
0.05 0.6 0.8 0.2 (RVW-MT-21D) 0 x
(RVW-MT-21D) Pc
0.05 0.75 1 0.2 (RVW-MT-21E) 0 x
(RVW-MT-21E) Pc
0.05 0.75 1 0.3 (RVW-MT-21F) 0 x
(RVW-MT-21F) Pc
0.05 0.75 1 0.45 (RVW-MT-21G) 0 x
(RVW-MT-21G) Pc
0.05 0.75 1 0.65 (RVW-MT-21H) 0 x
(RVW-MT-21H) Pc
0.05 0.75 1 0.85 (RVW-MT-21I) 0 x
(RVW-MT-21I) Pc
0.05 0.65 0.9 0.9 (RVW-MT-21J) 0 x
(RVW-MT-21J) Pc
0.08 0.15 0.2 0.1 (RVW-MT-21K) 0 x
(RVW-MT-21K) Pc
0.08 0.3 0.4 0.1 (RVW-MT-21L) 0 x
(RVW-MT-21L) Pc
0.08 0.45 0.6 0.1 (RVW-MT-21M) 0 x
(RVW-MT-21M) Pc
0.08 0.6 0.8 0.1 (RVW-MT-21N) 0 x
(RVW-MT-21N) Pc
0.08 0.75 1 0.1 (RVW-MT-21O) 0 x
(RVW-MT-21O) Pc
0.05 0.75 1 0.22 (RVW-MT-21P) 0 x
(RVW-MT-21P) Pc
0.05 0.75 1 0.37 (RVW-MT-21Q) 0 x
(RVW-MT-21Q) Pc
0.05 0.75 1 0.57 (RVW-MT-21R) 0 x
(RVW-MT-21R) Pc
0.05 0.75 1 0.77 (RVW-MT-21S) 0 x
(RVW-MT-21S) Pc
0.05 0.65 0.9 0.85 (RVW-MT-21T) 0 x
(RVW-MT-21T) Pc
0.05 0.12 0.2 0.2 (RVW-MT-22A) 0 x
(RVW-MT-22A) Pc
0.05 0.25 0.4 0.2 (RVW-MT-22B) 0 x
(RVW-MT-22B) Pc
0.05 0.37 0.6 0.2 (RVW-MT-22C) 0 x
(RVW-MT-22C) Pc
0.05 0.5 0.8 0.2 (RVW-MT-22D) 0 x
(RVW-MT-22D) Pc
0.05 0.62 1 0.2 (RVW-MT-22E) 0 x
(RVW-MT-22E) Pc
0.05 0.62 1 0.3 (RVW-MT-22F) 0 x
(RVW-MT-22F) Pc
0.05 0.62 1 0.45 (RVW-MT-22G) 0 x
(RVW-MT-22G) Pc
0.05 0.62 1 0.65 (RVW-MT-22H) 0 x
(RVW-MT-22H) Pc
0.05 0.62 1 0.85 (RVW-MT-22I) 0 x
(RVW-MT-22I) Pc
0.05 0.52 0.9 0.9 (RVW-MT-22J) 0 x
(RVW-MT-22J) Pc
0.08 0.12 0.2 0.1 (RVW-MT-22K) 0 x
(RVW-MT-22K) Pc
0.08 0.25 0.4 0.1 (RVW-MT-22L) 0 x
(RVW-MT-22L) Pc
0.08 0.37 0.6 0.1 (RVW-MT-22M) 0 x
(RVW-MT-22M) Pc
0.08 0.5 0.8 0.1 (RVW-MT-22N) 0 x
(RVW-MT-22N) Pc
0.08 0.62 1 0.1 (RVW-MT-22O) 0 x
(RVW-MT-22O) Pc
0.05 0.62 1 0.22 (RVW-MT-22P) 0 x
(RVW-MT-22P) Pc
0.05 0.62 1 0.37 (RVW-MT-22Q) 0 x
(RVW-MT-22Q) Pc
0.05 0.62 1 0.57 (RVW-MT-22R) 0 x
(RVW-MT-22R) Pc
0.05 0.62 1 0.77 (RVW-MT-22S) 0 x
(RVW-MT-22S) Pc
0.05 0.52 0.9 0.85 (RVW-MT-22T) 0 x
(RVW-MT-22T) Pc
0.05 0.07 0.2 0.2 (RVW-MT-23A) 0 x
(RVW-MT-23A) Pc
0.05 0.15 0.4 0.2 (RVW-MT-23B) 0 x
(RVW-MT-23B) Pc
0.05 0.22 0.6 0.2 (RVW-MT-23C) 0 x
(RVW-MT-23C) Pc
0.05 0.3 0.8 0.2 (RVW-MT-23D) 0 x
(RVW-MT-23D) Pc
0.05 0.37 1 0.2 (RVW-MT-23E) 0 x
(RVW-MT-23E) Pc
0.05 0.37 1 0.3 (RVW-MT-23F) 0 x
(RVW-MT-23F) Pc
0.05 0.37 1 0.45 (RVW-MT-23G) 0 x
(RVW-MT-23G) Pc
0.05 0.37 1 0.65 (RVW-MT-23H) 0 x
(RVW-MT-23H) Pc
0.05 0.37 1 0.85 (RVW-MT-23I) 0 x
(RVW-MT-23I) Pc
0.05 0.27 0.9 0.9 (RVW-MT-23J) 0 x
(RVW-MT-23J) Pc
0.08 0.07 0.2 0.1 (RVW-MT-23K) 0 x
(RVW-MT-23K) Pc
0.08 0.15 0.4 0.1 (RVW-MT-23L) 0 x
(RVW-MT-23L) Pc
0.08 0.22 0.6 0.1 (RVW-MT-23M) 0 x
(RVW-MT-23M) Pc
0.08 0.3 0.8 0.1 (RVW-MT-23N) 0 x
(RVW-MT-23N) Pc
0.08 0.37 1 0.1 (RVW-MT-23O) 0 x
(RVW-MT-23O) Pc
0.05 0.37 1 0.22 (RVW-MT-23P) 0 x
(RVW-MT-23P) Pc
0.05 0.37 1 0.37 (RVW-MT-23Q) 0 x
(RVW-MT-23Q) Pc
0.05 0.37 1 0.57 (RVW-MT-23R) 0 x
(RVW-MT-23R) Pc
0.05 0.37 1 0.77 (RVW-MT-23S) 0 x
(RVW-MT-23S) Pc
0.05 0.27 0.9 0.85 (RVW-MT-23T) 0 x
(RVW-MT-23T) Pc
0.05 0.05 0.2 0.2 (RVW-MT-24A) 0 x
(RVW-MT-24A) Pc
0.05 0.1 0.4 0.2 (RVW-MT-24B) 0 x
(RVW-MT-24B) Pc
0.05 0.15 0.6 0.2 (RVW-MT-24C) 0 x
(RVW-MT-24C) Pc
0.05 0.2 0.8 0.2 (RVW-MT-24D) 0 x
(RVW-MT-24D) Pc
0.05 0.25 1 0.2 (RVW-MT-24E) 0 x
(RVW-MT-24E) Pc
0.05 0.25 1 0.3 (RVW-MT-24F) 0 x
(RVW-MT-24F) Pc
0.05 0.25 1 0.45 (RVW-MT-24G) 0 x
(RVW-MT-24G) Pc
0.05 0.25 1 0.65 (RVW-MT-24H) 0 x
(RVW-MT-24H) Pc
0.05 0.25 1 0.85 (RVW-MT-24I) 0 x
(RVW-MT-24I) Pc
0.05 0.15 0.9 0.9 (RVW-MT-24J) 0 x
(RVW-MT-24J) Pc
0.08 0.05 0.2 0.1 (RVW-MT-24K) 0 x
(RVW-MT-24K) Pc
0.08 0.1 0.4 0.1 (RVW-MT-24L) 0 x
(RVW-MT-24L) Pc
0.08 0.15 0.6 0.1 (RVW-MT-24M) 0 x
(RVW-MT-24M) Pc
0.08 0.2 0.8 0.1 (RVW-MT-24N) 0 x
(RVW-MT-24N) Pc
0.08 0.25 1 0.1 (RVW-MT-24O) 0 x
(RVW-MT-24O) Pc
0.05 0.25 1 0.22 (RVW-MT-24P) 0 x
(RVW-MT-24P) Pc
0.05 0.25 1 0.37 (RVW-MT-24Q) 0 x
(RVW-MT-24Q) Pc
0.05 0.25 1 0.57 (RVW-MT-24R) 0 x
(RVW-MT-24R) Pc
0.05 0.25 1 0.77 (RVW-MT-24S) 0 x
(RVW-MT-24S) Pc
0.05 0.15 0.9 0.85 (RVW-MT-24T) 0 x
(RVW-MT-24T) Pc
0 0 0 0.2 (RVW-MT-25A) 0 x
(RVW-MT-25A) Pc
0 0 0 0.31 (RVW-MT-25B) 0 x
(RVW-MT-25B) Pc
0 0 0 0.42 (RVW-MT-25C) 0 x
(RVW-MT-25C) Pc
0 0 0 0.53 (RVW-MT-25D) 0 x
(RVW-MT-25D) Pc
0 0 0 0.64 (RVW-MT-25E) 0 x
(RVW-MT-25E) Pc
0 0 0 0.71 (RVW-MT-25F) 0 x
(RVW-MT-25F) Pc
0 0 0 0.82 (RVW-MT-25G) 0 x
(RVW-MT-25G) Pc
0 0 0 0.93 (RVW-MT-25H) 0 x
(RVW-MT-25H) Pc
0 0 0 1 (RVW-MT-25I) 0 x
(RVW-MT-25I) Pc
0 0 0 1 (RVW-MT-25J) 0 x
(RVW-MT-25J) Pc
0 0 0 0.1 (RVW-MT-25K) 0 x
(RVW-MT-25K) Pc
0 0 0 0.21 (RVW-MT-25L) 0 x
(RVW-MT-25L) Pc
0 0 0 0.32 (RVW-MT-25M) 0 x
(RVW-MT-25M) Pc
0 0 0 0.43 (RVW-MT-25N) 0 x
(RVW-MT-25N) Pc
0 0 0 0.54 (RVW-MT-25O) 0 x
(RVW-MT-25O) Pc
0 0 0 0.63 (RVW-MT-25P) 0 x
(RVW-MT-25P) Pc
0 0 0 0.74 (RVW-MT-25Q) 0 x
(RVW-MT-25Q) Pc
0 0 0 0.85 (RVW-MT-25R) 0 x
(RVW-MT-25R) Pc
0 0 0 0.96 (RVW-MT-25S) 0 x
(RVW-MT-25S) Pc
0 0 0 1 (RVW-MT-25T) 0 x
(RVW-MT-25T) Pc
PB
%AI5_EndPalette
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (\203\211\203C\203u\203u\203\214\203\223\203h.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe \203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203c\201[\203\213.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\216U\225z\203u\203\211\203V\203c\201[\203\213.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe \203G\203\223\203x\203\215\201[\203v\203v\203\211\203O\203C\203\223) (\203G\203\223\203x\203\215\201[\203v\202\250\202\346\202\321\203\217\201[\203v.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (\203p\203X\203t\203@\203C\203\223\203_\203Z\203b\203g.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (\203t\203\214\203A.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe \203V\203\223\203{\203\213) (\203V\203\223\203{\203\213\203c\201[\203\213.aip)
%AI5_End_NonPrinting--
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 50 Lb
(\203\214\203C\203\204\201[ 1) Ln
0 A
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
