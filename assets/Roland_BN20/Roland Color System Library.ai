%!PS-Adobe-3.0 
%%Creator: Adobe Illustrator(R) 8.0
%%AI8_CreatorVersion: 10.0
%%For: (Katsuo Ikehata) (Roland D.G. Corp.)
%%Title: (Roland Color System Library.ai)
%%CreationDate: 12/11/2006 2:49 PM
%%BoundingBox: 0 0 0 0
%%HiResBoundingBox: 0 0 0 0
%%DocumentProcessColors:
%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0
%%+ procset AGM_Gradient 1.0 0
%%+ procset Adobe_ColorImage_AI6 1.3 0
%%+ procset Adobe_Illustrator_AI5 1.3 0
%%+ procset Adobe_cshow 2.0 8
%%+ procset Adobe_shading_AI8 1.0 0
%AI5_FileFormat 4.0
%AI3_ColorUsage: Color
%AI7_ImageSettings: 0
%%CMYKCustomColor: 0 0 0 0 (RVW-BK01A)
%%+ 0 0 0 0.05 (RVW-BK02A)
%%+ 0 0 0 0.1 (RVW-BK03A)
%%+ 0 0 0 0.15 (RVW-BK04A)
%%+ 0 0 0 0.2 (RVW-BK05A)
%%+ 0 0 0 0.25 (RVW-BK06A)
%%+ 0 0 0 0.3 (RVW-BK07A)
%%+ 0 0 0 0.35 (RVW-BK08A)
%%+ 0 0 0 0.4 (RVW-BK09A)
%%+ 0 0 0 0.45 (RVW-BK10A)
%%+ 0 0 0 0.5 (RVW-BK11A)
%%+ 0 0 0 0.55 (RVW-BK12A)
%%+ 0 0 0 0.6 (RVW-BK13A)
%%+ 0 0 0 0.65 (RVW-BK14A)
%%+ 0 0 0 0.7 (RVW-BK15A)
%%+ 0 0 0 0.75 (RVW-BK16A)
%%+ 0 0 0 0.8 (RVW-BK17A)
%%+ 0 0 0 0.85 (RVW-BK18A)
%%+ 0 0 0 0.9 (RVW-BK19A)
%%+ 0 0 0 0.95 (RVW-BK20A)
%%+ 0 0 0 1 (RVW-BK21A)
%%+ 0.35 0.45 0.15 0.95 (RVW-BK22A)
%%+ 0 0 0.4 0.75 (RVW-DG01F)
%%+ 0 0 0.6 0.75 (RVW-DG01G)
%%+ 0 0 0.8 0.75 (RVW-DG01J)
%%+ 0 0 1 0.75 (RVW-DG01K)
%%+ 0.1 0 0.4 0.75 (RVW-DG04F)
%%+ 0.15 0 0.6 0.75 (RVW-DG04G)
%%+ 0.2 0 0.8 0.75 (RVW-DG04J)
%%+ 0.25 0 1 0.75 (RVW-DG04K)
%%+ 0.2 0 0.4 0.75 (RVW-DG07F)
%%+ 0.3 0 0.6 0.75 (RVW-DG07G)
%%+ 0.4 0 0.8 0.75 (RVW-DG07J)
%%+ 0.5 0 1 0.75 (RVW-DG07K)
%%+ 0.4 0 0.4 0.75 (RVW-DG12F)
%%+ 0.6 0 0.6 0.75 (RVW-DG12G)
%%+ 0.8 0 0.8 0.75 (RVW-DG12J)
%%+ 1 0 1 0.75 (RVW-DG12K)
%%+ 0.4 0 0.27 0.75 (RVW-DG15F)
%%+ 0.6 0 0.4 0.75 (RVW-DG15G)
%%+ 0.8 0 0.53 0.75 (RVW-DG15J)
%%+ 1 0 0.67 0.75 (RVW-DG15K)
%%+ 0.4 0 0.13 0.75 (RVW-DG17F)
%%+ 0.6 0 0.2 0.75 (RVW-DG17G)
%%+ 0.8 0 0.27 0.75 (RVW-DG17J)
%%+ 1 0 0.33 0.75 (RVW-DG17K)
%%+ 0.4 0 0 0.75 (RVW-DG20F)
%%+ 0.6 0 0 0.75 (RVW-DG20G)
%%+ 0.8 0 0 0.75 (RVW-DG20J)
%%+ 1 0 0 0.75 (RVW-DG20K)
%%+ 0.4 0.27 0 0.75 (RVW-DG22F)
%%+ 0.6 0.4 0 0.75 (RVW-DG22G)
%%+ 0.8 0.53 0 0.75 (RVW-DG22J)
%%+ 1 0.67 0 0.75 (RVW-DG22K)
%%+ 0.4 0.4 0 0.75 (RVW-DG26F)
%%+ 0.6 0.6 0 0.75 (RVW-DG26G)
%%+ 0.8 0.8 0 0.75 (RVW-DG26J)
%%+ 1 1 0 0.75 (RVW-DG26K)
%%+ 0.27 0.4 0 0.75 (RVW-DG30F)
%%+ 0.4 0.6 0 0.75 (RVW-DG30G)
%%+ 0.53 0.8 0 0.75 (RVW-DG30J)
%%+ 0.67 1 0 0.75 (RVW-DG30K)
%%+ 0.13 0.4 0 0.75 (RVW-DG31F)
%%+ 0.2 0.6 0 0.75 (RVW-DG31G)
%%+ 0.27 0.8 0 0.75 (RVW-DG31J)
%%+ 0.33 1 0 0.75 (RVW-DG31K)
%%+ 0 0.4 0 0.75 (RVW-DG35F)
%%+ 0 0.6 0 0.75 (RVW-DG35G)
%%+ 0 0.8 0 0.75 (RVW-DG35J)
%%+ 0 1 0 0.75 (RVW-DG35K)
%%+ 0 0.4 0.13 0.75 (RVW-DG37F)
%%+ 0 0.6 0.2 0.75 (RVW-DG37G)
%%+ 0 0.8 0.27 0.75 (RVW-DG37J)
%%+ 0 1 0.33 0.75 (RVW-DG37K)
%%+ 0 0.4 0.4 0.75 (RVW-DG43F)
%%+ 0 0.6 0.6 0.75 (RVW-DG43G)
%%+ 0 0.8 0.8 0.75 (RVW-DG43J)
%%+ 0 1 1 0.75 (RVW-DG43K)
%%+ 0 0.27 0.4 0.75 (RVW-DG45F)
%%+ 0 0.4 0.6 0.75 (RVW-DG45G)
%%+ 0 0.53 0.8 0.75 (RVW-DG45J)
%%+ 0 0.67 1 0.75 (RVW-DG45K)
%%+ 0 0.13 0.4 0.75 (RVW-DG49F)
%%+ 0 0.2 0.6 0.75 (RVW-DG49G)
%%+ 0 0.27 0.8 0.75 (RVW-DG49J)
%%+ 0 0.33 1 0.75 (RVW-DG49K)
%%+ 0 0 0.3 0.6 (RVW-DK01D)
%%+ 0 0 0.47 0.6 (RVW-DK01F)
%%+ 0 0 0.65 0.6 (RVW-DK01G)
%%+ 0 0 0.82 0.6 (RVW-DK01J)
%%+ 0 0 1 0.6 (RVW-DK01K)
%%+ 0.05 0 0.3 0.6 (RVW-DK04D)
%%+ 0.08 0 0.47 0.6 (RVW-DK04F)
%%+ 0.11 0 0.65 0.6 (RVW-DK04G)
%%+ 0.14 0 0.82 0.6 (RVW-DK04J)
%%+ 0.17 0 1 0.6 (RVW-DK04K)
%%+ 0.15 0 0.3 0.6 (RVW-DK07D)
%%+ 0.24 0 0.47 0.6 (RVW-DK07F)
%%+ 0.33 0 0.65 0.6 (RVW-DK07G)
%%+ 0.41 0 0.82 0.6 (RVW-DK07J)
%%+ 0.5 0 1 0.6 (RVW-DK07K)
%%+ 0.2 0 0.3 0.6 (RVW-DK09D)
%%+ 0.32 0 0.47 0.6 (RVW-DK09F)
%%+ 0.43 0 0.65 0.6 (RVW-DK09G)
%%+ 0.55 0 0.82 0.6 (RVW-DK09J)
%%+ 0.67 0 1 0.6 (RVW-DK09K)
%%+ 0.3 0 0.3 0.6 (RVW-DK12D)
%%+ 0.47 0 0.47 0.6 (RVW-DK12F)
%%+ 0.65 0 0.65 0.6 (RVW-DK12G)
%%+ 0.82 0 0.82 0.6 (RVW-DK12J)
%%+ 1 0 1 0.6 (RVW-DK12K)
%%+ 0.3 0 0.15 0.6 (RVW-DK15D)
%%+ 0.47 0 0.24 0.6 (RVW-DK15F)
%%+ 0.65 0 0.32 0.6 (RVW-DK15G)
%%+ 0.82 0 0.41 0.6 (RVW-DK15J)
%%+ 1 0 0.5 0.6 (RVW-DK15K)
%%+ 0.3 0 0.075 0.6 (RVW-DK17D)
%%+ 0.47 0 0.12 0.6 (RVW-DK17F)
%%+ 0.65 0 0.16 0.6 (RVW-DK17G)
%%+ 0.82 0 0.21 0.6 (RVW-DK17J)
%%+ 1 0 0.25 0.6 (RVW-DK17K)
%%+ 0.3 0 0 0.6 (RVW-DK20D)
%%+ 0.47 0 0 0.6 (RVW-DK20F)
%%+ 0.65 0 0 0.6 (RVW-DK20G)
%%+ 0.82 0 0 0.6 (RVW-DK20J)
%%+ 1 0 0 0.6 (RVW-DK20K)
%%+ 0.3 0.15 0 0.6 (RVW-DK22D)
%%+ 0.47 0.24 0 0.6 (RVW-DK22F)
%%+ 0.65 0.32 0 0.6 (RVW-DK22G)
%%+ 0.82 0.41 0 0.6 (RVW-DK22J)
%%+ 1 0.5 0 0.6 (RVW-DK22K)
%%+ 0.3 0.3 0 0.6 (RVW-DK26D)
%%+ 0.47 0.47 0 0.6 (RVW-DK26F)
%%+ 0.65 0.65 0 0.6 (RVW-DK26G)
%%+ 0.82 0.82 0 0.6 (RVW-DK26J)
%%+ 1 1 0 0.6 (RVW-DK26K)
%%+ 0.18 0.3 0 0.6 (RVW-DK30D)
%%+ 0.28 0.47 0 0.6 (RVW-DK30F)
%%+ 0.39 0.65 0 0.6 (RVW-DK30G)
%%+ 0.5 0.82 0 0.6 (RVW-DK30J)
%%+ 0.6 1 0 0.6 (RVW-DK30K)
%%+ 0.12 0.3 0 0.6 (RVW-DK31D)
%%+ 0.19 0.47 0 0.6 (RVW-DK31F)
%%+ 0.26 0.65 0 0.6 (RVW-DK31G)
%%+ 0.33 0.82 0 0.6 (RVW-DK31J)
%%+ 0.4 1 0 0.6 (RVW-DK31K)
%%+ 0 0.3 0 0.6 (RVW-DK35D)
%%+ 0 0.47 0 0.6 (RVW-DK35F)
%%+ 0 0.65 0 0.6 (RVW-DK35G)
%%+ 0 0.82 0 0.6 (RVW-DK35J)
%%+ 0 1 0 0.6 (RVW-DK35K)
%%+ 0 0.3 0.07 0.6 (RVW-DK37D)
%%+ 0 0.47 0.12 0.6 (RVW-DK37F)
%%+ 0 0.65 0.16 0.6 (RVW-DK37G)
%%+ 0 0.82 0.21 0.6 (RVW-DK37J)
%%+ 0 1 0.25 0.6 (RVW-DK37K)
%%+ 0 0.3 0.3 0.6 (RVW-DK43D)
%%+ 0 0.47 0.47 0.6 (RVW-DK43F)
%%+ 0 0.65 0.65 0.6 (RVW-DK43G)
%%+ 0 0.82 0.82 0.6 (RVW-DK43J)
%%+ 0 1 1 0.6 (RVW-DK43K)
%%+ 0 0.22 0.3 0.6 (RVW-DK45D)
%%+ 0 0.36 0.47 0.6 (RVW-DK45F)
%%+ 0 0.49 0.65 0.6 (RVW-DK45G)
%%+ 0 0.62 0.82 0.6 (RVW-DK45J)
%%+ 0 0.75 1 0.6 (RVW-DK45K)
%%+ 0 0.15 0.3 0.6 (RVW-DK47D)
%%+ 0 0.24 0.47 0.6 (RVW-DK47F)
%%+ 0 0.32 0.65 0.6 (RVW-DK47G)
%%+ 0 0.41 0.82 0.6 (RVW-DK47J)
%%+ 0 0.5 1 0.6 (RVW-DK47K)
%%+ 0 0.07 0.3 0.6 (RVW-DK49D)
%%+ 0 0.12 0.47 0.6 (RVW-DK49F)
%%+ 0 0.16 0.65 0.6 (RVW-DK49G)
%%+ 0 0.21 0.82 0.6 (RVW-DK49J)
%%+ 0 0.25 1 0.6 (RVW-DK49K)
%%+ 0 0 0.2 0.4 (RVW-DP01C)
%%+ 0 0 0.33 0.4 (RVW-DP01D)
%%+ 0 0 0.47 0.4 (RVW-DP01F)
%%+ 0 0 0.6 0.4 (RVW-DP01G)
%%+ 0 0 0.73 0.4 (RVW-DP01H)
%%+ 0 0 0.87 0.4 (RVW-DP01J)
%%+ 0 0 1 0.4 (RVW-DP01K)
%%+ 0.03 0 0.2 0.4 (RVW-DP04C)
%%+ 0.06 0 0.33 0.4 (RVW-DP04D)
%%+ 0.08 0 0.47 0.4 (RVW-DP04F)
%%+ 0.1 0 0.6 0.4 (RVW-DP04G)
%%+ 0.12 0 0.7 0.4 (RVW-DP04H)
%%+ 0.16 0 0.935 0.4 (RVW-DP04J)
%%+ 0.17 0 1 0.4 (RVW-DP04K)
%%+ 0.1 0 0.2 0.4 (RVW-DP07C)
%%+ 0.17 0 0.33 0.4 (RVW-DP07D)
%%+ 0.23 0 0.47 0.4 (RVW-DP07F)
%%+ 0.3 0 0.6 0.4 (RVW-DP07G)
%%+ 0.37 0 0.73 0.4 (RVW-DP07H)
%%+ 0.43 0 0.87 0.4 (RVW-DP07J)
%%+ 0.5 0 1 0.4 (RVW-DP07K)
%%+ 0.13 0 0.2 0.4 (RVW-DP09C)
%%+ 0.22 0 0.33 0.4 (RVW-DP09D)
%%+ 0.31 0 0.47 0.4 (RVW-DP09F)
%%+ 0.4 0 0.6 0.4 (RVW-DP09G)
%%+ 0.49 0 0.73 0.4 (RVW-DP09H)
%%+ 0.58 0 0.87 0.4 (RVW-DP09J)
%%+ 0.67 0 1 0.4 (RVW-DP09K)
%%+ 0.17 0 0.2 0.4 (RVW-DP11C)
%%+ 0.28 0 0.33 0.4 (RVW-DP11D)
%%+ 0.39 0 0.47 0.4 (RVW-DP11F)
%%+ 0.5 0 0.6 0.4 (RVW-DP11G)
%%+ 0.61 0 0.73 0.4 (RVW-DP11H)
%%+ 0.72 0 0.87 0.4 (RVW-DP11J)
%%+ 0.83 0 1 0.4 (RVW-DP11K)
%%+ 0.2 0 0.2 0.4 (RVW-DP12C)
%%+ 0.33 0 0.33 0.4 (RVW-DP12D)
%%+ 0.47 0 0.47 0.4 (RVW-DP12F)
%%+ 0.6 0 0.6 0.4 (RVW-DP12G)
%%+ 0.73 0 0.73 0.4 (RVW-DP12H)
%%+ 0.87 0 0.87 0.4 (RVW-DP12J)
%%+ 1 0 1 0.4 (RVW-DP12K)
%%+ 0.2 0 0.1 0.4 (RVW-DP15C)
%%+ 0.33 0 0.17 0.4 (RVW-DP15D)
%%+ 0.47 0 0.23 0.4 (RVW-DP15F)
%%+ 0.6 0 0.3 0.4 (RVW-DP15G)
%%+ 0.73 0 0.37 0.4 (RVW-DP15H)
%%+ 0.87 0 0.43 0.4 (RVW-DP15J)
%%+ 1 0 0.5 0.4 (RVW-DP15K)
%%+ 0.2 0 0.05 0.4 (RVW-DP17C)
%%+ 0.33 0 0.08 0.4 (RVW-DP17D)
%%+ 0.47 0 0.12 0.4 (RVW-DP17F)
%%+ 0.6 0 0.15 0.4 (RVW-DP17G)
%%+ 0.73 0 0.18 0.4 (RVW-DP17H)
%%+ 0.87 0 0.22 0.4 (RVW-DP17J)
%%+ 1 0 0.25 0.4 (RVW-DP17K)
%%+ 0.2 0 0 0.4 (RVW-DP20C)
%%+ 0.33 0 0 0.4 (RVW-DP20D)
%%+ 0.47 0 0 0.4 (RVW-DP20F)
%%+ 0.6 0 0 0.4 (RVW-DP20G)
%%+ 0.73 0 0 0.4 (RVW-DP20H)
%%+ 0.87 0 0 0.4 (RVW-DP20J)
%%+ 1 0 0 0.4 (RVW-DP20K)
%%+ 0.2 0.1 0 0.4 (RVW-DP22C)
%%+ 0.33 0.17 0 0.4 (RVW-DP22D)
%%+ 0.47 0.23 0 0.4 (RVW-DP22F)
%%+ 0.6 0.3 0 0.4 (RVW-DP22G)
%%+ 0.73 0.37 0 0.4 (RVW-DP22H)
%%+ 0.87 0.43 0 0.4 (RVW-DP22J)
%%+ 1 0.5 0 0.4 (RVW-DP22K)
%%+ 0.2 0.15 0 0.4 (RVW-DP24C)
%%+ 0.33 0.25 0 0.4 (RVW-DP24D)
%%+ 0.47 0.35 0 0.4 (RVW-DP24F)
%%+ 0.6 0.45 0 0.4 (RVW-DP24G)
%%+ 0.73 0.55 0 0.4 (RVW-DP24H)
%%+ 0.87 0.65 0 0.4 (RVW-DP24J)
%%+ 1 0.75 0 0.4 (RVW-DP24K)
%%+ 0.2 0.2 0 0.4 (RVW-DP26C)
%%+ 0.33 0.33 0 0.4 (RVW-DP26D)
%%+ 0.47 0.47 0 0.4 (RVW-DP26F)
%%+ 0.6 0.6 0 0.4 (RVW-DP26G)
%%+ 0.73 0.73 0 0.4 (RVW-DP26H)
%%+ 0.87 0.87 0 0.4 (RVW-DP26J)
%%+ 1 1 0 0.4 (RVW-DP26K)
%%+ 0.12 0.2 0 0.4 (RVW-DP30C)
%%+ 0.2 0.33 0 0.4 (RVW-DP30D)
%%+ 0.28 0.47 0 0.4 (RVW-DP30F)
%%+ 0.36 0.6 0 0.4 (RVW-DP30G)
%%+ 0.44 0.73 0 0.4 (RVW-DP30H)
%%+ 0.52 0.87 0 0.4 (RVW-DP30J)
%%+ 0.6 1 0 0.4 (RVW-DP30K)
%%+ 0.08 0.2 0 0.4 (RVW-DP31C)
%%+ 0.13 0.33 0 0.4 (RVW-DP31D)
%%+ 0.19 0.47 0 0.4 (RVW-DP31F)
%%+ 0.24 0.6 0 0.4 (RVW-DP31G)
%%+ 0.29 0.73 0 0.4 (RVW-DP31H)
%%+ 0.35 0.87 0 0.4 (RVW-DP31J)
%%+ 0.4 1 0 0.4 (RVW-DP31K)
%%+ 0.04 0.2 0 0.4 (RVW-DP33C)
%%+ 0.07 0.33 0 0.4 (RVW-DP33D)
%%+ 0.09 0.47 0 0.4 (RVW-DP33F)
%%+ 0.12 0.6 0 0.4 (RVW-DP33G)
%%+ 0.15 0.73 0 0.4 (RVW-DP33H)
%%+ 0.17 0.87 0 0.4 (RVW-DP33J)
%%+ 0.2 1 0 0.4 (RVW-DP33K)
%%+ 0 0.2 0 0.4 (RVW-DP35C)
%%+ 0 0.33 0 0.4 (RVW-DP35D)
%%+ 0 0.47 0 0.4 (RVW-DP35F)
%%+ 0 0.6 0 0.4 (RVW-DP35G)
%%+ 0 0.73 0 0.4 (RVW-DP35H)
%%+ 0 0.87 0 0.4 (RVW-DP35J)
%%+ 0 1 0 0.4 (RVW-DP35K)
%%+ 0 0.2 0.05 0.4 (RVW-DP37C)
%%+ 0 0.33 0.08 0.4 (RVW-DP37D)
%%+ 0 0.47 0.12 0.4 (RVW-DP37F)
%%+ 0 0.6 0.15 0.4 (RVW-DP37G)
%%+ 0 0.73 0.18 0.4 (RVW-DP37H)
%%+ 0 0.87 0.22 0.4 (RVW-DP37J)
%%+ 0 1 0.25 0.4 (RVW-DP37K)
%%+ 0 0.2 0.1 0.4 (RVW-DP39C)
%%+ 0 0.33 0.17 0.4 (RVW-DP39D)
%%+ 0 0.47 0.23 0.4 (RVW-DP39F)
%%+ 0 0.6 0.3 0.4 (RVW-DP39G)
%%+ 0 0.73 0.37 0.4 (RVW-DP39H)
%%+ 0 0.87 0.43 0.4 (RVW-DP39J)
%%+ 0 1 0.5 0.4 (RVW-DP39K)
%%+ 0 0.2 0.2 0.4 (RVW-DP43C)
%%+ 0 0.33 0.33 0.4 (RVW-DP43D)
%%+ 0 0.47 0.47 0.4 (RVW-DP43F)
%%+ 0 0.6 0.6 0.4 (RVW-DP43G)
%%+ 0 0.73 0.73 0.4 (RVW-DP43H)
%%+ 0 0.87 0.87 0.4 (RVW-DP43J)
%%+ 0 1 1 0.4 (RVW-DP43K)
%%+ 0 0.15 0.2 0.4 (RVW-DP45C)
%%+ 0 0.25 0.33 0.4 (RVW-DP45D)
%%+ 0 0.35 0.47 0.4 (RVW-DP45F)
%%+ 0 0.45 0.6 0.4 (RVW-DP45G)
%%+ 0 0.55 0.73 0.4 (RVW-DP45H)
%%+ 0 0.65 0.87 0.4 (RVW-DP45J)
%%+ 0 0.75 1 0.4 (RVW-DP45K)
%%+ 0 0.1 0.2 0.4 (RVW-DP47C)
%%+ 0 0.17 0.33 0.4 (RVW-DP47D)
%%+ 0 0.23 0.47 0.4 (RVW-DP47F)
%%+ 0 0.3 0.6 0.4 (RVW-DP47G)
%%+ 0 0.37 0.73 0.4 (RVW-DP47H)
%%+ 0 0.43 0.87 0.4 (RVW-DP47J)
%%+ 0 0.5 1 0.4 (RVW-DP47K)
%%+ 0 0.05 0.2 0.4 (RVW-DP49C)
%%+ 0 0.08 0.33 0.4 (RVW-DP49D)
%%+ 0 0.12 0.47 0.4 (RVW-DP49F)
%%+ 0 0.15 0.6 0.4 (RVW-DP49G)
%%+ 0 0.18 0.73 0.4 (RVW-DP49H)
%%+ 0 0.22 0.87 0.4 (RVW-DP49J)
%%+ 0 0.25 1 0.4 (RVW-DP49K)
%%+ 0 0 0.05 0 (RVW-PR01A)
%%+ 0 0 0.1 0 (RVW-PR01B)
%%+ 0 0 0.2 0 (RVW-PR01C)
%%+ 0 0 0.3 0 (RVW-PR01D)
%%+ 0 0 0.4 0 (RVW-PR01E)
%%+ 0 0 0.5 0 (RVW-PR01F)
%%+ 0 0 0.6 0 (RVW-PR01G)
%%+ 0 0 0.7 0 (RVW-PR01H)
%%+ 0 0 0.8 0 (RVW-PR01I)
%%+ 0 0 0.9 0 (RVW-PR01J)
%%+ 0 0 1 0 (RVW-PR01K)
%%+ 0.003 0 0.05 0 (RVW-PR02A)
%%+ 0.003 0 0.1 0 (RVW-PR02B)
%%+ 0.01 0 0.2 0 (RVW-PR02C)
%%+ 0.01 0 0.3 0 (RVW-PR02D)
%%+ 0.01 0 0.4 0 (RVW-PR02E)
%%+ 0.01 0 0.5 0 (RVW-PR02F)
%%+ 0.02 0 0.6 0 (RVW-PR02G)
%%+ 0.02 0 0.7 0 (RVW-PR02H)
%%+ 0.02 0 0.8 0 (RVW-PR02I)
%%+ 0.03 0 0.9 0 (RVW-PR02J)
%%+ 0.03 0 1 0 (RVW-PR02K)
%%+ 0.006 0 0.05 0 (RVW-PR03A)
%%+ 0.006 0 0.1 0 (RVW-PR03B)
%%+ 0.02 0 0.2 0 (RVW-PR03C)
%%+ 0.02 0 0.3 0 (RVW-PR03D)
%%+ 0.03 0 0.4 0 (RVW-PR03E)
%%+ 0.03 0 0.5 0 (RVW-PR03F)
%%+ 0.04 0 0.6 0 (RVW-PR03G)
%%+ 0.04 0 0.7 0 (RVW-PR03H)
%%+ 0.05 0 0.8 0 (RVW-PR03I)
%%+ 0.06 0 0.9 0 (RVW-PR03J)
%%+ 0.06 0 1 0 (RVW-PR03K)
%%+ 0.01 0 0.05 0 (RVW-PR04A)
%%+ 0.015 0 0.1 0 (RVW-PR04B)
%%+ 0.03 0 0.2 0 (RVW-PR04C)
%%+ 0.04 0 0.3 0 (RVW-PR04D)
%%+ 0.06 0 0.4 0 (RVW-PR04E)
%%+ 0.07 0 0.5 0 (RVW-PR04F)
%%+ 0.09 0 0.6 0 (RVW-PR04G)
%%+ 0.1 0 0.7 0 (RVW-PR04H)
%%+ 0.12 0 0.8 0 (RVW-PR04I)
%%+ 0.13 0 0.9 0 (RVW-PR04J)
%%+ 0.15 0 1 0 (RVW-PR04K)
%%+ 0.014 0 0.05 0 (RVW-PR05A)
%%+ 0.025 0 0.1 0 (RVW-PR05B)
%%+ 0.04 0 0.2 0 (RVW-PR05C)
%%+ 0.07 0 0.3 0 (RVW-PR05D)
%%+ 0.09 0 0.4 0 (RVW-PR05E)
%%+ 0.12 0 0.5 0 (RVW-PR05F)
%%+ 0.14 0 0.6 0 (RVW-PR05G)
%%+ 0.16 0 0.7 0 (RVW-PR05H)
%%+ 0.19 0 0.8 0 (RVW-PR05I)
%%+ 0.21 0 0.9 0 (RVW-PR05J)
%%+ 0.23 0 1 0 (RVW-PR05K)
%%+ 0.018 0 0.05 0 (RVW-PR06A)
%%+ 0.035 0 0.1 0 (RVW-PR06B)
%%+ 0.06 0 0.2 0 (RVW-PR06C)
%%+ 0.09 0 0.3 0 (RVW-PR06D)
%%+ 0.13 0 0.4 0 (RVW-PR06E)
%%+ 0.16 0 0.5 0 (RVW-PR06F)
%%+ 0.19 0 0.6 0 (RVW-PR06G)
%%+ 0.22 0 0.7 0 (RVW-PR06H)
%%+ 0.25 0 0.8 0 (RVW-PR06I)
%%+ 0.29 0 0.9 0 (RVW-PR06J)
%%+ 0.32 0 1 0 (RVW-PR06K)
%%+ 0.022 0 0.05 0 (RVW-PR07A)
%%+ 0.045 0 0.1 0 (RVW-PR07B)
%%+ 0.08 0 0.2 0 (RVW-PR07C)
%%+ 0.12 0 0.3 0 (RVW-PR07D)
%%+ 0.17 0 0.4 0 (RVW-PR07E)
%%+ 0.22 0 0.5 0 (RVW-PR07F)
%%+ 0.26 0 0.6 0 (RVW-PR07G)
%%+ 0.3 0 0.7 0 (RVW-PR07H)
%%+ 0.35 0 0.8 0 (RVW-PR07I)
%%+ 0.39 0 0.9 0 (RVW-PR07J)
%%+ 0.43 0 1 0 (RVW-PR07K)
%%+ 0.026 0 0.05 0 (RVW-PR08A)
%%+ 0.055 0 0.1 0 (RVW-PR08B)
%%+ 0.11 0 0.2 0 (RVW-PR08C)
%%+ 0.16 0 0.3 0 (RVW-PR08D)
%%+ 0.22 0 0.4 0 (RVW-PR08E)
%%+ 0.27 0 0.5 0 (RVW-PR08F)
%%+ 0.33 0 0.6 0 (RVW-PR08G)
%%+ 0.38 0 0.7 0 (RVW-PR08H)
%%+ 0.44 0 0.8 0 (RVW-PR08I)
%%+ 0.49 0 0.9 0 (RVW-PR08J)
%%+ 0.55 0 1 0 (RVW-PR08K)
%%+ 0.035 0 0.05 0 (RVW-PR09A)
%%+ 0.065 0 0.1 0 (RVW-PR09B)
%%+ 0.13 0 0.2 0 (RVW-PR09C)
%%+ 0.2 0 0.3 0 (RVW-PR09D)
%%+ 0.26 0 0.4 0 (RVW-PR09E)
%%+ 0.33 0 0.5 0 (RVW-PR09F)
%%+ 0.4 0 0.6 0 (RVW-PR09G)
%%+ 0.46 0 0.7 0 (RVW-PR09H)
%%+ 0.53 0 0.8 0 (RVW-PR09I)
%%+ 0.59 0 0.9 0 (RVW-PR09J)
%%+ 0.65 0 1 0 (RVW-PR09K)
%%+ 0.04 0 0.05 0 (RVW-PR10A)
%%+ 0.08 0 0.1 0 (RVW-PR10B)
%%+ 0.15 0 0.2 0 (RVW-PR10C)
%%+ 0.23 0 0.3 0 (RVW-PR10D)
%%+ 0.31 0 0.4 0 (RVW-PR10E)
%%+ 0.39 0 0.5 0 (RVW-PR10F)
%%+ 0.46 0 0.6 0 (RVW-PR10G)
%%+ 0.54 0 0.7 0 (RVW-PR10H)
%%+ 0.62 0 0.8 0 (RVW-PR10I)
%%+ 0.7 0 0.9 0 (RVW-PR10J)
%%+ 0.77 0 1 0 (RVW-PR10K)
%%+ 0.045 0 0.05 0 (RVW-PR11A)
%%+ 0.09 0 0.1 0 (RVW-PR11B)
%%+ 0.18 0 0.2 0 (RVW-PR11C)
%%+ 0.26 0 0.3 0 (RVW-PR11D)
%%+ 0.35 0 0.4 0 (RVW-PR11E)
%%+ 0.44 0 0.5 0 (RVW-PR11F)
%%+ 0.53 0 0.6 0 (RVW-PR11G)
%%+ 0.62 0 0.7 0 (RVW-PR11H)
%%+ 0.71 0 0.8 0 (RVW-PR11I)
%%+ 0.8 0 0.9 0 (RVW-PR11J)
%%+ 0.89 0 1 0 (RVW-PR11K)
%%+ 0.05 0 0.05 0 (RVW-PR12A)
%%+ 0.1 0 0.1 0 (RVW-PR12B)
%%+ 0.2 0 0.2 0 (RVW-PR12C)
%%+ 0.3 0 0.3 0 (RVW-PR12D)
%%+ 0.4 0 0.4 0 (RVW-PR12E)
%%+ 0.5 0 0.5 0 (RVW-PR12F)
%%+ 0.6 0 0.6 0 (RVW-PR12G)
%%+ 0.7 0 0.7 0 (RVW-PR12H)
%%+ 0.8 0 0.8 0 (RVW-PR12I)
%%+ 0.9 0 0.9 0 (RVW-PR12J)
%%+ 1 0 1 0 (RVW-PR12K)
%%+ 0.05 0 0.04 0 (RVW-PR13A)
%%+ 0.1 0 0.085 0 (RVW-PR13B)
%%+ 0.2 0 0.17 0 (RVW-PR13C)
%%+ 0.3 0 0.26 0 (RVW-PR13D)
%%+ 0.4 0 0.34 0 (RVW-PR13E)
%%+ 0.5 0 0.43 0 (RVW-PR13F)
%%+ 0.6 0 0.51 0 (RVW-PR13G)
%%+ 0.7 0 0.6 0 (RVW-PR13H)
%%+ 0.8 0 0.68 0 (RVW-PR13I)
%%+ 0.9 0 0.77 0 (RVW-PR13J)
%%+ 1 0 0.85 0 (RVW-PR13K)
%%+ 0.05 0 0.035 0 (RVW-PR14A)
%%+ 0.1 0 0.07 0 (RVW-PR14B)
%%+ 0.2 0 0.14 0 (RVW-PR14C)
%%+ 0.3 0 0.21 0 (RVW-PR14D)
%%+ 0.4 0 0.29 0 (RVW-PR14E)
%%+ 0.5 0 0.36 0 (RVW-PR14F)
%%+ 0.6 0 0.43 0 (RVW-PR14G)
%%+ 0.7 0 0.5 0 (RVW-PR14H)
%%+ 0.8 0 0.57 0 (RVW-PR14I)
%%+ 0.9 0 0.64 0 (RVW-PR14J)
%%+ 1 0 0.7 0 (RVW-PR14K)
%%+ 0.05 0 0.025 0 (RVW-PR15A)
%%+ 0.1 0 0.06 0 (RVW-PR15B)
%%+ 0.2 0 0.11 0 (RVW-PR15C)
%%+ 0.3 0 0.17 0 (RVW-PR15D)
%%+ 0.4 0 0.23 0 (RVW-PR15E)
%%+ 0.5 0 0.29 0 (RVW-PR15F)
%%+ 0.6 0 0.34 0 (RVW-PR15G)
%%+ 0.7 0 0.4 0 (RVW-PR15H)
%%+ 0.8 0 0.45 0 (RVW-PR15I)
%%+ 0.9 0 0.51 0 (RVW-PR15J)
%%+ 1 0 0.57 0 (RVW-PR15K)
%%+ 0.05 0 0.02 0 (RVW-PR16A)
%%+ 0.1 0 0.05 0 (RVW-PR16B)
%%+ 0.2 0 0.09 0 (RVW-PR16C)
%%+ 0.3 0 0.13 0 (RVW-PR16D)
%%+ 0.4 0 0.17 0 (RVW-PR16E)
%%+ 0.5 0 0.21 0 (RVW-PR16F)
%%+ 0.6 0 0.26 0 (RVW-PR16G)
%%+ 0.7 0 0.3 0 (RVW-PR16H)
%%+ 0.8 0 0.35 0 (RVW-PR16I)
%%+ 0.9 0 0.39 0 (RVW-PR16J)
%%+ 1 0 0.43 0 (RVW-PR16K)
%%+ 0.05 0 0.015 0 (RVW-PR17A)
%%+ 0.1 0 0.03 0 (RVW-PR17B)
%%+ 0.2 0 0.06 0 (RVW-PR17C)
%%+ 0.3 0 0.09 0 (RVW-PR17D)
%%+ 0.4 0 0.11 0 (RVW-PR17E)
%%+ 0.5 0 0.14 0 (RVW-PR17F)
%%+ 0.6 0 0.17 0 (RVW-PR17G)
%%+ 0.7 0 0.2 0 (RVW-PR17H)
%%+ 0.8 0 0.23 0 (RVW-PR17I)
%%+ 0.9 0 0.25 0 (RVW-PR17J)
%%+ 1 0 0.28 0 (RVW-PR17K)
%%+ 0.05 0 0.005 0 (RVW-PR18A)
%%+ 0.1 0 0.015 0 (RVW-PR18B)
%%+ 0.2 0 0.03 0 (RVW-PR18C)
%%+ 0.3 0 0.04 0 (RVW-PR18D)
%%+ 0.4 0 0.06 0 (RVW-PR18E)
%%+ 0.5 0 0.07 0 (RVW-PR18F)
%%+ 0.6 0 0.09 0 (RVW-PR18G)
%%+ 0.7 0 0.1 0 (RVW-PR18H)
%%+ 0.8 0 0.11 0 (RVW-PR18I)
%%+ 0.9 0 0.13 0 (RVW-PR18J)
%%+ 1 0 0.15 0 (RVW-PR18K)
%%+ 0.05 0 0 0 (RVW-PR19A)
%%+ 0.1 0 0 0 (RVW-PR19B)
%%+ 0.2 0 0 0 (RVW-PR19C)
%%+ 0.3 0 0 0 (RVW-PR19D)
%%+ 0.4 0 0 0 (RVW-PR19E)
%%+ 0.5 0 0 0 (RVW-PR19F)
%%+ 0.6 0 0 0 (RVW-PR19G)
%%+ 0.7 0 0 0 (RVW-PR19H)
%%+ 0.8 0 0 0 (RVW-PR19I)
%%+ 0.9 0 0 0 (RVW-PR19J)
%%+ 1 0 0 0 (RVW-PR19K)
%%+ 0.05 0.005 0 0 (RVW-PR20A)
%%+ 0.1 0.015 0 0 (RVW-PR20B)
%%+ 0.2 0.03 0 0 (RVW-PR20C)
%%+ 0.3 0.04 0 0 (RVW-PR20D)
%%+ 0.4 0.06 0 0 (RVW-PR20E)
%%+ 0.5 0.07 0 0 (RVW-PR20F)
%%+ 0.6 0.09 0 0 (RVW-PR20G)
%%+ 0.7 0.1 0 0 (RVW-PR20H)
%%+ 0.8 0.11 0 0 (RVW-PR20I)
%%+ 0.9 0.13 0 0 (RVW-PR20J)
%%+ 1 0.15 0 0 (RVW-PR20K)
%%+ 0.05 0.015 0 0 (RVW-PR21A)
%%+ 0.1 0.03 0 0 (RVW-PR21B)
%%+ 0.2 0.06 0 0 (RVW-PR21C)
%%+ 0.3 0.09 0 0 (RVW-PR21D)
%%+ 0.4 0.11 0 0 (RVW-PR21E)
%%+ 0.5 0.14 0 0 (RVW-PR21F)
%%+ 0.6 0.17 0 0 (RVW-PR21G)
%%+ 0.7 0.2 0 0 (RVW-PR21H)
%%+ 0.8 0.23 0 0 (RVW-PR21I)
%%+ 0.9 0.25 0 0 (RVW-PR21J)
%%+ 1 0.28 0 0 (RVW-PR21K)
%%+ 0.05 0.02 0 0 (RVW-PR22A)
%%+ 0.1 0.04 0 0 (RVW-PR22B)
%%+ 0.2 0.09 0 0 (RVW-PR22C)
%%+ 0.3 0.13 0 0 (RVW-PR22D)
%%+ 0.4 0.17 0 0 (RVW-PR22E)
%%+ 0.5 0.21 0 0 (RVW-PR22F)
%%+ 0.6 0.26 0 0 (RVW-PR22G)
%%+ 0.7 0.3 0 0 (RVW-PR22H)
%%+ 0.8 0.34 0 0 (RVW-PR22I)
%%+ 0.9 0.38 0 0 (RVW-PR22J)
%%+ 1 0.43 0 0 (RVW-PR22K)
%%+ 0.05 0.025 0 0 (RVW-PR23A)
%%+ 0.1 0.06 0 0 (RVW-PR23B)
%%+ 0.2 0.11 0 0 (RVW-PR23C)
%%+ 0.3 0.17 0 0 (RVW-PR23D)
%%+ 0.4 0.23 0 0 (RVW-PR23E)
%%+ 0.5 0.29 0 0 (RVW-PR23F)
%%+ 0.6 0.34 0 0 (RVW-PR23G)
%%+ 0.7 0.4 0 0 (RVW-PR23H)
%%+ 0.8 0.46 0 0 (RVW-PR23I)
%%+ 0.9 0.51 0 0 (RVW-PR23J)
%%+ 1 0.57 0 0 (RVW-PR23K)
%%+ 0.05 0.035 0 0 (RVW-PR24A)
%%+ 0.1 0.07 0 0 (RVW-PR24B)
%%+ 0.2 0.12 0 0 (RVW-PR24C)
%%+ 0.3 0.21 0 0 (RVW-PR24D)
%%+ 0.4 0.29 0 0 (RVW-PR24E)
%%+ 0.5 0.36 0 0 (RVW-PR24F)
%%+ 0.6 0.43 0 0 (RVW-PR24G)
%%+ 0.7 0.5 0 0 (RVW-PR24H)
%%+ 0.8 0.57 0 0 (RVW-PR24I)
%%+ 0.9 0.64 0 0 (RVW-PR24J)
%%+ 1 0.7 0 0 (RVW-PR24K)
%%+ 0.05 0.04 0 0 (RVW-PR25A)
%%+ 0.1 0.09 0 0 (RVW-PR25B)
%%+ 0.2 0.16 0 0 (RVW-PR25C)
%%+ 0.3 0.26 0 0 (RVW-PR25D)
%%+ 0.4 0.34 0 0 (RVW-PR25E)
%%+ 0.5 0.43 0 0 (RVW-PR25F)
%%+ 0.6 0.51 0 0 (RVW-PR25G)
%%+ 0.7 0.6 0 0 (RVW-PR25H)
%%+ 0.8 0.68 0 0 (RVW-PR25I)
%%+ 0.9 0.77 0 0 (RVW-PR25J)
%%+ 1 0.85 0 0 (RVW-PR25K)
%%+ 0.05 0.05 0 0 (RVW-PR26A)
%%+ 0.1 0.1 0 0 (RVW-PR26B)
%%+ 0.2 0.2 0 0 (RVW-PR26C)
%%+ 0.3 0.3 0 0 (RVW-PR26D)
%%+ 0.4 0.4 0 0 (RVW-PR26E)
%%+ 0.5 0.5 0 0 (RVW-PR26F)
%%+ 0.6 0.6 0 0 (RVW-PR26G)
%%+ 0.7 0.7 0 0 (RVW-PR26H)
%%+ 0.8 0.8 0 0 (RVW-PR26I)
%%+ 0.9 0.9 0 0 (RVW-PR26J)
%%+ 1 1 0 0 (RVW-PR26K)
%%+ 0.045 0.05 0 0 (RVW-PR27A)
%%+ 0.09 0.1 0 0 (RVW-PR27B)
%%+ 0.18 0.2 0 0 (RVW-PR27C)
%%+ 0.27 0.3 0 0 (RVW-PR27D)
%%+ 0.36 0.4 0 0 (RVW-PR27E)
%%+ 0.45 0.5 0 0 (RVW-PR27F)
%%+ 0.53 0.6 0 0 (RVW-PR27G)
%%+ 0.62 0.7 0 0 (RVW-PR27H)
%%+ 0.71 0.8 0 0 (RVW-PR27I)
%%+ 0.8 0.9 0 0 (RVW-PR27J)
%%+ 0.9 1 0 0 (RVW-PR27K)
%%+ 0.04 0.05 0 0 (RVW-PR28A)
%%+ 0.08 0.1 0 0 (RVW-PR28B)
%%+ 0.16 0.2 0 0 (RVW-PR28C)
%%+ 0.23 0.3 0 0 (RVW-PR28D)
%%+ 0.31 0.4 0 0 (RVW-PR28E)
%%+ 0.39 0.5 0 0 (RVW-PR28F)
%%+ 0.47 0.6 0 0 (RVW-PR28G)
%%+ 0.55 0.7 0 0 (RVW-PR28H)
%%+ 0.62 0.8 0 0 (RVW-PR28I)
%%+ 0.7 0.9 0 0 (RVW-PR28J)
%%+ 0.78 1 0 0 (RVW-PR28K)
%%+ 0.035 0.05 0 0 (RVW-PR29A)
%%+ 0.07 0.1 0 0 (RVW-PR29B)
%%+ 0.13 0.2 0 0 (RVW-PR29C)
%%+ 0.2 0.3 0 0 (RVW-PR29D)
%%+ 0.27 0.4 0 0 (RVW-PR29E)
%%+ 0.33 0.5 0 0 (RVW-PR29F)
%%+ 0.4 0.6 0 0 (RVW-PR29G)
%%+ 0.47 0.7 0 0 (RVW-PR29H)
%%+ 0.53 0.8 0 0 (RVW-PR29I)
%%+ 0.6 0.9 0 0 (RVW-PR29J)
%%+ 0.67 1 0 0 (RVW-PR29K)
%%+ 0.02 0.05 0 0 (RVW-PR30A)
%%+ 0.06 0.1 0 0 (RVW-PR30B)
%%+ 0.11 0.2 0 0 (RVW-PR30C)
%%+ 0.17 0.3 0 0 (RVW-PR30D)
%%+ 0.22 0.4 0 0 (RVW-PR30E)
%%+ 0.28 0.5 0 0 (RVW-PR30F)
%%+ 0.33 0.6 0 0 (RVW-PR30G)
%%+ 0.39 0.7 0 0 (RVW-PR30H)
%%+ 0.45 0.8 0 0 (RVW-PR30I)
%%+ 0.5 0.9 0 0 (RVW-PR30J)
%%+ 0.55 1 0 0 (RVW-PR30K)
%%+ 0.015 0.05 0 0 (RVW-PR31A)
%%+ 0.045 0.1 0 0 (RVW-PR31B)
%%+ 0.09 0.2 0 0 (RVW-PR31C)
%%+ 0.135 0.3 0 0 (RVW-PR31D)
%%+ 0.18 0.4 0 0 (RVW-PR31E)
%%+ 0.22 0.5 0 0 (RVW-PR31F)
%%+ 0.27 0.6 0 0 (RVW-PR31G)
%%+ 0.31 0.7 0 0 (RVW-PR31H)
%%+ 0.35 0.8 0 0 (RVW-PR31I)
%%+ 0.4 0.9 0 0 (RVW-PR31J)
%%+ 0.45 1 0 0 (RVW-PR31K)
%%+ 0.01 0.05 0 0 (RVW-PR32A)
%%+ 0.03 0.1 0 0 (RVW-PR32B)
%%+ 0.07 0.2 0 0 (RVW-PR32C)
%%+ 0.1 0.3 0 0 (RVW-PR32D)
%%+ 0.13 0.4 0 0 (RVW-PR32E)
%%+ 0.17 0.5 0 0 (RVW-PR32F)
%%+ 0.2 0.6 0 0 (RVW-PR32G)
%%+ 0.23 0.7 0 0 (RVW-PR32H)
%%+ 0.26 0.8 0 0 (RVW-PR32I)
%%+ 0.3 0.9 0 0 (RVW-PR32J)
%%+ 0.33 1 0 0 (RVW-PR32K)
%%+ 0.006 0.05 0 0 (RVW-PR33A)
%%+ 0.02 0.1 0 0 (RVW-PR33B)
%%+ 0.04 0.2 0 0 (RVW-PR33C)
%%+ 0.07 0.3 0 0 (RVW-PR33D)
%%+ 0.09 0.4 0 0 (RVW-PR33E)
%%+ 0.11 0.5 0 0 (RVW-PR33F)
%%+ 0.13 0.6 0 0 (RVW-PR33G)
%%+ 0.15 0.7 0 0 (RVW-PR33H)
%%+ 0.18 0.8 0 0 (RVW-PR33I)
%%+ 0.2 0.9 0 0 (RVW-PR33J)
%%+ 0.22 1 0 0 (RVW-PR33K)
%%+ 0.003 0.05 0 0 (RVW-PR34A)
%%+ 0.01 0.1 0 0 (RVW-PR34B)
%%+ 0.02 0.2 0 0 (RVW-PR34C)
%%+ 0.03 0.3 0 0 (RVW-PR34D)
%%+ 0.04 0.4 0 0 (RVW-PR34E)
%%+ 0.06 0.5 0 0 (RVW-PR34F)
%%+ 0.07 0.6 0 0 (RVW-PR34G)
%%+ 0.08 0.7 0 0 (RVW-PR34H)
%%+ 0.09 0.8 0 0 (RVW-PR34I)
%%+ 0.1 0.9 0 0 (RVW-PR34J)
%%+ 0.11 1 0 0 (RVW-PR34K)
%%+ 0 0.05 0 0 (RVW-PR35A)
%%+ 0 0.1 0 0 (RVW-PR35B)
%%+ 0 0.2 0 0 (RVW-PR35C)
%%+ 0 0.3 0 0 (RVW-PR35D)
%%+ 0 0.4 0 0 (RVW-PR35E)
%%+ 0 0.5 0 0 (RVW-PR35F)
%%+ 0 0.6 0 0 (RVW-PR35G)
%%+ 0 0.7 0 0 (RVW-PR35H)
%%+ 0 0.8 0 0 (RVW-PR35I)
%%+ 0 0.9 0 0 (RVW-PR35J)
%%+ 0 1 0 0 (RVW-PR35K)
%%+ 0 0.05 0.01 0 (RVW-PR36A)
%%+ 0 0.1 0.012 0 (RVW-PR36B)
%%+ 0 0.2 0.02 0 (RVW-PR36C)
%%+ 0 0.3 0.04 0 (RVW-PR36D)
%%+ 0 0.4 0.05 0 (RVW-PR36E)
%%+ 0 0.5 0.06 0 (RVW-PR36F)
%%+ 0 0.6 0.07 0 (RVW-PR36G)
%%+ 0 0.7 0.09 0 (RVW-PR36H)
%%+ 0 0.8 0.1 0 (RVW-PR36I)
%%+ 0 0.9 0.11 0 (RVW-PR36J)
%%+ 0 1 0.12 0 (RVW-PR36K)
%%+ 0 0.05 0.015 0 (RVW-PR37A)
%%+ 0 0.1 0.025 0 (RVW-PR37B)
%%+ 0 0.2 0.05 0 (RVW-PR37C)
%%+ 0 0.3 0.07 0 (RVW-PR37D)
%%+ 0 0.4 0.1 0 (RVW-PR37E)
%%+ 0 0.5 0.12 0 (RVW-PR37F)
%%+ 0 0.6 0.15 0 (RVW-PR37G)
%%+ 0 0.7 0.17 0 (RVW-PR37H)
%%+ 0 0.8 0.2 0 (RVW-PR37I)
%%+ 0 0.9 0.22 0 (RVW-PR37J)
%%+ 0 1 0.25 0 (RVW-PR37K)
%%+ 0 0.05 0.02 0 (RVW-PR38A)
%%+ 0 0.1 0.04 0 (RVW-PR38B)
%%+ 0 0.2 0.07 0 (RVW-PR38C)
%%+ 0 0.3 0.11 0 (RVW-PR38D)
%%+ 0 0.4 0.15 0 (RVW-PR38E)
%%+ 0 0.5 0.19 0 (RVW-PR38F)
%%+ 0 0.6 0.22 0 (RVW-PR38G)
%%+ 0 0.7 0.26 0 (RVW-PR38H)
%%+ 0 0.8 0.3 0 (RVW-PR38I)
%%+ 0 0.9 0.34 0 (RVW-PR38J)
%%+ 0 1 0.37 0 (RVW-PR38K)
%%+ 0 0.05 0.025 0 (RVW-PR39A)
%%+ 0 0.1 0.05 0 (RVW-PR39B)
%%+ 0 0.2 0.1 0 (RVW-PR39C)
%%+ 0 0.3 0.15 0 (RVW-PR39D)
%%+ 0 0.4 0.2 0 (RVW-PR39E)
%%+ 0 0.5 0.25 0 (RVW-PR39F)
%%+ 0 0.6 0.3 0 (RVW-PR39G)
%%+ 0 0.7 0.35 0 (RVW-PR39H)
%%+ 0 0.8 0.4 0 (RVW-PR39I)
%%+ 0 0.9 0.45 0 (RVW-PR39J)
%%+ 0 1 0.5 0 (RVW-PR39K)
%%+ 0 0.05 0.03 0 (RVW-PR40A)
%%+ 0 0.1 0.062 0 (RVW-PR40B)
%%+ 0 0.2 0.12 0 (RVW-PR40C)
%%+ 0 0.3 0.19 0 (RVW-PR40D)
%%+ 0 0.4 0.25 0 (RVW-PR40E)
%%+ 0 0.5 0.31 0 (RVW-PR40F)
%%+ 0 0.6 0.37 0 (RVW-PR40G)
%%+ 0 0.7 0.44 0 (RVW-PR40H)
%%+ 0 0.8 0.5 0 (RVW-PR40I)
%%+ 0 0.9 0.56 0 (RVW-PR40J)
%%+ 0 1 0.62 0 (RVW-PR40K)
%%+ 0 0.05 0.035 0 (RVW-PR41A)
%%+ 0 0.1 0.075 0 (RVW-PR41B)
%%+ 0 0.2 0.15 0 (RVW-PR41C)
%%+ 0 0.3 0.22 0 (RVW-PR41D)
%%+ 0 0.4 0.3 0 (RVW-PR41E)
%%+ 0 0.5 0.37 0 (RVW-PR41F)
%%+ 0 0.6 0.45 0 (RVW-PR41G)
%%+ 0 0.7 0.52 0 (RVW-PR41H)
%%+ 0 0.8 0.6 0 (RVW-PR41I)
%%+ 0 0.9 0.67 0 (RVW-PR41J)
%%+ 0 1 0.75 0 (RVW-PR41K)
%%+ 0 0.05 0.045 0 (RVW-PR42A)
%%+ 0 0.1 0.09 0 (RVW-PR42B)
%%+ 0 0.2 0.17 0 (RVW-PR42C)
%%+ 0 0.3 0.26 0 (RVW-PR42D)
%%+ 0 0.4 0.35 0 (RVW-PR42E)
%%+ 0 0.5 0.44 0 (RVW-PR42F)
%%+ 0 0.6 0.52 0 (RVW-PR42G)
%%+ 0 0.7 0.61 0 (RVW-PR42H)
%%+ 0 0.8 0.7 0 (RVW-PR42I)
%%+ 0 0.9 0.79 0 (RVW-PR42J)
%%+ 0 1 0.87 0 (RVW-PR42K)
%%+ 0 0.05 0.05 0 (RVW-PR43A)
%%+ 0 0.1 0.1 0 (RVW-PR43B)
%%+ 0 0.2 0.2 0 (RVW-PR43C)
%%+ 0 0.3 0.3 0 (RVW-PR43D)
%%+ 0 0.4 0.4 0 (RVW-PR43E)
%%+ 0 0.5 0.5 0 (RVW-PR43F)
%%+ 0 0.6 0.6 0 (RVW-PR43G)
%%+ 0 0.7 0.7 0 (RVW-PR43H)
%%+ 0 0.8 0.8 0 (RVW-PR43I)
%%+ 0 0.9 0.9 0 (RVW-PR43J)
%%+ 0 1 1 0 (RVW-PR43K)
%%+ 0 0.045 0.05 0 (RVW-PR44A)
%%+ 0 0.09 0.1 0 (RVW-PR44B)
%%+ 0 0.17 0.2 0 (RVW-PR44C)
%%+ 0 0.26 0.3 0 (RVW-PR44D)
%%+ 0 0.35 0.4 0 (RVW-PR44E)
%%+ 0 0.44 0.5 0 (RVW-PR44F)
%%+ 0 0.53 0.6 0 (RVW-PR44G)
%%+ 0 0.61 0.7 0 (RVW-PR44H)
%%+ 0 0.7 0.8 0 (RVW-PR44I)
%%+ 0 0.79 0.9 0 (RVW-PR44J)
%%+ 0 0.87 1 0 (RVW-PR44K)
%%+ 0 0.035 0.05 0 (RVW-PR45A)
%%+ 0 0.075 0.1 0 (RVW-PR45B)
%%+ 0 0.15 0.2 0 (RVW-PR45C)
%%+ 0 0.22 0.3 0 (RVW-PR45D)
%%+ 0 0.3 0.4 0 (RVW-PR45E)
%%+ 0 0.37 0.5 0 (RVW-PR45F)
%%+ 0 0.45 0.6 0 (RVW-PR45G)
%%+ 0 0.52 0.7 0 (RVW-PR45H)
%%+ 0 0.6 0.8 0 (RVW-PR45I)
%%+ 0 0.67 0.9 0 (RVW-PR45J)
%%+ 0 0.75 1 0 (RVW-PR45K)
%%+ 0 0.03 0.05 0 (RVW-PR46A)
%%+ 0 0.06 0.1 0 (RVW-PR46B)
%%+ 0 0.12 0.2 0 (RVW-PR46C)
%%+ 0 0.19 0.3 0 (RVW-PR46D)
%%+ 0 0.25 0.4 0 (RVW-PR46E)
%%+ 0 0.31 0.5 0 (RVW-PR46F)
%%+ 0 0.37 0.6 0 (RVW-PR46G)
%%+ 0 0.44 0.7 0 (RVW-PR46H)
%%+ 0 0.5 0.8 0 (RVW-PR46I)
%%+ 0 0.56 0.9 0 (RVW-PR46J)
%%+ 0 0.62 1 0 (RVW-PR46K)
%%+ 0 0.025 0.05 0 (RVW-PR47A)
%%+ 0 0.05 0.1 0 (RVW-PR47B)
%%+ 0 0.1 0.2 0 (RVW-PR47C)
%%+ 0 0.15 0.3 0 (RVW-PR47D)
%%+ 0 0.2 0.4 0 (RVW-PR47E)
%%+ 0 0.25 0.5 0 (RVW-PR47F)
%%+ 0 0.3 0.6 0 (RVW-PR47G)
%%+ 0 0.35 0.7 0 (RVW-PR47H)
%%+ 0 0.4 0.8 0 (RVW-PR47I)
%%+ 0 0.45 0.9 0 (RVW-PR47J)
%%+ 0 0.5 1 0 (RVW-PR47K)
%%+ 0 0.02 0.05 0 (RVW-PR48A)
%%+ 0 0.04 0.1 0 (RVW-PR48B)
%%+ 0 0.07 0.2 0 (RVW-PR48C)
%%+ 0 0.11 0.3 0 (RVW-PR48D)
%%+ 0 0.15 0.4 0 (RVW-PR48E)
%%+ 0 0.19 0.5 0 (RVW-PR48F)
%%+ 0 0.22 0.6 0 (RVW-PR48G)
%%+ 0 0.26 0.7 0 (RVW-PR48H)
%%+ 0 0.3 0.8 0 (RVW-PR48I)
%%+ 0 0.34 0.9 0 (RVW-PR48J)
%%+ 0 0.37 1 0 (RVW-PR48K)
%%+ 0 0.013 0.05 0 (RVW-PR49A)
%%+ 0 0.025 0.1 0 (RVW-PR49B)
%%+ 0 0.05 0.2 0 (RVW-PR49C)
%%+ 0 0.07 0.3 0 (RVW-PR49D)
%%+ 0 0.1 0.4 0 (RVW-PR49E)
%%+ 0 0.12 0.5 0 (RVW-PR49F)
%%+ 0 0.15 0.6 0 (RVW-PR49G)
%%+ 0 0.17 0.7 0 (RVW-PR49H)
%%+ 0 0.2 0.8 0 (RVW-PR49I)
%%+ 0 0.22 0.9 0 (RVW-PR49J)
%%+ 0 0.25 1 0 (RVW-PR49K)
%%+ 0 0.005 0.05 0 (RVW-PR50A)
%%+ 0 0.012 0.1 0 (RVW-PR50B)
%%+ 0 0.02 0.2 0 (RVW-PR50C)
%%+ 0 0.04 0.3 0 (RVW-PR50D)
%%+ 0 0.05 0.4 0 (RVW-PR50E)
%%+ 0 0.06 0.5 0 (RVW-PR50F)
%%+ 0 0.07 0.6 0 (RVW-PR50G)
%%+ 0 0.09 0.7 0 (RVW-PR50H)
%%+ 0 0.1 0.8 0 (RVW-PR50I)
%%+ 0 0.11 0.9 0 (RVW-PR50J)
%%+ 0 0.12 1 0 (RVW-PR50K)
%%+ 0 0 0.1 0.2 (RVW-ST01B)
%%+ 0 0 0.2 0.2 (RVW-ST01C)
%%+ 0 0 0.3 0.2 (RVW-ST01D)
%%+ 0 0 0.4 0.2 (RVW-ST01E)
%%+ 0 0 0.5 0.2 (RVW-ST01F)
%%+ 0 0 0.6 0.2 (RVW-ST01G)
%%+ 0 0 0.7 0.2 (RVW-ST01H)
%%+ 0 0 0.8 0.2 (RVW-ST01I)
%%+ 0 0 0.9 0.2 (RVW-ST01J)
%%+ 0 0 1 0.2 (RVW-ST01K)
%%+ 0.01 0 0.1 0.2 (RVW-ST03B)
%%+ 0.02 0 0.2 0.2 (RVW-ST03C)
%%+ 0.025 0 0.3 0.2 (RVW-ST03D)
%%+ 0.03 0 0.4 0.2 (RVW-ST03E)
%%+ 0.04 0 0.5 0.2 (RVW-ST03F)
%%+ 0.05 0 0.6 0.2 (RVW-ST03G)
%%+ 0.06 0 0.7 0.2 (RVW-ST03H)
%%+ 0.07 0 0.8 0.2 (RVW-ST03I)
%%+ 0.075 0 0.9 0.2 (RVW-ST03J)
%%+ 0.08 0 1 0.2 (RVW-ST03K)
%%+ 0.02 0 0.1 0.2 (RVW-ST04B)
%%+ 0.03 0 0.2 0.2 (RVW-ST04C)
%%+ 0.05 0 0.3 0.2 (RVW-ST04D)
%%+ 0.07 0 0.4 0.2 (RVW-ST04E)
%%+ 0.08 0 0.5 0.2 (RVW-ST04F)
%%+ 0.1 0 0.6 0.2 (RVW-ST04G)
%%+ 0.12 0 0.7 0.2 (RVW-ST04H)
%%+ 0.13 0 0.8 0.2 (RVW-ST04I)
%%+ 0.15 0 0.9 0.2 (RVW-ST04J)
%%+ 0.17 0 1 0.2 (RVW-ST04K)
%%+ 0.05 0 0.1 0.2 (RVW-ST07B)
%%+ 0.1 0 0.2 0.2 (RVW-ST07C)
%%+ 0.15 0 0.3 0.2 (RVW-ST07D)
%%+ 0.2 0 0.4 0.2 (RVW-ST07E)
%%+ 0.25 0 0.5 0.2 (RVW-ST07F)
%%+ 0.3 0 0.6 0.2 (RVW-ST07G)
%%+ 0.35 0 0.7 0.2 (RVW-ST07H)
%%+ 0.4 0 0.8 0.2 (RVW-ST07I)
%%+ 0.45 0 0.9 0.2 (RVW-ST07J)
%%+ 0.5 0 1 0.2 (RVW-ST07K)
%%+ 0.07 0 0.1 0.2 (RVW-ST09B)
%%+ 0.13 0 0.2 0.2 (RVW-ST09C)
%%+ 0.2 0 0.3 0.2 (RVW-ST09D)
%%+ 0.27 0 0.4 0.2 (RVW-ST09E)
%%+ 0.33 0 0.5 0.2 (RVW-ST09F)
%%+ 0.4 0 0.6 0.2 (RVW-ST09G)
%%+ 0.47 0 0.7 0.2 (RVW-ST09H)
%%+ 0.53 0 0.8 0.2 (RVW-ST09I)
%%+ 0.6 0 0.9 0.2 (RVW-ST09J)
%%+ 0.67 0 1 0.2 (RVW-ST09K)
%%+ 0.08 0 0.1 0.2 (RVW-ST11B)
%%+ 0.17 0 0.2 0.2 (RVW-ST11C)
%%+ 0.25 0 0.3 0.2 (RVW-ST11D)
%%+ 0.33 0 0.4 0.2 (RVW-ST11E)
%%+ 0.42 0 0.5 0.2 (RVW-ST11F)
%%+ 0.5 0 0.6 0.2 (RVW-ST11G)
%%+ 0.58 0 0.7 0.2 (RVW-ST11H)
%%+ 0.67 0 0.8 0.2 (RVW-ST11I)
%%+ 0.75 0 0.9 0.2 (RVW-ST11J)
%%+ 0.83 0 1 0.2 (RVW-ST11K)
%%+ 0.1 0 0.1 0.2 (RVW-ST12B)
%%+ 0.2 0 0.2 0.2 (RVW-ST12C)
%%+ 0.3 0 0.3 0.2 (RVW-ST12D)
%%+ 0.4 0 0.4 0.2 (RVW-ST12E)
%%+ 0.5 0 0.5 0.2 (RVW-ST12F)
%%+ 0.6 0 0.6 0.2 (RVW-ST12G)
%%+ 0.7 0 0.7 0.2 (RVW-ST12H)
%%+ 0.8 0 0.8 0.2 (RVW-ST12I)
%%+ 0.9 0 0.9 0.2 (RVW-ST12J)
%%+ 1 0 1 0.2 (RVW-ST12K)
%%+ 0.1 0 0.05 0.2 (RVW-ST15B)
%%+ 0.2 0 0.1 0.2 (RVW-ST15C)
%%+ 0.3 0 0.15 0.2 (RVW-ST15D)
%%+ 0.4 0 0.2 0.2 (RVW-ST15E)
%%+ 0.5 0 0.25 0.2 (RVW-ST15F)
%%+ 0.6 0 0.3 0.2 (RVW-ST15G)
%%+ 0.7 0 0.35 0.2 (RVW-ST15H)
%%+ 0.8 0 0.4 0.2 (RVW-ST15I)
%%+ 0.9 0 0.45 0.2 (RVW-ST15J)
%%+ 1 0 0.5 0.2 (RVW-ST15K)
%%+ 0.1 0 0.025 0.2 (RVW-ST17B)
%%+ 0.2 0 0.05 0.2 (RVW-ST17C)
%%+ 0.3 0 0.075 0.2 (RVW-ST17D)
%%+ 0.4 0 0.1 0.2 (RVW-ST17E)
%%+ 0.5 0 0.125 0.2 (RVW-ST17F)
%%+ 0.6 0 0.15 0.2 (RVW-ST17G)
%%+ 0.7 0 0.175 0.2 (RVW-ST17H)
%%+ 0.8 0 0.2 0.2 (RVW-ST17I)
%%+ 0.9 0 0.225 0.2 (RVW-ST17J)
%%+ 1 0 0.25 0.2 (RVW-ST17K)
%%+ 0.1 0 0 0.2 (RVW-ST20B)
%%+ 0.2 0 0 0.2 (RVW-ST20C)
%%+ 0.3 0 0 0.2 (RVW-ST20D)
%%+ 0.4 0 0 0.2 (RVW-ST20E)
%%+ 0.5 0 0 0.2 (RVW-ST20F)
%%+ 0.6 0 0 0.2 (RVW-ST20G)
%%+ 0.7 0 0 0.2 (RVW-ST20H)
%%+ 0.8 0 0 0.2 (RVW-ST20I)
%%+ 0.9 0 0 0.2 (RVW-ST20J)
%%+ 1 0 0 0.2 (RVW-ST20K)
%%+ 0.1 0.025 0 0.2 (RVW-ST21B)
%%+ 0.2 0.05 0 0.2 (RVW-ST21C)
%%+ 0.3 0.075 0 0.2 (RVW-ST21D)
%%+ 0.4 0.1 0 0.2 (RVW-ST21E)
%%+ 0.5 0.125 0 0.2 (RVW-ST21F)
%%+ 0.6 0.15 0 0.2 (RVW-ST21G)
%%+ 0.7 0.175 0 0.2 (RVW-ST21H)
%%+ 0.8 0.2 0 0.2 (RVW-ST21I)
%%+ 0.9 0.225 0 0.2 (RVW-ST21J)
%%+ 1 0.25 0 0.2 (RVW-ST21K)
%%+ 0.1 0.05 0 0.2 (RVW-ST22B)
%%+ 0.2 0.1 0 0.2 (RVW-ST22C)
%%+ 0.3 0.15 0 0.2 (RVW-ST22D)
%%+ 0.4 0.2 0 0.2 (RVW-ST22E)
%%+ 0.5 0.25 0 0.2 (RVW-ST22F)
%%+ 0.6 0.3 0 0.2 (RVW-ST22G)
%%+ 0.7 0.35 0 0.2 (RVW-ST22H)
%%+ 0.8 0.4 0 0.2 (RVW-ST22I)
%%+ 0.9 0.45 0 0.2 (RVW-ST22J)
%%+ 1 0.5 0 0.2 (RVW-ST22K)
%%+ 0.1 0.075 0 0.2 (RVW-ST24B)
%%+ 0.2 0.15 0 0.2 (RVW-ST24C)
%%+ 0.3 0.225 0 0.2 (RVW-ST24D)
%%+ 0.4 0.3 0 0.2 (RVW-ST24E)
%%+ 0.5 0.375 0 0.2 (RVW-ST24F)
%%+ 0.6 0.45 0 0.2 (RVW-ST24G)
%%+ 0.7 0.525 0 0.2 (RVW-ST24H)
%%+ 0.8 0.6 0 0.2 (RVW-ST24I)
%%+ 0.9 0.675 0 0.2 (RVW-ST24J)
%%+ 1 0.75 0 0.2 (RVW-ST24K)
%%+ 0.1 0.1 0 0.2 (RVW-ST26B)
%%+ 0.2 0.2 0 0.2 (RVW-ST26C)
%%+ 0.3 0.3 0 0.2 (RVW-ST26D)
%%+ 0.4 0.4 0 0.2 (RVW-ST26E)
%%+ 0.5 0.5 0 0.2 (RVW-ST26F)
%%+ 0.6 0.6 0 0.2 (RVW-ST26G)
%%+ 0.7 0.7 0 0.2 (RVW-ST26H)
%%+ 0.8 0.8 0 0.2 (RVW-ST26I)
%%+ 0.9 0.9 0 0.2 (RVW-ST26J)
%%+ 1 1 0 0.2 (RVW-ST26K)
%%+ 0.08 0.1 0 0.2 (RVW-ST28B)
%%+ 0.16 0.2 0 0.2 (RVW-ST28C)
%%+ 0.24 0.3 0 0.2 (RVW-ST28D)
%%+ 0.32 0.4 0 0.2 (RVW-ST28E)
%%+ 0.4 0.5 0 0.2 (RVW-ST28F)
%%+ 0.48 0.6 0 0.2 (RVW-ST28G)
%%+ 0.56 0.7 0 0.2 (RVW-ST28H)
%%+ 0.64 0.8 0 0.2 (RVW-ST28I)
%%+ 0.72 0.9 0 0.2 (RVW-ST28J)
%%+ 0.8 1 0 0.2 (RVW-ST28K)
%%+ 0.06 0.1 0 0.2 (RVW-ST30B)
%%+ 0.12 0.2 0 0.2 (RVW-ST30C)
%%+ 0.18 0.3 0 0.2 (RVW-ST30D)
%%+ 0.24 0.4 0 0.2 (RVW-ST30E)
%%+ 0.3 0.5 0 0.2 (RVW-ST30F)
%%+ 0.36 0.6 0 0.2 (RVW-ST30G)
%%+ 0.42 0.7 0 0.2 (RVW-ST30H)
%%+ 0.48 0.8 0 0.2 (RVW-ST30I)
%%+ 0.54 0.9 0 0.2 (RVW-ST30J)
%%+ 0.6 1 0 0.2 (RVW-ST30K)
%%+ 0.04 0.1 0 0.2 (RVW-ST31B)
%%+ 0.08 0.2 0 0.2 (RVW-ST31C)
%%+ 0.12 0.3 0 0.2 (RVW-ST31D)
%%+ 0.16 0.4 0 0.2 (RVW-ST31E)
%%+ 0.2 0.5 0 0.2 (RVW-ST31F)
%%+ 0.24 0.6 0 0.2 (RVW-ST31G)
%%+ 0.28 0.7 0 0.2 (RVW-ST31H)
%%+ 0.32 0.8 0 0.2 (RVW-ST31I)
%%+ 0.36 0.9 0 0.2 (RVW-ST31J)
%%+ 0.4 1 0 0.2 (RVW-ST31K)
%%+ 0.02 0.1 0 0.2 (RVW-ST33B)
%%+ 0.04 0.2 0 0.2 (RVW-ST33C)
%%+ 0.06 0.3 0 0.2 (RVW-ST33D)
%%+ 0.08 0.4 0 0.2 (RVW-ST33E)
%%+ 0.1 0.5 0 0.2 (RVW-ST33F)
%%+ 0.12 0.6 0 0.2 (RVW-ST33G)
%%+ 0.14 0.7 0 0.2 (RVW-ST33H)
%%+ 0.16 0.8 0 0.2 (RVW-ST33I)
%%+ 0.18 0.9 0 0.2 (RVW-ST33J)
%%+ 0.2 1 0 0.2 (RVW-ST33K)
%%+ 0 0.1 0 0.2 (RVW-ST35B)
%%+ 0 0.2 0 0.2 (RVW-ST35C)
%%+ 0 0.3 0 0.2 (RVW-ST35D)
%%+ 0 0.4 0 0.2 (RVW-ST35E)
%%+ 0 0.5 0 0.2 (RVW-ST35F)
%%+ 0 0.6 0 0.2 (RVW-ST35G)
%%+ 0 0.7 0 0.2 (RVW-ST35H)
%%+ 0 0.8 0 0.2 (RVW-ST35I)
%%+ 0 0.9 0 0.2 (RVW-ST35J)
%%+ 0 1 0 0.2 (RVW-ST35K)
%%+ 0 0.1 0.025 0.2 (RVW-ST37B)
%%+ 0 0.2 0.05 0.2 (RVW-ST37C)
%%+ 0 0.3 0.075 0.2 (RVW-ST37D)
%%+ 0 0.4 0.1 0.2 (RVW-ST37E)
%%+ 0 0.5 0.125 0.2 (RVW-ST37F)
%%+ 0 0.6 0.15 0.2 (RVW-ST37G)
%%+ 0 0.7 0.175 0.2 (RVW-ST37H)
%%+ 0 0.8 0.2 0.2 (RVW-ST37I)
%%+ 0 0.9 0.25 0.2 (RVW-ST37J)
%%+ 0 1 0.25 0.2 (RVW-ST37K)
%%+ 0 0.1 0.05 0.2 (RVW-ST39B)
%%+ 0 0.2 0.1 0.2 (RVW-ST39C)
%%+ 0 0.3 0.15 0.2 (RVW-ST39D)
%%+ 0 0.4 0.2 0.2 (RVW-ST39E)
%%+ 0 0.5 0.25 0.2 (RVW-ST39F)
%%+ 0 0.6 0.3 0.2 (RVW-ST39G)
%%+ 0 0.7 0.35 0.2 (RVW-ST39H)
%%+ 0 0.8 0.4 0.2 (RVW-ST39I)
%%+ 0 0.9 0.45 0.2 (RVW-ST39J)
%%+ 0 1 0.5 0.2 (RVW-ST39K)
%%+ 0 0.1 0.075 0.2 (RVW-ST41B)
%%+ 0 0.2 0.15 0.2 (RVW-ST41C)
%%+ 0 0.3 0.225 0.2 (RVW-ST41D)
%%+ 0 0.4 0.3 0.2 (RVW-ST41E)
%%+ 0 0.5 0.375 0.2 (RVW-ST41F)
%%+ 0 0.6 0.45 0.2 (RVW-ST41G)
%%+ 0 0.7 0.525 0.2 (RVW-ST41H)
%%+ 0 0.8 0.6 0.2 (RVW-ST41I)
%%+ 0 0.9 0.675 0.2 (RVW-ST41J)
%%+ 0 1 0.75 0.2 (RVW-ST41K)
%%+ 0 0.1 0.1 0.2 (RVW-ST43B)
%%+ 0 0.2 0.2 0.2 (RVW-ST43C)
%%+ 0 0.3 0.3 0.2 (RVW-ST43D)
%%+ 0 0.4 0.4 0.2 (RVW-ST43E)
%%+ 0 0.5 0.5 0.2 (RVW-ST43F)
%%+ 0 0.6 0.6 0.2 (RVW-ST43G)
%%+ 0 0.7 0.7 0.2 (RVW-ST43H)
%%+ 0 0.8 0.8 0.2 (RVW-ST43I)
%%+ 0 0.9 0.9 0.2 (RVW-ST43J)
%%+ 0 1 1 0.2 (RVW-ST43K)
%%+ 0 0.075 0.1 0.2 (RVW-ST45B)
%%+ 0 0.15 0.2 0.2 (RVW-ST45C)
%%+ 0 0.225 0.3 0.2 (RVW-ST45D)
%%+ 0 0.3 0.4 0.2 (RVW-ST45E)
%%+ 0 0.375 0.5 0.2 (RVW-ST45F)
%%+ 0 0.45 0.6 0.2 (RVW-ST45G)
%%+ 0 0.525 0.7 0.2 (RVW-ST45H)
%%+ 0 0.6 0.8 0.2 (RVW-ST45I)
%%+ 0 0.675 0.9 0.2 (RVW-ST45J)
%%+ 0 0.75 1 0.2 (RVW-ST45K)
%%+ 0 0.05 0.1 0.2 (RVW-ST47B)
%%+ 0 0.1 0.2 0.2 (RVW-ST47C)
%%+ 0 0.15 0.3 0.2 (RVW-ST47D)
%%+ 0 0.2 0.4 0.2 (RVW-ST47E)
%%+ 0 0.25 0.5 0.2 (RVW-ST47F)
%%+ 0 0.3 0.6 0.2 (RVW-ST47G)
%%+ 0 0.35 0.7 0.2 (RVW-ST47H)
%%+ 0 0.4 0.8 0.2 (RVW-ST47I)
%%+ 0 0.45 0.9 0.2 (RVW-ST47J)
%%+ 0 0.5 1 0.2 (RVW-ST47K)
%%+ 0 0.025 0.1 0.2 (RVW-ST49B)
%%+ 0 0.05 0.2 0.2 (RVW-ST49C)
%%+ 0 0.075 0.3 0.2 (RVW-ST49D)
%%+ 0 0.1 0.4 0.2 (RVW-ST49E)
%%+ 0 0.125 0.5 0.2 (RVW-ST49F)
%%+ 0 0.15 0.6 0.2 (RVW-ST49G)
%%+ 0 0.175 0.7 0.2 (RVW-ST49H)
%%+ 0 0.2 0.8 0.2 (RVW-ST49I)
%%+ 0 0.225 0.9 0.2 (RVW-ST49J)
%%+ 0 0.25 1 0.2 (RVW-ST49K)
%%CMYKProcessColor: 1 1 1 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223])
%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) 
%%+ Options: 1 16 0 2 0 1 0 0 0 0 1 1 1 8.504 0 0 0 0 0 0 0 0 -1 -1
%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 3 3 () 
%AI3_TemplateBox: 298.5 420.3896 298.5 420.3896
%AI3_TileBox: 14.5 12.3896 586.5 828.3896
%AI3_DocumentPreview: None
%AI5_ArtSize: 592 840
%AI5_RulerUnits: 1
%AI5_ArtFlags: 1 0 0 1 0 0 1 0 0
%AI5_TargetResolution: 800
%AI5_NumLayers: 1
%AI8_OpenToView: -181 849.8896 1.56 1299 1091 18 0 1 76 72 0 0
%AI5_OpenViewLayers: 7
%%PageOrigin:14.5 12.3896
%%AI3_PaperRect:-12 830 583 -12
%%AI3_Margin:12 -11 -11 12
%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9
%AI9_Flatten: 1
%%EndComments
%%BeginProlog
%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog
%%BeginSetup
userdict /_useSmoothShade true put
userdict /_aicmykps false put
userdict /_forceToCMYK false put
Adobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI5_Begin_NonPrinting
Np
1 Bn
%AI5_BeginGradient: (Unnamed gradient 1)
(Unnamed gradient 1) 0 2 Bd
[
<
FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8
D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0
AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A8988
87868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A69686766656463626160
5F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A3938
37363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A19181716151413121110
0F0E0D0C0B0A09080706050403020100
>
0 %_Br
[
0 0 50 100 %_BS
%_0 0 50 100 Bs
1 0 50 0 %_BS
%_1 0 50 0 Bs
BD
%AI5_EndGradient
%AI5_End_NonPrinting--
%AI5_Begin_NonPrinting
Np
%AI5_End_NonPrinting--
%AI5_BeginPalette
0 0 Pb
1 1 1 1 ([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) 0 Xs
([\203\214\203W\203X\203g\203\214\201[\203V\203\207\203\223]) Pc
0 0 0 0 (RVW-BK01A) 0 x
(RVW-BK01A) Pc
0 0 0 0.05 (RVW-BK02A) 0 x
(RVW-BK02A) Pc
0 0 0 0.1 (RVW-BK03A) 0 x
(RVW-BK03A) Pc
0 0 0 0.15 (RVW-BK04A) 0 x
(RVW-BK04A) Pc
0 0 0 0.2 (RVW-BK05A) 0 x
(RVW-BK05A) Pc
0 0 0 0.25 (RVW-BK06A) 0 x
(RVW-BK06A) Pc
0 0 0 0.3 (RVW-BK07A) 0 x
(RVW-BK07A) Pc
0 0 0 0.35 (RVW-BK08A) 0 x
(RVW-BK08A) Pc
0 0 0 0.4 (RVW-BK09A) 0 x
(RVW-BK09A) Pc
0 0 0 0.45 (RVW-BK10A) 0 x
(RVW-BK10A) Pc
0 0 0 0.5 (RVW-BK11A) 0 x
(RVW-BK11A) Pc
0 0 0 0.55 (RVW-BK12A) 0 x
(RVW-BK12A) Pc
0 0 0 0.6 (RVW-BK13A) 0 x
(RVW-BK13A) Pc
0 0 0 0.65 (RVW-BK14A) 0 x
(RVW-BK14A) Pc
0 0 0 0.7 (RVW-BK15A) 0 x
(RVW-BK15A) Pc
0 0 0 0.75 (RVW-BK16A) 0 x
(RVW-BK16A) Pc
0 0 0 0.8 (RVW-BK17A) 0 x
(RVW-BK17A) Pc
0 0 0 0.85 (RVW-BK18A) 0 x
(RVW-BK18A) Pc
0 0 0 0.9 (RVW-BK19A) 0 x
(RVW-BK19A) Pc
0 0 0 0.95 (RVW-BK20A) 0 x
(RVW-BK20A) Pc
0 0 0 1 (RVW-BK21A) 0 x
(RVW-BK21A) Pc
0.35 0.45 0.15 0.95 (RVW-BK22A) 0 x
(RVW-BK22A) Pc
0 0 0.4 0.75 (RVW-DG01F) 0 x
(RVW-DG01F) Pc
0 0 0.6 0.75 (RVW-DG01G) 0 x
(RVW-DG01G) Pc
0 0 0.8 0.75 (RVW-DG01J) 0 x
(RVW-DG01J) Pc
0 0 1 0.75 (RVW-DG01K) 0 x
(RVW-DG01K) Pc
0.1 0 0.4 0.75 (RVW-DG04F) 0 x
(RVW-DG04F) Pc
0.15 0 0.6 0.75 (RVW-DG04G) 0 x
(RVW-DG04G) Pc
0.2 0 0.8 0.75 (RVW-DG04J) 0 x
(RVW-DG04J) Pc
0.25 0 1 0.75 (RVW-DG04K) 0 x
(RVW-DG04K) Pc
0.2 0 0.4 0.75 (RVW-DG07F) 0 x
(RVW-DG07F) Pc
0.3 0 0.6 0.75 (RVW-DG07G) 0 x
(RVW-DG07G) Pc
0.4 0 0.8 0.75 (RVW-DG07J) 0 x
(RVW-DG07J) Pc
0.5 0 1 0.75 (RVW-DG07K) 0 x
(RVW-DG07K) Pc
0.4 0 0.4 0.75 (RVW-DG12F) 0 x
(RVW-DG12F) Pc
0.6 0 0.6 0.75 (RVW-DG12G) 0 x
(RVW-DG12G) Pc
0.8 0 0.8 0.75 (RVW-DG12J) 0 x
(RVW-DG12J) Pc
1 0 1 0.75 (RVW-DG12K) 0 x
(RVW-DG12K) Pc
0.4 0 0.27 0.75 (RVW-DG15F) 0 x
(RVW-DG15F) Pc
0.6 0 0.4 0.75 (RVW-DG15G) 0 x
(RVW-DG15G) Pc
0.8 0 0.53 0.75 (RVW-DG15J) 0 x
(RVW-DG15J) Pc
1 0 0.67 0.75 (RVW-DG15K) 0 x
(RVW-DG15K) Pc
0.4 0 0.13 0.75 (RVW-DG17F) 0 x
(RVW-DG17F) Pc
0.6 0 0.2 0.75 (RVW-DG17G) 0 x
(RVW-DG17G) Pc
0.8 0 0.27 0.75 (RVW-DG17J) 0 x
(RVW-DG17J) Pc
1 0 0.33 0.75 (RVW-DG17K) 0 x
(RVW-DG17K) Pc
0.4 0 0 0.75 (RVW-DG20F) 0 x
(RVW-DG20F) Pc
0.6 0 0 0.75 (RVW-DG20G) 0 x
(RVW-DG20G) Pc
0.8 0 0 0.75 (RVW-DG20J) 0 x
(RVW-DG20J) Pc
1 0 0 0.75 (RVW-DG20K) 0 x
(RVW-DG20K) Pc
0.4 0.27 0 0.75 (RVW-DG22F) 0 x
(RVW-DG22F) Pc
0.6 0.4 0 0.75 (RVW-DG22G) 0 x
(RVW-DG22G) Pc
0.8 0.53 0 0.75 (RVW-DG22J) 0 x
(RVW-DG22J) Pc
1 0.67 0 0.75 (RVW-DG22K) 0 x
(RVW-DG22K) Pc
0.4 0.4 0 0.75 (RVW-DG26F) 0 x
(RVW-DG26F) Pc
0.6 0.6 0 0.75 (RVW-DG26G) 0 x
(RVW-DG26G) Pc
0.8 0.8 0 0.75 (RVW-DG26J) 0 x
(RVW-DG26J) Pc
1 1 0 0.75 (RVW-DG26K) 0 x
(RVW-DG26K) Pc
0.27 0.4 0 0.75 (RVW-DG30F) 0 x
(RVW-DG30F) Pc
0.4 0.6 0 0.75 (RVW-DG30G) 0 x
(RVW-DG30G) Pc
0.53 0.8 0 0.75 (RVW-DG30J) 0 x
(RVW-DG30J) Pc
0.67 1 0 0.75 (RVW-DG30K) 0 x
(RVW-DG30K) Pc
0.13 0.4 0 0.75 (RVW-DG31F) 0 x
(RVW-DG31F) Pc
0.2 0.6 0 0.75 (RVW-DG31G) 0 x
(RVW-DG31G) Pc
0.27 0.8 0 0.75 (RVW-DG31J) 0 x
(RVW-DG31J) Pc
0.33 1 0 0.75 (RVW-DG31K) 0 x
(RVW-DG31K) Pc
0 0.4 0 0.75 (RVW-DG35F) 0 x
(RVW-DG35F) Pc
0 0.6 0 0.75 (RVW-DG35G) 0 x
(RVW-DG35G) Pc
0 0.8 0 0.75 (RVW-DG35J) 0 x
(RVW-DG35J) Pc
0 1 0 0.75 (RVW-DG35K) 0 x
(RVW-DG35K) Pc
0 0.4 0.13 0.75 (RVW-DG37F) 0 x
(RVW-DG37F) Pc
0 0.6 0.2 0.75 (RVW-DG37G) 0 x
(RVW-DG37G) Pc
0 0.8 0.27 0.75 (RVW-DG37J) 0 x
(RVW-DG37J) Pc
0 1 0.33 0.75 (RVW-DG37K) 0 x
(RVW-DG37K) Pc
0 0.4 0.4 0.75 (RVW-DG43F) 0 x
(RVW-DG43F) Pc
0 0.6 0.6 0.75 (RVW-DG43G) 0 x
(RVW-DG43G) Pc
0 0.8 0.8 0.75 (RVW-DG43J) 0 x
(RVW-DG43J) Pc
0 1 1 0.75 (RVW-DG43K) 0 x
(RVW-DG43K) Pc
0 0.27 0.4 0.75 (RVW-DG45F) 0 x
(RVW-DG45F) Pc
0 0.4 0.6 0.75 (RVW-DG45G) 0 x
(RVW-DG45G) Pc
0 0.53 0.8 0.75 (RVW-DG45J) 0 x
(RVW-DG45J) Pc
0 0.67 1 0.75 (RVW-DG45K) 0 x
(RVW-DG45K) Pc
0 0.13 0.4 0.75 (RVW-DG49F) 0 x
(RVW-DG49F) Pc
0 0.2 0.6 0.75 (RVW-DG49G) 0 x
(RVW-DG49G) Pc
0 0.27 0.8 0.75 (RVW-DG49J) 0 x
(RVW-DG49J) Pc
0 0.33 1 0.75 (RVW-DG49K) 0 x
(RVW-DG49K) Pc
0 0 0.3 0.6 (RVW-DK01D) 0 x
(RVW-DK01D) Pc
0 0 0.47 0.6 (RVW-DK01F) 0 x
(RVW-DK01F) Pc
0 0 0.65 0.6 (RVW-DK01G) 0 x
(RVW-DK01G) Pc
0 0 0.82 0.6 (RVW-DK01J) 0 x
(RVW-DK01J) Pc
0 0 1 0.6 (RVW-DK01K) 0 x
(RVW-DK01K) Pc
0.05 0 0.3 0.6 (RVW-DK04D) 0 x
(RVW-DK04D) Pc
0.08 0 0.47 0.6 (RVW-DK04F) 0 x
(RVW-DK04F) Pc
0.11 0 0.65 0.6 (RVW-DK04G) 0 x
(RVW-DK04G) Pc
0.14 0 0.82 0.6 (RVW-DK04J) 0 x
(RVW-DK04J) Pc
0.17 0 1 0.6 (RVW-DK04K) 0 x
(RVW-DK04K) Pc
0.15 0 0.3 0.6 (RVW-DK07D) 0 x
(RVW-DK07D) Pc
0.24 0 0.47 0.6 (RVW-DK07F) 0 x
(RVW-DK07F) Pc
0.33 0 0.65 0.6 (RVW-DK07G) 0 x
(RVW-DK07G) Pc
0.41 0 0.82 0.6 (RVW-DK07J) 0 x
(RVW-DK07J) Pc
0.5 0 1 0.6 (RVW-DK07K) 0 x
(RVW-DK07K) Pc
0.2 0 0.3 0.6 (RVW-DK09D) 0 x
(RVW-DK09D) Pc
0.32 0 0.47 0.6 (RVW-DK09F) 0 x
(RVW-DK09F) Pc
0.43 0 0.65 0.6 (RVW-DK09G) 0 x
(RVW-DK09G) Pc
0.55 0 0.82 0.6 (RVW-DK09J) 0 x
(RVW-DK09J) Pc
0.67 0 1 0.6 (RVW-DK09K) 0 x
(RVW-DK09K) Pc
0.3 0 0.3 0.6 (RVW-DK12D) 0 x
(RVW-DK12D) Pc
0.47 0 0.47 0.6 (RVW-DK12F) 0 x
(RVW-DK12F) Pc
0.65 0 0.65 0.6 (RVW-DK12G) 0 x
(RVW-DK12G) Pc
0.82 0 0.82 0.6 (RVW-DK12J) 0 x
(RVW-DK12J) Pc
1 0 1 0.6 (RVW-DK12K) 0 x
(RVW-DK12K) Pc
0.3 0 0.15 0.6 (RVW-DK15D) 0 x
(RVW-DK15D) Pc
0.47 0 0.24 0.6 (RVW-DK15F) 0 x
(RVW-DK15F) Pc
0.65 0 0.32 0.6 (RVW-DK15G) 0 x
(RVW-DK15G) Pc
0.82 0 0.41 0.6 (RVW-DK15J) 0 x
(RVW-DK15J) Pc
1 0 0.5 0.6 (RVW-DK15K) 0 x
(RVW-DK15K) Pc
0.3 0 0.075 0.6 (RVW-DK17D) 0 x
(RVW-DK17D) Pc
0.47 0 0.12 0.6 (RVW-DK17F) 0 x
(RVW-DK17F) Pc
0.65 0 0.16 0.6 (RVW-DK17G) 0 x
(RVW-DK17G) Pc
0.82 0 0.21 0.6 (RVW-DK17J) 0 x
(RVW-DK17J) Pc
1 0 0.25 0.6 (RVW-DK17K) 0 x
(RVW-DK17K) Pc
0.3 0 0 0.6 (RVW-DK20D) 0 x
(RVW-DK20D) Pc
0.47 0 0 0.6 (RVW-DK20F) 0 x
(RVW-DK20F) Pc
0.65 0 0 0.6 (RVW-DK20G) 0 x
(RVW-DK20G) Pc
0.82 0 0 0.6 (RVW-DK20J) 0 x
(RVW-DK20J) Pc
1 0 0 0.6 (RVW-DK20K) 0 x
(RVW-DK20K) Pc
0.3 0.15 0 0.6 (RVW-DK22D) 0 x
(RVW-DK22D) Pc
0.47 0.24 0 0.6 (RVW-DK22F) 0 x
(RVW-DK22F) Pc
0.65 0.32 0 0.6 (RVW-DK22G) 0 x
(RVW-DK22G) Pc
0.82 0.41 0 0.6 (RVW-DK22J) 0 x
(RVW-DK22J) Pc
1 0.5 0 0.6 (RVW-DK22K) 0 x
(RVW-DK22K) Pc
0.3 0.3 0 0.6 (RVW-DK26D) 0 x
(RVW-DK26D) Pc
0.47 0.47 0 0.6 (RVW-DK26F) 0 x
(RVW-DK26F) Pc
0.65 0.65 0 0.6 (RVW-DK26G) 0 x
(RVW-DK26G) Pc
0.82 0.82 0 0.6 (RVW-DK26J) 0 x
(RVW-DK26J) Pc
1 1 0 0.6 (RVW-DK26K) 0 x
(RVW-DK26K) Pc
0.18 0.3 0 0.6 (RVW-DK30D) 0 x
(RVW-DK30D) Pc
0.28 0.47 0 0.6 (RVW-DK30F) 0 x
(RVW-DK30F) Pc
0.39 0.65 0 0.6 (RVW-DK30G) 0 x
(RVW-DK30G) Pc
0.5 0.82 0 0.6 (RVW-DK30J) 0 x
(RVW-DK30J) Pc
0.6 1 0 0.6 (RVW-DK30K) 0 x
(RVW-DK30K) Pc
0.12 0.3 0 0.6 (RVW-DK31D) 0 x
(RVW-DK31D) Pc
0.19 0.47 0 0.6 (RVW-DK31F) 0 x
(RVW-DK31F) Pc
0.26 0.65 0 0.6 (RVW-DK31G) 0 x
(RVW-DK31G) Pc
0.33 0.82 0 0.6 (RVW-DK31J) 0 x
(RVW-DK31J) Pc
0.4 1 0 0.6 (RVW-DK31K) 0 x
(RVW-DK31K) Pc
0 0.3 0 0.6 (RVW-DK35D) 0 x
(RVW-DK35D) Pc
0 0.47 0 0.6 (RVW-DK35F) 0 x
(RVW-DK35F) Pc
0 0.65 0 0.6 (RVW-DK35G) 0 x
(RVW-DK35G) Pc
0 0.82 0 0.6 (RVW-DK35J) 0 x
(RVW-DK35J) Pc
0 1 0 0.6 (RVW-DK35K) 0 x
(RVW-DK35K) Pc
0 0.3 0.07 0.6 (RVW-DK37D) 0 x
(RVW-DK37D) Pc
0 0.47 0.12 0.6 (RVW-DK37F) 0 x
(RVW-DK37F) Pc
0 0.65 0.16 0.6 (RVW-DK37G) 0 x
(RVW-DK37G) Pc
0 0.82 0.21 0.6 (RVW-DK37J) 0 x
(RVW-DK37J) Pc
0 1 0.25 0.6 (RVW-DK37K) 0 x
(RVW-DK37K) Pc
0 0.3 0.3 0.6 (RVW-DK43D) 0 x
(RVW-DK43D) Pc
0 0.47 0.47 0.6 (RVW-DK43F) 0 x
(RVW-DK43F) Pc
0 0.65 0.65 0.6 (RVW-DK43G) 0 x
(RVW-DK43G) Pc
0 0.82 0.82 0.6 (RVW-DK43J) 0 x
(RVW-DK43J) Pc
0 1 1 0.6 (RVW-DK43K) 0 x
(RVW-DK43K) Pc
0 0.22 0.3 0.6 (RVW-DK45D) 0 x
(RVW-DK45D) Pc
0 0.36 0.47 0.6 (RVW-DK45F) 0 x
(RVW-DK45F) Pc
0 0.49 0.65 0.6 (RVW-DK45G) 0 x
(RVW-DK45G) Pc
0 0.62 0.82 0.6 (RVW-DK45J) 0 x
(RVW-DK45J) Pc
0 0.75 1 0.6 (RVW-DK45K) 0 x
(RVW-DK45K) Pc
0 0.15 0.3 0.6 (RVW-DK47D) 0 x
(RVW-DK47D) Pc
0 0.24 0.47 0.6 (RVW-DK47F) 0 x
(RVW-DK47F) Pc
0 0.32 0.65 0.6 (RVW-DK47G) 0 x
(RVW-DK47G) Pc
0 0.41 0.82 0.6 (RVW-DK47J) 0 x
(RVW-DK47J) Pc
0 0.5 1 0.6 (RVW-DK47K) 0 x
(RVW-DK47K) Pc
0 0.07 0.3 0.6 (RVW-DK49D) 0 x
(RVW-DK49D) Pc
0 0.12 0.47 0.6 (RVW-DK49F) 0 x
(RVW-DK49F) Pc
0 0.16 0.65 0.6 (RVW-DK49G) 0 x
(RVW-DK49G) Pc
0 0.21 0.82 0.6 (RVW-DK49J) 0 x
(RVW-DK49J) Pc
0 0.25 1 0.6 (RVW-DK49K) 0 x
(RVW-DK49K) Pc
0 0 0.2 0.4 (RVW-DP01C) 0 x
(RVW-DP01C) Pc
0 0 0.33 0.4 (RVW-DP01D) 0 x
(RVW-DP01D) Pc
0 0 0.47 0.4 (RVW-DP01F) 0 x
(RVW-DP01F) Pc
0 0 0.6 0.4 (RVW-DP01G) 0 x
(RVW-DP01G) Pc
0 0 0.73 0.4 (RVW-DP01H) 0 x
(RVW-DP01H) Pc
0 0 0.87 0.4 (RVW-DP01J) 0 x
(RVW-DP01J) Pc
0 0 1 0.4 (RVW-DP01K) 0 x
(RVW-DP01K) Pc
0.03 0 0.2 0.4 (RVW-DP04C) 0 x
(RVW-DP04C) Pc
0.06 0 0.33 0.4 (RVW-DP04D) 0 x
(RVW-DP04D) Pc
0.08 0 0.47 0.4 (RVW-DP04F) 0 x
(RVW-DP04F) Pc
0.1 0 0.6 0.4 (RVW-DP04G) 0 x
(RVW-DP04G) Pc
0.12 0 0.7 0.4 (RVW-DP04H) 0 x
(RVW-DP04H) Pc
0.16 0 0.935 0.4 (RVW-DP04J) 0 x
(RVW-DP04J) Pc
0.17 0 1 0.4 (RVW-DP04K) 0 x
(RVW-DP04K) Pc
0.1 0 0.2 0.4 (RVW-DP07C) 0 x
(RVW-DP07C) Pc
0.17 0 0.33 0.4 (RVW-DP07D) 0 x
(RVW-DP07D) Pc
0.23 0 0.47 0.4 (RVW-DP07F) 0 x
(RVW-DP07F) Pc
0.3 0 0.6 0.4 (RVW-DP07G) 0 x
(RVW-DP07G) Pc
0.37 0 0.73 0.4 (RVW-DP07H) 0 x
(RVW-DP07H) Pc
0.43 0 0.87 0.4 (RVW-DP07J) 0 x
(RVW-DP07J) Pc
0.5 0 1 0.4 (RVW-DP07K) 0 x
(RVW-DP07K) Pc
0.13 0 0.2 0.4 (RVW-DP09C) 0 x
(RVW-DP09C) Pc
0.22 0 0.33 0.4 (RVW-DP09D) 0 x
(RVW-DP09D) Pc
0.31 0 0.47 0.4 (RVW-DP09F) 0 x
(RVW-DP09F) Pc
0.4 0 0.6 0.4 (RVW-DP09G) 0 x
(RVW-DP09G) Pc
0.49 0 0.73 0.4 (RVW-DP09H) 0 x
(RVW-DP09H) Pc
0.58 0 0.87 0.4 (RVW-DP09J) 0 x
(RVW-DP09J) Pc
0.67 0 1 0.4 (RVW-DP09K) 0 x
(RVW-DP09K) Pc
0.17 0 0.2 0.4 (RVW-DP11C) 0 x
(RVW-DP11C) Pc
0.28 0 0.33 0.4 (RVW-DP11D) 0 x
(RVW-DP11D) Pc
0.39 0 0.47 0.4 (RVW-DP11F) 0 x
(RVW-DP11F) Pc
0.5 0 0.6 0.4 (RVW-DP11G) 0 x
(RVW-DP11G) Pc
0.61 0 0.73 0.4 (RVW-DP11H) 0 x
(RVW-DP11H) Pc
0.72 0 0.87 0.4 (RVW-DP11J) 0 x
(RVW-DP11J) Pc
0.83 0 1 0.4 (RVW-DP11K) 0 x
(RVW-DP11K) Pc
0.2 0 0.2 0.4 (RVW-DP12C) 0 x
(RVW-DP12C) Pc
0.33 0 0.33 0.4 (RVW-DP12D) 0 x
(RVW-DP12D) Pc
0.47 0 0.47 0.4 (RVW-DP12F) 0 x
(RVW-DP12F) Pc
0.6 0 0.6 0.4 (RVW-DP12G) 0 x
(RVW-DP12G) Pc
0.73 0 0.73 0.4 (RVW-DP12H) 0 x
(RVW-DP12H) Pc
0.87 0 0.87 0.4 (RVW-DP12J) 0 x
(RVW-DP12J) Pc
1 0 1 0.4 (RVW-DP12K) 0 x
(RVW-DP12K) Pc
0.2 0 0.1 0.4 (RVW-DP15C) 0 x
(RVW-DP15C) Pc
0.33 0 0.17 0.4 (RVW-DP15D) 0 x
(RVW-DP15D) Pc
0.47 0 0.23 0.4 (RVW-DP15F) 0 x
(RVW-DP15F) Pc
0.6 0 0.3 0.4 (RVW-DP15G) 0 x
(RVW-DP15G) Pc
0.73 0 0.37 0.4 (RVW-DP15H) 0 x
(RVW-DP15H) Pc
0.87 0 0.43 0.4 (RVW-DP15J) 0 x
(RVW-DP15J) Pc
1 0 0.5 0.4 (RVW-DP15K) 0 x
(RVW-DP15K) Pc
0.2 0 0.05 0.4 (RVW-DP17C) 0 x
(RVW-DP17C) Pc
0.33 0 0.08 0.4 (RVW-DP17D) 0 x
(RVW-DP17D) Pc
0.47 0 0.12 0.4 (RVW-DP17F) 0 x
(RVW-DP17F) Pc
0.6 0 0.15 0.4 (RVW-DP17G) 0 x
(RVW-DP17G) Pc
0.73 0 0.18 0.4 (RVW-DP17H) 0 x
(RVW-DP17H) Pc
0.87 0 0.22 0.4 (RVW-DP17J) 0 x
(RVW-DP17J) Pc
1 0 0.25 0.4 (RVW-DP17K) 0 x
(RVW-DP17K) Pc
0.2 0 0 0.4 (RVW-DP20C) 0 x
(RVW-DP20C) Pc
0.33 0 0 0.4 (RVW-DP20D) 0 x
(RVW-DP20D) Pc
0.47 0 0 0.4 (RVW-DP20F) 0 x
(RVW-DP20F) Pc
0.6 0 0 0.4 (RVW-DP20G) 0 x
(RVW-DP20G) Pc
0.73 0 0 0.4 (RVW-DP20H) 0 x
(RVW-DP20H) Pc
0.87 0 0 0.4 (RVW-DP20J) 0 x
(RVW-DP20J) Pc
1 0 0 0.4 (RVW-DP20K) 0 x
(RVW-DP20K) Pc
0.2 0.1 0 0.4 (RVW-DP22C) 0 x
(RVW-DP22C) Pc
0.33 0.17 0 0.4 (RVW-DP22D) 0 x
(RVW-DP22D) Pc
0.47 0.23 0 0.4 (RVW-DP22F) 0 x
(RVW-DP22F) Pc
0.6 0.3 0 0.4 (RVW-DP22G) 0 x
(RVW-DP22G) Pc
0.73 0.37 0 0.4 (RVW-DP22H) 0 x
(RVW-DP22H) Pc
0.87 0.43 0 0.4 (RVW-DP22J) 0 x
(RVW-DP22J) Pc
1 0.5 0 0.4 (RVW-DP22K) 0 x
(RVW-DP22K) Pc
0.2 0.15 0 0.4 (RVW-DP24C) 0 x
(RVW-DP24C) Pc
0.33 0.25 0 0.4 (RVW-DP24D) 0 x
(RVW-DP24D) Pc
0.47 0.35 0 0.4 (RVW-DP24F) 0 x
(RVW-DP24F) Pc
0.6 0.45 0 0.4 (RVW-DP24G) 0 x
(RVW-DP24G) Pc
0.73 0.55 0 0.4 (RVW-DP24H) 0 x
(RVW-DP24H) Pc
0.87 0.65 0 0.4 (RVW-DP24J) 0 x
(RVW-DP24J) Pc
1 0.75 0 0.4 (RVW-DP24K) 0 x
(RVW-DP24K) Pc
0.2 0.2 0 0.4 (RVW-DP26C) 0 x
(RVW-DP26C) Pc
0.33 0.33 0 0.4 (RVW-DP26D) 0 x
(RVW-DP26D) Pc
0.47 0.47 0 0.4 (RVW-DP26F) 0 x
(RVW-DP26F) Pc
0.6 0.6 0 0.4 (RVW-DP26G) 0 x
(RVW-DP26G) Pc
0.73 0.73 0 0.4 (RVW-DP26H) 0 x
(RVW-DP26H) Pc
0.87 0.87 0 0.4 (RVW-DP26J) 0 x
(RVW-DP26J) Pc
1 1 0 0.4 (RVW-DP26K) 0 x
(RVW-DP26K) Pc
0.12 0.2 0 0.4 (RVW-DP30C) 0 x
(RVW-DP30C) Pc
0.2 0.33 0 0.4 (RVW-DP30D) 0 x
(RVW-DP30D) Pc
0.28 0.47 0 0.4 (RVW-DP30F) 0 x
(RVW-DP30F) Pc
0.36 0.6 0 0.4 (RVW-DP30G) 0 x
(RVW-DP30G) Pc
0.44 0.73 0 0.4 (RVW-DP30H) 0 x
(RVW-DP30H) Pc
0.52 0.87 0 0.4 (RVW-DP30J) 0 x
(RVW-DP30J) Pc
0.6 1 0 0.4 (RVW-DP30K) 0 x
(RVW-DP30K) Pc
0.08 0.2 0 0.4 (RVW-DP31C) 0 x
(RVW-DP31C) Pc
0.13 0.33 0 0.4 (RVW-DP31D) 0 x
(RVW-DP31D) Pc
0.19 0.47 0 0.4 (RVW-DP31F) 0 x
(RVW-DP31F) Pc
0.24 0.6 0 0.4 (RVW-DP31G) 0 x
(RVW-DP31G) Pc
0.29 0.73 0 0.4 (RVW-DP31H) 0 x
(RVW-DP31H) Pc
0.35 0.87 0 0.4 (RVW-DP31J) 0 x
(RVW-DP31J) Pc
0.4 1 0 0.4 (RVW-DP31K) 0 x
(RVW-DP31K) Pc
0.04 0.2 0 0.4 (RVW-DP33C) 0 x
(RVW-DP33C) Pc
0.07 0.33 0 0.4 (RVW-DP33D) 0 x
(RVW-DP33D) Pc
0.09 0.47 0 0.4 (RVW-DP33F) 0 x
(RVW-DP33F) Pc
0.12 0.6 0 0.4 (RVW-DP33G) 0 x
(RVW-DP33G) Pc
0.15 0.73 0 0.4 (RVW-DP33H) 0 x
(RVW-DP33H) Pc
0.17 0.87 0 0.4 (RVW-DP33J) 0 x
(RVW-DP33J) Pc
0.2 1 0 0.4 (RVW-DP33K) 0 x
(RVW-DP33K) Pc
0 0.2 0 0.4 (RVW-DP35C) 0 x
(RVW-DP35C) Pc
0 0.33 0 0.4 (RVW-DP35D) 0 x
(RVW-DP35D) Pc
0 0.47 0 0.4 (RVW-DP35F) 0 x
(RVW-DP35F) Pc
0 0.6 0 0.4 (RVW-DP35G) 0 x
(RVW-DP35G) Pc
0 0.73 0 0.4 (RVW-DP35H) 0 x
(RVW-DP35H) Pc
0 0.87 0 0.4 (RVW-DP35J) 0 x
(RVW-DP35J) Pc
0 1 0 0.4 (RVW-DP35K) 0 x
(RVW-DP35K) Pc
0 0.2 0.05 0.4 (RVW-DP37C) 0 x
(RVW-DP37C) Pc
0 0.33 0.08 0.4 (RVW-DP37D) 0 x
(RVW-DP37D) Pc
0 0.47 0.12 0.4 (RVW-DP37F) 0 x
(RVW-DP37F) Pc
0 0.6 0.15 0.4 (RVW-DP37G) 0 x
(RVW-DP37G) Pc
0 0.73 0.18 0.4 (RVW-DP37H) 0 x
(RVW-DP37H) Pc
0 0.87 0.22 0.4 (RVW-DP37J) 0 x
(RVW-DP37J) Pc
0 1 0.25 0.4 (RVW-DP37K) 0 x
(RVW-DP37K) Pc
0 0.2 0.1 0.4 (RVW-DP39C) 0 x
(RVW-DP39C) Pc
0 0.33 0.17 0.4 (RVW-DP39D) 0 x
(RVW-DP39D) Pc
0 0.47 0.23 0.4 (RVW-DP39F) 0 x
(RVW-DP39F) Pc
0 0.6 0.3 0.4 (RVW-DP39G) 0 x
(RVW-DP39G) Pc
0 0.73 0.37 0.4 (RVW-DP39H) 0 x
(RVW-DP39H) Pc
0 0.87 0.43 0.4 (RVW-DP39J) 0 x
(RVW-DP39J) Pc
0 1 0.5 0.4 (RVW-DP39K) 0 x
(RVW-DP39K) Pc
0 0.2 0.2 0.4 (RVW-DP43C) 0 x
(RVW-DP43C) Pc
0 0.33 0.33 0.4 (RVW-DP43D) 0 x
(RVW-DP43D) Pc
0 0.47 0.47 0.4 (RVW-DP43F) 0 x
(RVW-DP43F) Pc
0 0.6 0.6 0.4 (RVW-DP43G) 0 x
(RVW-DP43G) Pc
0 0.73 0.73 0.4 (RVW-DP43H) 0 x
(RVW-DP43H) Pc
0 0.87 0.87 0.4 (RVW-DP43J) 0 x
(RVW-DP43J) Pc
0 1 1 0.4 (RVW-DP43K) 0 x
(RVW-DP43K) Pc
0 0.15 0.2 0.4 (RVW-DP45C) 0 x
(RVW-DP45C) Pc
0 0.25 0.33 0.4 (RVW-DP45D) 0 x
(RVW-DP45D) Pc
0 0.35 0.47 0.4 (RVW-DP45F) 0 x
(RVW-DP45F) Pc
0 0.45 0.6 0.4 (RVW-DP45G) 0 x
(RVW-DP45G) Pc
0 0.55 0.73 0.4 (RVW-DP45H) 0 x
(RVW-DP45H) Pc
0 0.65 0.87 0.4 (RVW-DP45J) 0 x
(RVW-DP45J) Pc
0 0.75 1 0.4 (RVW-DP45K) 0 x
(RVW-DP45K) Pc
0 0.1 0.2 0.4 (RVW-DP47C) 0 x
(RVW-DP47C) Pc
0 0.17 0.33 0.4 (RVW-DP47D) 0 x
(RVW-DP47D) Pc
0 0.23 0.47 0.4 (RVW-DP47F) 0 x
(RVW-DP47F) Pc
0 0.3 0.6 0.4 (RVW-DP47G) 0 x
(RVW-DP47G) Pc
0 0.37 0.73 0.4 (RVW-DP47H) 0 x
(RVW-DP47H) Pc
0 0.43 0.87 0.4 (RVW-DP47J) 0 x
(RVW-DP47J) Pc
0 0.5 1 0.4 (RVW-DP47K) 0 x
(RVW-DP47K) Pc
0 0.05 0.2 0.4 (RVW-DP49C) 0 x
(RVW-DP49C) Pc
0 0.08 0.33 0.4 (RVW-DP49D) 0 x
(RVW-DP49D) Pc
0 0.12 0.47 0.4 (RVW-DP49F) 0 x
(RVW-DP49F) Pc
0 0.15 0.6 0.4 (RVW-DP49G) 0 x
(RVW-DP49G) Pc
0 0.18 0.73 0.4 (RVW-DP49H) 0 x
(RVW-DP49H) Pc
0 0.22 0.87 0.4 (RVW-DP49J) 0 x
(RVW-DP49J) Pc
0 0.25 1 0.4 (RVW-DP49K) 0 x
(RVW-DP49K) Pc
0 0 0.05 0 (RVW-PR01A) 0 x
(RVW-PR01A) Pc
0 0 0.1 0 (RVW-PR01B) 0 x
(RVW-PR01B) Pc
0 0 0.2 0 (RVW-PR01C) 0 x
(RVW-PR01C) Pc
0 0 0.3 0 (RVW-PR01D) 0 x
(RVW-PR01D) Pc
0 0 0.4 0 (RVW-PR01E) 0 x
(RVW-PR01E) Pc
0 0 0.5 0 (RVW-PR01F) 0 x
(RVW-PR01F) Pc
0 0 0.6 0 (RVW-PR01G) 0 x
(RVW-PR01G) Pc
0 0 0.7 0 (RVW-PR01H) 0 x
(RVW-PR01H) Pc
0 0 0.8 0 (RVW-PR01I) 0 x
(RVW-PR01I) Pc
0 0 0.9 0 (RVW-PR01J) 0 x
(RVW-PR01J) Pc
0 0 1 0 (RVW-PR01K) 0 x
(RVW-PR01K) Pc
0.003 0 0.05 0 (RVW-PR02A) 0 x
(RVW-PR02A) Pc
0.003 0 0.1 0 (RVW-PR02B) 0 x
(RVW-PR02B) Pc
0.01 0 0.2 0 (RVW-PR02C) 0 x
(RVW-PR02C) Pc
0.01 0 0.3 0 (RVW-PR02D) 0 x
(RVW-PR02D) Pc
0.01 0 0.4 0 (RVW-PR02E) 0 x
(RVW-PR02E) Pc
0.01 0 0.5 0 (RVW-PR02F) 0 x
(RVW-PR02F) Pc
0.02 0 0.6 0 (RVW-PR02G) 0 x
(RVW-PR02G) Pc
0.02 0 0.7 0 (RVW-PR02H) 0 x
(RVW-PR02H) Pc
0.02 0 0.8 0 (RVW-PR02I) 0 x
(RVW-PR02I) Pc
0.03 0 0.9 0 (RVW-PR02J) 0 x
(RVW-PR02J) Pc
0.03 0 1 0 (RVW-PR02K) 0 x
(RVW-PR02K) Pc
0.006 0 0.05 0 (RVW-PR03A) 0 x
(RVW-PR03A) Pc
0.006 0 0.1 0 (RVW-PR03B) 0 x
(RVW-PR03B) Pc
0.02 0 0.2 0 (RVW-PR03C) 0 x
(RVW-PR03C) Pc
0.02 0 0.3 0 (RVW-PR03D) 0 x
(RVW-PR03D) Pc
0.03 0 0.4 0 (RVW-PR03E) 0 x
(RVW-PR03E) Pc
0.03 0 0.5 0 (RVW-PR03F) 0 x
(RVW-PR03F) Pc
0.04 0 0.6 0 (RVW-PR03G) 0 x
(RVW-PR03G) Pc
0.04 0 0.7 0 (RVW-PR03H) 0 x
(RVW-PR03H) Pc
0.05 0 0.8 0 (RVW-PR03I) 0 x
(RVW-PR03I) Pc
0.06 0 0.9 0 (RVW-PR03J) 0 x
(RVW-PR03J) Pc
0.06 0 1 0 (RVW-PR03K) 0 x
(RVW-PR03K) Pc
0.01 0 0.05 0 (RVW-PR04A) 0 x
(RVW-PR04A) Pc
0.015 0 0.1 0 (RVW-PR04B) 0 x
(RVW-PR04B) Pc
0.03 0 0.2 0 (RVW-PR04C) 0 x
(RVW-PR04C) Pc
0.04 0 0.3 0 (RVW-PR04D) 0 x
(RVW-PR04D) Pc
0.06 0 0.4 0 (RVW-PR04E) 0 x
(RVW-PR04E) Pc
0.07 0 0.5 0 (RVW-PR04F) 0 x
(RVW-PR04F) Pc
0.09 0 0.6 0 (RVW-PR04G) 0 x
(RVW-PR04G) Pc
0.1 0 0.7 0 (RVW-PR04H) 0 x
(RVW-PR04H) Pc
0.12 0 0.8 0 (RVW-PR04I) 0 x
(RVW-PR04I) Pc
0.13 0 0.9 0 (RVW-PR04J) 0 x
(RVW-PR04J) Pc
0.15 0 1 0 (RVW-PR04K) 0 x
(RVW-PR04K) Pc
0.014 0 0.05 0 (RVW-PR05A) 0 x
(RVW-PR05A) Pc
0.025 0 0.1 0 (RVW-PR05B) 0 x
(RVW-PR05B) Pc
0.04 0 0.2 0 (RVW-PR05C) 0 x
(RVW-PR05C) Pc
0.07 0 0.3 0 (RVW-PR05D) 0 x
(RVW-PR05D) Pc
0.09 0 0.4 0 (RVW-PR05E) 0 x
(RVW-PR05E) Pc
0.12 0 0.5 0 (RVW-PR05F) 0 x
(RVW-PR05F) Pc
0.14 0 0.6 0 (RVW-PR05G) 0 x
(RVW-PR05G) Pc
0.16 0 0.7 0 (RVW-PR05H) 0 x
(RVW-PR05H) Pc
0.19 0 0.8 0 (RVW-PR05I) 0 x
(RVW-PR05I) Pc
0.21 0 0.9 0 (RVW-PR05J) 0 x
(RVW-PR05J) Pc
0.23 0 1 0 (RVW-PR05K) 0 x
(RVW-PR05K) Pc
0.018 0 0.05 0 (RVW-PR06A) 0 x
(RVW-PR06A) Pc
0.035 0 0.1 0 (RVW-PR06B) 0 x
(RVW-PR06B) Pc
0.06 0 0.2 0 (RVW-PR06C) 0 x
(RVW-PR06C) Pc
0.09 0 0.3 0 (RVW-PR06D) 0 x
(RVW-PR06D) Pc
0.13 0 0.4 0 (RVW-PR06E) 0 x
(RVW-PR06E) Pc
0.16 0 0.5 0 (RVW-PR06F) 0 x
(RVW-PR06F) Pc
0.19 0 0.6 0 (RVW-PR06G) 0 x
(RVW-PR06G) Pc
0.22 0 0.7 0 (RVW-PR06H) 0 x
(RVW-PR06H) Pc
0.25 0 0.8 0 (RVW-PR06I) 0 x
(RVW-PR06I) Pc
0.29 0 0.9 0 (RVW-PR06J) 0 x
(RVW-PR06J) Pc
0.32 0 1 0 (RVW-PR06K) 0 x
(RVW-PR06K) Pc
0.022 0 0.05 0 (RVW-PR07A) 0 x
(RVW-PR07A) Pc
0.045 0 0.1 0 (RVW-PR07B) 0 x
(RVW-PR07B) Pc
0.08 0 0.2 0 (RVW-PR07C) 0 x
(RVW-PR07C) Pc
0.12 0 0.3 0 (RVW-PR07D) 0 x
(RVW-PR07D) Pc
0.17 0 0.4 0 (RVW-PR07E) 0 x
(RVW-PR07E) Pc
0.22 0 0.5 0 (RVW-PR07F) 0 x
(RVW-PR07F) Pc
0.26 0 0.6 0 (RVW-PR07G) 0 x
(RVW-PR07G) Pc
0.3 0 0.7 0 (RVW-PR07H) 0 x
(RVW-PR07H) Pc
0.35 0 0.8 0 (RVW-PR07I) 0 x
(RVW-PR07I) Pc
0.39 0 0.9 0 (RVW-PR07J) 0 x
(RVW-PR07J) Pc
0.43 0 1 0 (RVW-PR07K) 0 x
(RVW-PR07K) Pc
0.026 0 0.05 0 (RVW-PR08A) 0 x
(RVW-PR08A) Pc
0.055 0 0.1 0 (RVW-PR08B) 0 x
(RVW-PR08B) Pc
0.11 0 0.2 0 (RVW-PR08C) 0 x
(RVW-PR08C) Pc
0.16 0 0.3 0 (RVW-PR08D) 0 x
(RVW-PR08D) Pc
0.22 0 0.4 0 (RVW-PR08E) 0 x
(RVW-PR08E) Pc
0.27 0 0.5 0 (RVW-PR08F) 0 x
(RVW-PR08F) Pc
0.33 0 0.6 0 (RVW-PR08G) 0 x
(RVW-PR08G) Pc
0.38 0 0.7 0 (RVW-PR08H) 0 x
(RVW-PR08H) Pc
0.44 0 0.8 0 (RVW-PR08I) 0 x
(RVW-PR08I) Pc
0.49 0 0.9 0 (RVW-PR08J) 0 x
(RVW-PR08J) Pc
0.55 0 1 0 (RVW-PR08K) 0 x
(RVW-PR08K) Pc
0.035 0 0.05 0 (RVW-PR09A) 0 x
(RVW-PR09A) Pc
0.065 0 0.1 0 (RVW-PR09B) 0 x
(RVW-PR09B) Pc
0.13 0 0.2 0 (RVW-PR09C) 0 x
(RVW-PR09C) Pc
0.2 0 0.3 0 (RVW-PR09D) 0 x
(RVW-PR09D) Pc
0.26 0 0.4 0 (RVW-PR09E) 0 x
(RVW-PR09E) Pc
0.33 0 0.5 0 (RVW-PR09F) 0 x
(RVW-PR09F) Pc
0.4 0 0.6 0 (RVW-PR09G) 0 x
(RVW-PR09G) Pc
0.46 0 0.7 0 (RVW-PR09H) 0 x
(RVW-PR09H) Pc
0.53 0 0.8 0 (RVW-PR09I) 0 x
(RVW-PR09I) Pc
0.59 0 0.9 0 (RVW-PR09J) 0 x
(RVW-PR09J) Pc
0.65 0 1 0 (RVW-PR09K) 0 x
(RVW-PR09K) Pc
0.04 0 0.05 0 (RVW-PR10A) 0 x
(RVW-PR10A) Pc
0.08 0 0.1 0 (RVW-PR10B) 0 x
(RVW-PR10B) Pc
0.15 0 0.2 0 (RVW-PR10C) 0 x
(RVW-PR10C) Pc
0.23 0 0.3 0 (RVW-PR10D) 0 x
(RVW-PR10D) Pc
0.31 0 0.4 0 (RVW-PR10E) 0 x
(RVW-PR10E) Pc
0.39 0 0.5 0 (RVW-PR10F) 0 x
(RVW-PR10F) Pc
0.46 0 0.6 0 (RVW-PR10G) 0 x
(RVW-PR10G) Pc
0.54 0 0.7 0 (RVW-PR10H) 0 x
(RVW-PR10H) Pc
0.62 0 0.8 0 (RVW-PR10I) 0 x
(RVW-PR10I) Pc
0.7 0 0.9 0 (RVW-PR10J) 0 x
(RVW-PR10J) Pc
0.77 0 1 0 (RVW-PR10K) 0 x
(RVW-PR10K) Pc
0.045 0 0.05 0 (RVW-PR11A) 0 x
(RVW-PR11A) Pc
0.09 0 0.1 0 (RVW-PR11B) 0 x
(RVW-PR11B) Pc
0.18 0 0.2 0 (RVW-PR11C) 0 x
(RVW-PR11C) Pc
0.26 0 0.3 0 (RVW-PR11D) 0 x
(RVW-PR11D) Pc
0.35 0 0.4 0 (RVW-PR11E) 0 x
(RVW-PR11E) Pc
0.44 0 0.5 0 (RVW-PR11F) 0 x
(RVW-PR11F) Pc
0.53 0 0.6 0 (RVW-PR11G) 0 x
(RVW-PR11G) Pc
0.62 0 0.7 0 (RVW-PR11H) 0 x
(RVW-PR11H) Pc
0.71 0 0.8 0 (RVW-PR11I) 0 x
(RVW-PR11I) Pc
0.8 0 0.9 0 (RVW-PR11J) 0 x
(RVW-PR11J) Pc
0.89 0 1 0 (RVW-PR11K) 0 x
(RVW-PR11K) Pc
0.05 0 0.05 0 (RVW-PR12A) 0 x
(RVW-PR12A) Pc
0.1 0 0.1 0 (RVW-PR12B) 0 x
(RVW-PR12B) Pc
0.2 0 0.2 0 (RVW-PR12C) 0 x
(RVW-PR12C) Pc
0.3 0 0.3 0 (RVW-PR12D) 0 x
(RVW-PR12D) Pc
0.4 0 0.4 0 (RVW-PR12E) 0 x
(RVW-PR12E) Pc
0.5 0 0.5 0 (RVW-PR12F) 0 x
(RVW-PR12F) Pc
0.6 0 0.6 0 (RVW-PR12G) 0 x
(RVW-PR12G) Pc
0.7 0 0.7 0 (RVW-PR12H) 0 x
(RVW-PR12H) Pc
0.8 0 0.8 0 (RVW-PR12I) 0 x
(RVW-PR12I) Pc
0.9 0 0.9 0 (RVW-PR12J) 0 x
(RVW-PR12J) Pc
1 0 1 0 (RVW-PR12K) 0 x
(RVW-PR12K) Pc
0.05 0 0.04 0 (RVW-PR13A) 0 x
(RVW-PR13A) Pc
0.1 0 0.085 0 (RVW-PR13B) 0 x
(RVW-PR13B) Pc
0.2 0 0.17 0 (RVW-PR13C) 0 x
(RVW-PR13C) Pc
0.3 0 0.26 0 (RVW-PR13D) 0 x
(RVW-PR13D) Pc
0.4 0 0.34 0 (RVW-PR13E) 0 x
(RVW-PR13E) Pc
0.5 0 0.43 0 (RVW-PR13F) 0 x
(RVW-PR13F) Pc
0.6 0 0.51 0 (RVW-PR13G) 0 x
(RVW-PR13G) Pc
0.7 0 0.6 0 (RVW-PR13H) 0 x
(RVW-PR13H) Pc
0.8 0 0.68 0 (RVW-PR13I) 0 x
(RVW-PR13I) Pc
0.9 0 0.77 0 (RVW-PR13J) 0 x
(RVW-PR13J) Pc
1 0 0.85 0 (RVW-PR13K) 0 x
(RVW-PR13K) Pc
0.05 0 0.035 0 (RVW-PR14A) 0 x
(RVW-PR14A) Pc
0.1 0 0.07 0 (RVW-PR14B) 0 x
(RVW-PR14B) Pc
0.2 0 0.14 0 (RVW-PR14C) 0 x
(RVW-PR14C) Pc
0.3 0 0.21 0 (RVW-PR14D) 0 x
(RVW-PR14D) Pc
0.4 0 0.29 0 (RVW-PR14E) 0 x
(RVW-PR14E) Pc
0.5 0 0.36 0 (RVW-PR14F) 0 x
(RVW-PR14F) Pc
0.6 0 0.43 0 (RVW-PR14G) 0 x
(RVW-PR14G) Pc
0.7 0 0.5 0 (RVW-PR14H) 0 x
(RVW-PR14H) Pc
0.8 0 0.57 0 (RVW-PR14I) 0 x
(RVW-PR14I) Pc
0.9 0 0.64 0 (RVW-PR14J) 0 x
(RVW-PR14J) Pc
1 0 0.7 0 (RVW-PR14K) 0 x
(RVW-PR14K) Pc
0.05 0 0.025 0 (RVW-PR15A) 0 x
(RVW-PR15A) Pc
0.1 0 0.06 0 (RVW-PR15B) 0 x
(RVW-PR15B) Pc
0.2 0 0.11 0 (RVW-PR15C) 0 x
(RVW-PR15C) Pc
0.3 0 0.17 0 (RVW-PR15D) 0 x
(RVW-PR15D) Pc
0.4 0 0.23 0 (RVW-PR15E) 0 x
(RVW-PR15E) Pc
0.5 0 0.29 0 (RVW-PR15F) 0 x
(RVW-PR15F) Pc
0.6 0 0.34 0 (RVW-PR15G) 0 x
(RVW-PR15G) Pc
0.7 0 0.4 0 (RVW-PR15H) 0 x
(RVW-PR15H) Pc
0.8 0 0.45 0 (RVW-PR15I) 0 x
(RVW-PR15I) Pc
0.9 0 0.51 0 (RVW-PR15J) 0 x
(RVW-PR15J) Pc
1 0 0.57 0 (RVW-PR15K) 0 x
(RVW-PR15K) Pc
0.05 0 0.02 0 (RVW-PR16A) 0 x
(RVW-PR16A) Pc
0.1 0 0.05 0 (RVW-PR16B) 0 x
(RVW-PR16B) Pc
0.2 0 0.09 0 (RVW-PR16C) 0 x
(RVW-PR16C) Pc
0.3 0 0.13 0 (RVW-PR16D) 0 x
(RVW-PR16D) Pc
0.4 0 0.17 0 (RVW-PR16E) 0 x
(RVW-PR16E) Pc
0.5 0 0.21 0 (RVW-PR16F) 0 x
(RVW-PR16F) Pc
0.6 0 0.26 0 (RVW-PR16G) 0 x
(RVW-PR16G) Pc
0.7 0 0.3 0 (RVW-PR16H) 0 x
(RVW-PR16H) Pc
0.8 0 0.35 0 (RVW-PR16I) 0 x
(RVW-PR16I) Pc
0.9 0 0.39 0 (RVW-PR16J) 0 x
(RVW-PR16J) Pc
1 0 0.43 0 (RVW-PR16K) 0 x
(RVW-PR16K) Pc
0.05 0 0.015 0 (RVW-PR17A) 0 x
(RVW-PR17A) Pc
0.1 0 0.03 0 (RVW-PR17B) 0 x
(RVW-PR17B) Pc
0.2 0 0.06 0 (RVW-PR17C) 0 x
(RVW-PR17C) Pc
0.3 0 0.09 0 (RVW-PR17D) 0 x
(RVW-PR17D) Pc
0.4 0 0.11 0 (RVW-PR17E) 0 x
(RVW-PR17E) Pc
0.5 0 0.14 0 (RVW-PR17F) 0 x
(RVW-PR17F) Pc
0.6 0 0.17 0 (RVW-PR17G) 0 x
(RVW-PR17G) Pc
0.7 0 0.2 0 (RVW-PR17H) 0 x
(RVW-PR17H) Pc
0.8 0 0.23 0 (RVW-PR17I) 0 x
(RVW-PR17I) Pc
0.9 0 0.25 0 (RVW-PR17J) 0 x
(RVW-PR17J) Pc
1 0 0.28 0 (RVW-PR17K) 0 x
(RVW-PR17K) Pc
0.05 0 0.005 0 (RVW-PR18A) 0 x
(RVW-PR18A) Pc
0.1 0 0.015 0 (RVW-PR18B) 0 x
(RVW-PR18B) Pc
0.2 0 0.03 0 (RVW-PR18C) 0 x
(RVW-PR18C) Pc
0.3 0 0.04 0 (RVW-PR18D) 0 x
(RVW-PR18D) Pc
0.4 0 0.06 0 (RVW-PR18E) 0 x
(RVW-PR18E) Pc
0.5 0 0.07 0 (RVW-PR18F) 0 x
(RVW-PR18F) Pc
0.6 0 0.09 0 (RVW-PR18G) 0 x
(RVW-PR18G) Pc
0.7 0 0.1 0 (RVW-PR18H) 0 x
(RVW-PR18H) Pc
0.8 0 0.11 0 (RVW-PR18I) 0 x
(RVW-PR18I) Pc
0.9 0 0.13 0 (RVW-PR18J) 0 x
(RVW-PR18J) Pc
1 0 0.15 0 (RVW-PR18K) 0 x
(RVW-PR18K) Pc
0.05 0 0 0 (RVW-PR19A) 0 x
(RVW-PR19A) Pc
0.1 0 0 0 (RVW-PR19B) 0 x
(RVW-PR19B) Pc
0.2 0 0 0 (RVW-PR19C) 0 x
(RVW-PR19C) Pc
0.3 0 0 0 (RVW-PR19D) 0 x
(RVW-PR19D) Pc
0.4 0 0 0 (RVW-PR19E) 0 x
(RVW-PR19E) Pc
0.5 0 0 0 (RVW-PR19F) 0 x
(RVW-PR19F) Pc
0.6 0 0 0 (RVW-PR19G) 0 x
(RVW-PR19G) Pc
0.7 0 0 0 (RVW-PR19H) 0 x
(RVW-PR19H) Pc
0.8 0 0 0 (RVW-PR19I) 0 x
(RVW-PR19I) Pc
0.9 0 0 0 (RVW-PR19J) 0 x
(RVW-PR19J) Pc
1 0 0 0 (RVW-PR19K) 0 x
(RVW-PR19K) Pc
0.05 0.005 0 0 (RVW-PR20A) 0 x
(RVW-PR20A) Pc
0.1 0.015 0 0 (RVW-PR20B) 0 x
(RVW-PR20B) Pc
0.2 0.03 0 0 (RVW-PR20C) 0 x
(RVW-PR20C) Pc
0.3 0.04 0 0 (RVW-PR20D) 0 x
(RVW-PR20D) Pc
0.4 0.06 0 0 (RVW-PR20E) 0 x
(RVW-PR20E) Pc
0.5 0.07 0 0 (RVW-PR20F) 0 x
(RVW-PR20F) Pc
0.6 0.09 0 0 (RVW-PR20G) 0 x
(RVW-PR20G) Pc
0.7 0.1 0 0 (RVW-PR20H) 0 x
(RVW-PR20H) Pc
0.8 0.11 0 0 (RVW-PR20I) 0 x
(RVW-PR20I) Pc
0.9 0.13 0 0 (RVW-PR20J) 0 x
(RVW-PR20J) Pc
1 0.15 0 0 (RVW-PR20K) 0 x
(RVW-PR20K) Pc
0.05 0.015 0 0 (RVW-PR21A) 0 x
(RVW-PR21A) Pc
0.1 0.03 0 0 (RVW-PR21B) 0 x
(RVW-PR21B) Pc
0.2 0.06 0 0 (RVW-PR21C) 0 x
(RVW-PR21C) Pc
0.3 0.09 0 0 (RVW-PR21D) 0 x
(RVW-PR21D) Pc
0.4 0.11 0 0 (RVW-PR21E) 0 x
(RVW-PR21E) Pc
0.5 0.14 0 0 (RVW-PR21F) 0 x
(RVW-PR21F) Pc
0.6 0.17 0 0 (RVW-PR21G) 0 x
(RVW-PR21G) Pc
0.7 0.2 0 0 (RVW-PR21H) 0 x
(RVW-PR21H) Pc
0.8 0.23 0 0 (RVW-PR21I) 0 x
(RVW-PR21I) Pc
0.9 0.25 0 0 (RVW-PR21J) 0 x
(RVW-PR21J) Pc
1 0.28 0 0 (RVW-PR21K) 0 x
(RVW-PR21K) Pc
0.05 0.02 0 0 (RVW-PR22A) 0 x
(RVW-PR22A) Pc
0.1 0.04 0 0 (RVW-PR22B) 0 x
(RVW-PR22B) Pc
0.2 0.09 0 0 (RVW-PR22C) 0 x
(RVW-PR22C) Pc
0.3 0.13 0 0 (RVW-PR22D) 0 x
(RVW-PR22D) Pc
0.4 0.17 0 0 (RVW-PR22E) 0 x
(RVW-PR22E) Pc
0.5 0.21 0 0 (RVW-PR22F) 0 x
(RVW-PR22F) Pc
0.6 0.26 0 0 (RVW-PR22G) 0 x
(RVW-PR22G) Pc
0.7 0.3 0 0 (RVW-PR22H) 0 x
(RVW-PR22H) Pc
0.8 0.34 0 0 (RVW-PR22I) 0 x
(RVW-PR22I) Pc
0.9 0.38 0 0 (RVW-PR22J) 0 x
(RVW-PR22J) Pc
1 0.43 0 0 (RVW-PR22K) 0 x
(RVW-PR22K) Pc
0.05 0.025 0 0 (RVW-PR23A) 0 x
(RVW-PR23A) Pc
0.1 0.06 0 0 (RVW-PR23B) 0 x
(RVW-PR23B) Pc
0.2 0.11 0 0 (RVW-PR23C) 0 x
(RVW-PR23C) Pc
0.3 0.17 0 0 (RVW-PR23D) 0 x
(RVW-PR23D) Pc
0.4 0.23 0 0 (RVW-PR23E) 0 x
(RVW-PR23E) Pc
0.5 0.29 0 0 (RVW-PR23F) 0 x
(RVW-PR23F) Pc
0.6 0.34 0 0 (RVW-PR23G) 0 x
(RVW-PR23G) Pc
0.7 0.4 0 0 (RVW-PR23H) 0 x
(RVW-PR23H) Pc
0.8 0.46 0 0 (RVW-PR23I) 0 x
(RVW-PR23I) Pc
0.9 0.51 0 0 (RVW-PR23J) 0 x
(RVW-PR23J) Pc
1 0.57 0 0 (RVW-PR23K) 0 x
(RVW-PR23K) Pc
0.05 0.035 0 0 (RVW-PR24A) 0 x
(RVW-PR24A) Pc
0.1 0.07 0 0 (RVW-PR24B) 0 x
(RVW-PR24B) Pc
0.2 0.12 0 0 (RVW-PR24C) 0 x
(RVW-PR24C) Pc
0.3 0.21 0 0 (RVW-PR24D) 0 x
(RVW-PR24D) Pc
0.4 0.29 0 0 (RVW-PR24E) 0 x
(RVW-PR24E) Pc
0.5 0.36 0 0 (RVW-PR24F) 0 x
(RVW-PR24F) Pc
0.6 0.43 0 0 (RVW-PR24G) 0 x
(RVW-PR24G) Pc
0.7 0.5 0 0 (RVW-PR24H) 0 x
(RVW-PR24H) Pc
0.8 0.57 0 0 (RVW-PR24I) 0 x
(RVW-PR24I) Pc
0.9 0.64 0 0 (RVW-PR24J) 0 x
(RVW-PR24J) Pc
1 0.7 0 0 (RVW-PR24K) 0 x
(RVW-PR24K) Pc
0.05 0.04 0 0 (RVW-PR25A) 0 x
(RVW-PR25A) Pc
0.1 0.09 0 0 (RVW-PR25B) 0 x
(RVW-PR25B) Pc
0.2 0.16 0 0 (RVW-PR25C) 0 x
(RVW-PR25C) Pc
0.3 0.26 0 0 (RVW-PR25D) 0 x
(RVW-PR25D) Pc
0.4 0.34 0 0 (RVW-PR25E) 0 x
(RVW-PR25E) Pc
0.5 0.43 0 0 (RVW-PR25F) 0 x
(RVW-PR25F) Pc
0.6 0.51 0 0 (RVW-PR25G) 0 x
(RVW-PR25G) Pc
0.7 0.6 0 0 (RVW-PR25H) 0 x
(RVW-PR25H) Pc
0.8 0.68 0 0 (RVW-PR25I) 0 x
(RVW-PR25I) Pc
0.9 0.77 0 0 (RVW-PR25J) 0 x
(RVW-PR25J) Pc
1 0.85 0 0 (RVW-PR25K) 0 x
(RVW-PR25K) Pc
0.05 0.05 0 0 (RVW-PR26A) 0 x
(RVW-PR26A) Pc
0.1 0.1 0 0 (RVW-PR26B) 0 x
(RVW-PR26B) Pc
0.2 0.2 0 0 (RVW-PR26C) 0 x
(RVW-PR26C) Pc
0.3 0.3 0 0 (RVW-PR26D) 0 x
(RVW-PR26D) Pc
0.4 0.4 0 0 (RVW-PR26E) 0 x
(RVW-PR26E) Pc
0.5 0.5 0 0 (RVW-PR26F) 0 x
(RVW-PR26F) Pc
0.6 0.6 0 0 (RVW-PR26G) 0 x
(RVW-PR26G) Pc
0.7 0.7 0 0 (RVW-PR26H) 0 x
(RVW-PR26H) Pc
0.8 0.8 0 0 (RVW-PR26I) 0 x
(RVW-PR26I) Pc
0.9 0.9 0 0 (RVW-PR26J) 0 x
(RVW-PR26J) Pc
1 1 0 0 (RVW-PR26K) 0 x
(RVW-PR26K) Pc
0.045 0.05 0 0 (RVW-PR27A) 0 x
(RVW-PR27A) Pc
0.09 0.1 0 0 (RVW-PR27B) 0 x
(RVW-PR27B) Pc
0.18 0.2 0 0 (RVW-PR27C) 0 x
(RVW-PR27C) Pc
0.27 0.3 0 0 (RVW-PR27D) 0 x
(RVW-PR27D) Pc
0.36 0.4 0 0 (RVW-PR27E) 0 x
(RVW-PR27E) Pc
0.45 0.5 0 0 (RVW-PR27F) 0 x
(RVW-PR27F) Pc
0.53 0.6 0 0 (RVW-PR27G) 0 x
(RVW-PR27G) Pc
0.62 0.7 0 0 (RVW-PR27H) 0 x
(RVW-PR27H) Pc
0.71 0.8 0 0 (RVW-PR27I) 0 x
(RVW-PR27I) Pc
0.8 0.9 0 0 (RVW-PR27J) 0 x
(RVW-PR27J) Pc
0.9 1 0 0 (RVW-PR27K) 0 x
(RVW-PR27K) Pc
0.04 0.05 0 0 (RVW-PR28A) 0 x
(RVW-PR28A) Pc
0.08 0.1 0 0 (RVW-PR28B) 0 x
(RVW-PR28B) Pc
0.16 0.2 0 0 (RVW-PR28C) 0 x
(RVW-PR28C) Pc
0.23 0.3 0 0 (RVW-PR28D) 0 x
(RVW-PR28D) Pc
0.31 0.4 0 0 (RVW-PR28E) 0 x
(RVW-PR28E) Pc
0.39 0.5 0 0 (RVW-PR28F) 0 x
(RVW-PR28F) Pc
0.47 0.6 0 0 (RVW-PR28G) 0 x
(RVW-PR28G) Pc
0.55 0.7 0 0 (RVW-PR28H) 0 x
(RVW-PR28H) Pc
0.62 0.8 0 0 (RVW-PR28I) 0 x
(RVW-PR28I) Pc
0.7 0.9 0 0 (RVW-PR28J) 0 x
(RVW-PR28J) Pc
0.78 1 0 0 (RVW-PR28K) 0 x
(RVW-PR28K) Pc
0.035 0.05 0 0 (RVW-PR29A) 0 x
(RVW-PR29A) Pc
0.07 0.1 0 0 (RVW-PR29B) 0 x
(RVW-PR29B) Pc
0.13 0.2 0 0 (RVW-PR29C) 0 x
(RVW-PR29C) Pc
0.2 0.3 0 0 (RVW-PR29D) 0 x
(RVW-PR29D) Pc
0.27 0.4 0 0 (RVW-PR29E) 0 x
(RVW-PR29E) Pc
0.33 0.5 0 0 (RVW-PR29F) 0 x
(RVW-PR29F) Pc
0.4 0.6 0 0 (RVW-PR29G) 0 x
(RVW-PR29G) Pc
0.47 0.7 0 0 (RVW-PR29H) 0 x
(RVW-PR29H) Pc
0.53 0.8 0 0 (RVW-PR29I) 0 x
(RVW-PR29I) Pc
0.6 0.9 0 0 (RVW-PR29J) 0 x
(RVW-PR29J) Pc
0.67 1 0 0 (RVW-PR29K) 0 x
(RVW-PR29K) Pc
0.02 0.05 0 0 (RVW-PR30A) 0 x
(RVW-PR30A) Pc
0.06 0.1 0 0 (RVW-PR30B) 0 x
(RVW-PR30B) Pc
0.11 0.2 0 0 (RVW-PR30C) 0 x
(RVW-PR30C) Pc
0.17 0.3 0 0 (RVW-PR30D) 0 x
(RVW-PR30D) Pc
0.22 0.4 0 0 (RVW-PR30E) 0 x
(RVW-PR30E) Pc
0.28 0.5 0 0 (RVW-PR30F) 0 x
(RVW-PR30F) Pc
0.33 0.6 0 0 (RVW-PR30G) 0 x
(RVW-PR30G) Pc
0.39 0.7 0 0 (RVW-PR30H) 0 x
(RVW-PR30H) Pc
0.45 0.8 0 0 (RVW-PR30I) 0 x
(RVW-PR30I) Pc
0.5 0.9 0 0 (RVW-PR30J) 0 x
(RVW-PR30J) Pc
0.55 1 0 0 (RVW-PR30K) 0 x
(RVW-PR30K) Pc
0.015 0.05 0 0 (RVW-PR31A) 0 x
(RVW-PR31A) Pc
0.045 0.1 0 0 (RVW-PR31B) 0 x
(RVW-PR31B) Pc
0.09 0.2 0 0 (RVW-PR31C) 0 x
(RVW-PR31C) Pc
0.135 0.3 0 0 (RVW-PR31D) 0 x
(RVW-PR31D) Pc
0.18 0.4 0 0 (RVW-PR31E) 0 x
(RVW-PR31E) Pc
0.22 0.5 0 0 (RVW-PR31F) 0 x
(RVW-PR31F) Pc
0.27 0.6 0 0 (RVW-PR31G) 0 x
(RVW-PR31G) Pc
0.31 0.7 0 0 (RVW-PR31H) 0 x
(RVW-PR31H) Pc
0.35 0.8 0 0 (RVW-PR31I) 0 x
(RVW-PR31I) Pc
0.4 0.9 0 0 (RVW-PR31J) 0 x
(RVW-PR31J) Pc
0.45 1 0 0 (RVW-PR31K) 0 x
(RVW-PR31K) Pc
0.01 0.05 0 0 (RVW-PR32A) 0 x
(RVW-PR32A) Pc
0.03 0.1 0 0 (RVW-PR32B) 0 x
(RVW-PR32B) Pc
0.07 0.2 0 0 (RVW-PR32C) 0 x
(RVW-PR32C) Pc
0.1 0.3 0 0 (RVW-PR32D) 0 x
(RVW-PR32D) Pc
0.13 0.4 0 0 (RVW-PR32E) 0 x
(RVW-PR32E) Pc
0.17 0.5 0 0 (RVW-PR32F) 0 x
(RVW-PR32F) Pc
0.2 0.6 0 0 (RVW-PR32G) 0 x
(RVW-PR32G) Pc
0.23 0.7 0 0 (RVW-PR32H) 0 x
(RVW-PR32H) Pc
0.26 0.8 0 0 (RVW-PR32I) 0 x
(RVW-PR32I) Pc
0.3 0.9 0 0 (RVW-PR32J) 0 x
(RVW-PR32J) Pc
0.33 1 0 0 (RVW-PR32K) 0 x
(RVW-PR32K) Pc
0.006 0.05 0 0 (RVW-PR33A) 0 x
(RVW-PR33A) Pc
0.02 0.1 0 0 (RVW-PR33B) 0 x
(RVW-PR33B) Pc
0.04 0.2 0 0 (RVW-PR33C) 0 x
(RVW-PR33C) Pc
0.07 0.3 0 0 (RVW-PR33D) 0 x
(RVW-PR33D) Pc
0.09 0.4 0 0 (RVW-PR33E) 0 x
(RVW-PR33E) Pc
0.11 0.5 0 0 (RVW-PR33F) 0 x
(RVW-PR33F) Pc
0.13 0.6 0 0 (RVW-PR33G) 0 x
(RVW-PR33G) Pc
0.15 0.7 0 0 (RVW-PR33H) 0 x
(RVW-PR33H) Pc
0.18 0.8 0 0 (RVW-PR33I) 0 x
(RVW-PR33I) Pc
0.2 0.9 0 0 (RVW-PR33J) 0 x
(RVW-PR33J) Pc
0.22 1 0 0 (RVW-PR33K) 0 x
(RVW-PR33K) Pc
0.003 0.05 0 0 (RVW-PR34A) 0 x
(RVW-PR34A) Pc
0.01 0.1 0 0 (RVW-PR34B) 0 x
(RVW-PR34B) Pc
0.02 0.2 0 0 (RVW-PR34C) 0 x
(RVW-PR34C) Pc
0.03 0.3 0 0 (RVW-PR34D) 0 x
(RVW-PR34D) Pc
0.04 0.4 0 0 (RVW-PR34E) 0 x
(RVW-PR34E) Pc
0.06 0.5 0 0 (RVW-PR34F) 0 x
(RVW-PR34F) Pc
0.07 0.6 0 0 (RVW-PR34G) 0 x
(RVW-PR34G) Pc
0.08 0.7 0 0 (RVW-PR34H) 0 x
(RVW-PR34H) Pc
0.09 0.8 0 0 (RVW-PR34I) 0 x
(RVW-PR34I) Pc
0.1 0.9 0 0 (RVW-PR34J) 0 x
(RVW-PR34J) Pc
0.11 1 0 0 (RVW-PR34K) 0 x
(RVW-PR34K) Pc
0 0.05 0 0 (RVW-PR35A) 0 x
(RVW-PR35A) Pc
0 0.1 0 0 (RVW-PR35B) 0 x
(RVW-PR35B) Pc
0 0.2 0 0 (RVW-PR35C) 0 x
(RVW-PR35C) Pc
0 0.3 0 0 (RVW-PR35D) 0 x
(RVW-PR35D) Pc
0 0.4 0 0 (RVW-PR35E) 0 x
(RVW-PR35E) Pc
0 0.5 0 0 (RVW-PR35F) 0 x
(RVW-PR35F) Pc
0 0.6 0 0 (RVW-PR35G) 0 x
(RVW-PR35G) Pc
0 0.7 0 0 (RVW-PR35H) 0 x
(RVW-PR35H) Pc
0 0.8 0 0 (RVW-PR35I) 0 x
(RVW-PR35I) Pc
0 0.9 0 0 (RVW-PR35J) 0 x
(RVW-PR35J) Pc
0 1 0 0 (RVW-PR35K) 0 x
(RVW-PR35K) Pc
0 0.05 0.01 0 (RVW-PR36A) 0 x
(RVW-PR36A) Pc
0 0.1 0.012 0 (RVW-PR36B) 0 x
(RVW-PR36B) Pc
0 0.2 0.02 0 (RVW-PR36C) 0 x
(RVW-PR36C) Pc
0 0.3 0.04 0 (RVW-PR36D) 0 x
(RVW-PR36D) Pc
0 0.4 0.05 0 (RVW-PR36E) 0 x
(RVW-PR36E) Pc
0 0.5 0.06 0 (RVW-PR36F) 0 x
(RVW-PR36F) Pc
0 0.6 0.07 0 (RVW-PR36G) 0 x
(RVW-PR36G) Pc
0 0.7 0.09 0 (RVW-PR36H) 0 x
(RVW-PR36H) Pc
0 0.8 0.1 0 (RVW-PR36I) 0 x
(RVW-PR36I) Pc
0 0.9 0.11 0 (RVW-PR36J) 0 x
(RVW-PR36J) Pc
0 1 0.12 0 (RVW-PR36K) 0 x
(RVW-PR36K) Pc
0 0.05 0.015 0 (RVW-PR37A) 0 x
(RVW-PR37A) Pc
0 0.1 0.025 0 (RVW-PR37B) 0 x
(RVW-PR37B) Pc
0 0.2 0.05 0 (RVW-PR37C) 0 x
(RVW-PR37C) Pc
0 0.3 0.07 0 (RVW-PR37D) 0 x
(RVW-PR37D) Pc
0 0.4 0.1 0 (RVW-PR37E) 0 x
(RVW-PR37E) Pc
0 0.5 0.12 0 (RVW-PR37F) 0 x
(RVW-PR37F) Pc
0 0.6 0.15 0 (RVW-PR37G) 0 x
(RVW-PR37G) Pc
0 0.7 0.17 0 (RVW-PR37H) 0 x
(RVW-PR37H) Pc
0 0.8 0.2 0 (RVW-PR37I) 0 x
(RVW-PR37I) Pc
0 0.9 0.22 0 (RVW-PR37J) 0 x
(RVW-PR37J) Pc
0 1 0.25 0 (RVW-PR37K) 0 x
(RVW-PR37K) Pc
0 0.05 0.02 0 (RVW-PR38A) 0 x
(RVW-PR38A) Pc
0 0.1 0.04 0 (RVW-PR38B) 0 x
(RVW-PR38B) Pc
0 0.2 0.07 0 (RVW-PR38C) 0 x
(RVW-PR38C) Pc
0 0.3 0.11 0 (RVW-PR38D) 0 x
(RVW-PR38D) Pc
0 0.4 0.15 0 (RVW-PR38E) 0 x
(RVW-PR38E) Pc
0 0.5 0.19 0 (RVW-PR38F) 0 x
(RVW-PR38F) Pc
0 0.6 0.22 0 (RVW-PR38G) 0 x
(RVW-PR38G) Pc
0 0.7 0.26 0 (RVW-PR38H) 0 x
(RVW-PR38H) Pc
0 0.8 0.3 0 (RVW-PR38I) 0 x
(RVW-PR38I) Pc
0 0.9 0.34 0 (RVW-PR38J) 0 x
(RVW-PR38J) Pc
0 1 0.37 0 (RVW-PR38K) 0 x
(RVW-PR38K) Pc
0 0.05 0.025 0 (RVW-PR39A) 0 x
(RVW-PR39A) Pc
0 0.1 0.05 0 (RVW-PR39B) 0 x
(RVW-PR39B) Pc
0 0.2 0.1 0 (RVW-PR39C) 0 x
(RVW-PR39C) Pc
0 0.3 0.15 0 (RVW-PR39D) 0 x
(RVW-PR39D) Pc
0 0.4 0.2 0 (RVW-PR39E) 0 x
(RVW-PR39E) Pc
0 0.5 0.25 0 (RVW-PR39F) 0 x
(RVW-PR39F) Pc
0 0.6 0.3 0 (RVW-PR39G) 0 x
(RVW-PR39G) Pc
0 0.7 0.35 0 (RVW-PR39H) 0 x
(RVW-PR39H) Pc
0 0.8 0.4 0 (RVW-PR39I) 0 x
(RVW-PR39I) Pc
0 0.9 0.45 0 (RVW-PR39J) 0 x
(RVW-PR39J) Pc
0 1 0.5 0 (RVW-PR39K) 0 x
(RVW-PR39K) Pc
0 0.05 0.03 0 (RVW-PR40A) 0 x
(RVW-PR40A) Pc
0 0.1 0.062 0 (RVW-PR40B) 0 x
(RVW-PR40B) Pc
0 0.2 0.12 0 (RVW-PR40C) 0 x
(RVW-PR40C) Pc
0 0.3 0.19 0 (RVW-PR40D) 0 x
(RVW-PR40D) Pc
0 0.4 0.25 0 (RVW-PR40E) 0 x
(RVW-PR40E) Pc
0 0.5 0.31 0 (RVW-PR40F) 0 x
(RVW-PR40F) Pc
0 0.6 0.37 0 (RVW-PR40G) 0 x
(RVW-PR40G) Pc
0 0.7 0.44 0 (RVW-PR40H) 0 x
(RVW-PR40H) Pc
0 0.8 0.5 0 (RVW-PR40I) 0 x
(RVW-PR40I) Pc
0 0.9 0.56 0 (RVW-PR40J) 0 x
(RVW-PR40J) Pc
0 1 0.62 0 (RVW-PR40K) 0 x
(RVW-PR40K) Pc
0 0.05 0.035 0 (RVW-PR41A) 0 x
(RVW-PR41A) Pc
0 0.1 0.075 0 (RVW-PR41B) 0 x
(RVW-PR41B) Pc
0 0.2 0.15 0 (RVW-PR41C) 0 x
(RVW-PR41C) Pc
0 0.3 0.22 0 (RVW-PR41D) 0 x
(RVW-PR41D) Pc
0 0.4 0.3 0 (RVW-PR41E) 0 x
(RVW-PR41E) Pc
0 0.5 0.37 0 (RVW-PR41F) 0 x
(RVW-PR41F) Pc
0 0.6 0.45 0 (RVW-PR41G) 0 x
(RVW-PR41G) Pc
0 0.7 0.52 0 (RVW-PR41H) 0 x
(RVW-PR41H) Pc
0 0.8 0.6 0 (RVW-PR41I) 0 x
(RVW-PR41I) Pc
0 0.9 0.67 0 (RVW-PR41J) 0 x
(RVW-PR41J) Pc
0 1 0.75 0 (RVW-PR41K) 0 x
(RVW-PR41K) Pc
0 0.05 0.045 0 (RVW-PR42A) 0 x
(RVW-PR42A) Pc
0 0.1 0.09 0 (RVW-PR42B) 0 x
(RVW-PR42B) Pc
0 0.2 0.17 0 (RVW-PR42C) 0 x
(RVW-PR42C) Pc
0 0.3 0.26 0 (RVW-PR42D) 0 x
(RVW-PR42D) Pc
0 0.4 0.35 0 (RVW-PR42E) 0 x
(RVW-PR42E) Pc
0 0.5 0.44 0 (RVW-PR42F) 0 x
(RVW-PR42F) Pc
0 0.6 0.52 0 (RVW-PR42G) 0 x
(RVW-PR42G) Pc
0 0.7 0.61 0 (RVW-PR42H) 0 x
(RVW-PR42H) Pc
0 0.8 0.7 0 (RVW-PR42I) 0 x
(RVW-PR42I) Pc
0 0.9 0.79 0 (RVW-PR42J) 0 x
(RVW-PR42J) Pc
0 1 0.87 0 (RVW-PR42K) 0 x
(RVW-PR42K) Pc
0 0.05 0.05 0 (RVW-PR43A) 0 x
(RVW-PR43A) Pc
0 0.1 0.1 0 (RVW-PR43B) 0 x
(RVW-PR43B) Pc
0 0.2 0.2 0 (RVW-PR43C) 0 x
(RVW-PR43C) Pc
0 0.3 0.3 0 (RVW-PR43D) 0 x
(RVW-PR43D) Pc
0 0.4 0.4 0 (RVW-PR43E) 0 x
(RVW-PR43E) Pc
0 0.5 0.5 0 (RVW-PR43F) 0 x
(RVW-PR43F) Pc
0 0.6 0.6 0 (RVW-PR43G) 0 x
(RVW-PR43G) Pc
0 0.7 0.7 0 (RVW-PR43H) 0 x
(RVW-PR43H) Pc
0 0.8 0.8 0 (RVW-PR43I) 0 x
(RVW-PR43I) Pc
0 0.9 0.9 0 (RVW-PR43J) 0 x
(RVW-PR43J) Pc
0 1 1 0 (RVW-PR43K) 0 x
(RVW-PR43K) Pc
0 0.045 0.05 0 (RVW-PR44A) 0 x
(RVW-PR44A) Pc
0 0.09 0.1 0 (RVW-PR44B) 0 x
(RVW-PR44B) Pc
0 0.17 0.2 0 (RVW-PR44C) 0 x
(RVW-PR44C) Pc
0 0.26 0.3 0 (RVW-PR44D) 0 x
(RVW-PR44D) Pc
0 0.35 0.4 0 (RVW-PR44E) 0 x
(RVW-PR44E) Pc
0 0.44 0.5 0 (RVW-PR44F) 0 x
(RVW-PR44F) Pc
0 0.53 0.6 0 (RVW-PR44G) 0 x
(RVW-PR44G) Pc
0 0.61 0.7 0 (RVW-PR44H) 0 x
(RVW-PR44H) Pc
0 0.7 0.8 0 (RVW-PR44I) 0 x
(RVW-PR44I) Pc
0 0.79 0.9 0 (RVW-PR44J) 0 x
(RVW-PR44J) Pc
0 0.87 1 0 (RVW-PR44K) 0 x
(RVW-PR44K) Pc
0 0.035 0.05 0 (RVW-PR45A) 0 x
(RVW-PR45A) Pc
0 0.075 0.1 0 (RVW-PR45B) 0 x
(RVW-PR45B) Pc
0 0.15 0.2 0 (RVW-PR45C) 0 x
(RVW-PR45C) Pc
0 0.22 0.3 0 (RVW-PR45D) 0 x
(RVW-PR45D) Pc
0 0.3 0.4 0 (RVW-PR45E) 0 x
(RVW-PR45E) Pc
0 0.37 0.5 0 (RVW-PR45F) 0 x
(RVW-PR45F) Pc
0 0.45 0.6 0 (RVW-PR45G) 0 x
(RVW-PR45G) Pc
0 0.52 0.7 0 (RVW-PR45H) 0 x
(RVW-PR45H) Pc
0 0.6 0.8 0 (RVW-PR45I) 0 x
(RVW-PR45I) Pc
0 0.67 0.9 0 (RVW-PR45J) 0 x
(RVW-PR45J) Pc
0 0.75 1 0 (RVW-PR45K) 0 x
(RVW-PR45K) Pc
0 0.03 0.05 0 (RVW-PR46A) 0 x
(RVW-PR46A) Pc
0 0.06 0.1 0 (RVW-PR46B) 0 x
(RVW-PR46B) Pc
0 0.12 0.2 0 (RVW-PR46C) 0 x
(RVW-PR46C) Pc
0 0.19 0.3 0 (RVW-PR46D) 0 x
(RVW-PR46D) Pc
0 0.25 0.4 0 (RVW-PR46E) 0 x
(RVW-PR46E) Pc
0 0.31 0.5 0 (RVW-PR46F) 0 x
(RVW-PR46F) Pc
0 0.37 0.6 0 (RVW-PR46G) 0 x
(RVW-PR46G) Pc
0 0.44 0.7 0 (RVW-PR46H) 0 x
(RVW-PR46H) Pc
0 0.5 0.8 0 (RVW-PR46I) 0 x
(RVW-PR46I) Pc
0 0.56 0.9 0 (RVW-PR46J) 0 x
(RVW-PR46J) Pc
0 0.62 1 0 (RVW-PR46K) 0 x
(RVW-PR46K) Pc
0 0.025 0.05 0 (RVW-PR47A) 0 x
(RVW-PR47A) Pc
0 0.05 0.1 0 (RVW-PR47B) 0 x
(RVW-PR47B) Pc
0 0.1 0.2 0 (RVW-PR47C) 0 x
(RVW-PR47C) Pc
0 0.15 0.3 0 (RVW-PR47D) 0 x
(RVW-PR47D) Pc
0 0.2 0.4 0 (RVW-PR47E) 0 x
(RVW-PR47E) Pc
0 0.25 0.5 0 (RVW-PR47F) 0 x
(RVW-PR47F) Pc
0 0.3 0.6 0 (RVW-PR47G) 0 x
(RVW-PR47G) Pc
0 0.35 0.7 0 (RVW-PR47H) 0 x
(RVW-PR47H) Pc
0 0.4 0.8 0 (RVW-PR47I) 0 x
(RVW-PR47I) Pc
0 0.45 0.9 0 (RVW-PR47J) 0 x
(RVW-PR47J) Pc
0 0.5 1 0 (RVW-PR47K) 0 x
(RVW-PR47K) Pc
0 0.02 0.05 0 (RVW-PR48A) 0 x
(RVW-PR48A) Pc
0 0.04 0.1 0 (RVW-PR48B) 0 x
(RVW-PR48B) Pc
0 0.07 0.2 0 (RVW-PR48C) 0 x
(RVW-PR48C) Pc
0 0.11 0.3 0 (RVW-PR48D) 0 x
(RVW-PR48D) Pc
0 0.15 0.4 0 (RVW-PR48E) 0 x
(RVW-PR48E) Pc
0 0.19 0.5 0 (RVW-PR48F) 0 x
(RVW-PR48F) Pc
0 0.22 0.6 0 (RVW-PR48G) 0 x
(RVW-PR48G) Pc
0 0.26 0.7 0 (RVW-PR48H) 0 x
(RVW-PR48H) Pc
0 0.3 0.8 0 (RVW-PR48I) 0 x
(RVW-PR48I) Pc
0 0.34 0.9 0 (RVW-PR48J) 0 x
(RVW-PR48J) Pc
0 0.37 1 0 (RVW-PR48K) 0 x
(RVW-PR48K) Pc
0 0.013 0.05 0 (RVW-PR49A) 0 x
(RVW-PR49A) Pc
0 0.025 0.1 0 (RVW-PR49B) 0 x
(RVW-PR49B) Pc
0 0.05 0.2 0 (RVW-PR49C) 0 x
(RVW-PR49C) Pc
0 0.07 0.3 0 (RVW-PR49D) 0 x
(RVW-PR49D) Pc
0 0.1 0.4 0 (RVW-PR49E) 0 x
(RVW-PR49E) Pc
0 0.12 0.5 0 (RVW-PR49F) 0 x
(RVW-PR49F) Pc
0 0.15 0.6 0 (RVW-PR49G) 0 x
(RVW-PR49G) Pc
0 0.17 0.7 0 (RVW-PR49H) 0 x
(RVW-PR49H) Pc
0 0.2 0.8 0 (RVW-PR49I) 0 x
(RVW-PR49I) Pc
0 0.22 0.9 0 (RVW-PR49J) 0 x
(RVW-PR49J) Pc
0 0.25 1 0 (RVW-PR49K) 0 x
(RVW-PR49K) Pc
0 0.005 0.05 0 (RVW-PR50A) 0 x
(RVW-PR50A) Pc
0 0.012 0.1 0 (RVW-PR50B) 0 x
(RVW-PR50B) Pc
0 0.02 0.2 0 (RVW-PR50C) 0 x
(RVW-PR50C) Pc
0 0.04 0.3 0 (RVW-PR50D) 0 x
(RVW-PR50D) Pc
0 0.05 0.4 0 (RVW-PR50E) 0 x
(RVW-PR50E) Pc
0 0.06 0.5 0 (RVW-PR50F) 0 x
(RVW-PR50F) Pc
0 0.07 0.6 0 (RVW-PR50G) 0 x
(RVW-PR50G) Pc
0 0.09 0.7 0 (RVW-PR50H) 0 x
(RVW-PR50H) Pc
0 0.1 0.8 0 (RVW-PR50I) 0 x
(RVW-PR50I) Pc
0 0.11 0.9 0 (RVW-PR50J) 0 x
(RVW-PR50J) Pc
0 0.12 1 0 (RVW-PR50K) 0 x
(RVW-PR50K) Pc
0 0 0.1 0.2 (RVW-ST01B) 0 x
(RVW-ST01B) Pc
0 0 0.2 0.2 (RVW-ST01C) 0 x
(RVW-ST01C) Pc
0 0 0.3 0.2 (RVW-ST01D) 0 x
(RVW-ST01D) Pc
0 0 0.4 0.2 (RVW-ST01E) 0 x
(RVW-ST01E) Pc
0 0 0.5 0.2 (RVW-ST01F) 0 x
(RVW-ST01F) Pc
0 0 0.6 0.2 (RVW-ST01G) 0 x
(RVW-ST01G) Pc
0 0 0.7 0.2 (RVW-ST01H) 0 x
(RVW-ST01H) Pc
0 0 0.8 0.2 (RVW-ST01I) 0 x
(RVW-ST01I) Pc
0 0 0.9 0.2 (RVW-ST01J) 0 x
(RVW-ST01J) Pc
0 0 1 0.2 (RVW-ST01K) 0 x
(RVW-ST01K) Pc
0.01 0 0.1 0.2 (RVW-ST03B) 0 x
(RVW-ST03B) Pc
0.02 0 0.2 0.2 (RVW-ST03C) 0 x
(RVW-ST03C) Pc
0.025 0 0.3 0.2 (RVW-ST03D) 0 x
(RVW-ST03D) Pc
0.03 0 0.4 0.2 (RVW-ST03E) 0 x
(RVW-ST03E) Pc
0.04 0 0.5 0.2 (RVW-ST03F) 0 x
(RVW-ST03F) Pc
0.05 0 0.6 0.2 (RVW-ST03G) 0 x
(RVW-ST03G) Pc
0.06 0 0.7 0.2 (RVW-ST03H) 0 x
(RVW-ST03H) Pc
0.07 0 0.8 0.2 (RVW-ST03I) 0 x
(RVW-ST03I) Pc
0.075 0 0.9 0.2 (RVW-ST03J) 0 x
(RVW-ST03J) Pc
0.08 0 1 0.2 (RVW-ST03K) 0 x
(RVW-ST03K) Pc
0.02 0 0.1 0.2 (RVW-ST04B) 0 x
(RVW-ST04B) Pc
0.03 0 0.2 0.2 (RVW-ST04C) 0 x
(RVW-ST04C) Pc
0.05 0 0.3 0.2 (RVW-ST04D) 0 x
(RVW-ST04D) Pc
0.07 0 0.4 0.2 (RVW-ST04E) 0 x
(RVW-ST04E) Pc
0.08 0 0.5 0.2 (RVW-ST04F) 0 x
(RVW-ST04F) Pc
0.1 0 0.6 0.2 (RVW-ST04G) 0 x
(RVW-ST04G) Pc
0.12 0 0.7 0.2 (RVW-ST04H) 0 x
(RVW-ST04H) Pc
0.13 0 0.8 0.2 (RVW-ST04I) 0 x
(RVW-ST04I) Pc
0.15 0 0.9 0.2 (RVW-ST04J) 0 x
(RVW-ST04J) Pc
0.17 0 1 0.2 (RVW-ST04K) 0 x
(RVW-ST04K) Pc
0.05 0 0.1 0.2 (RVW-ST07B) 0 x
(RVW-ST07B) Pc
0.1 0 0.2 0.2 (RVW-ST07C) 0 x
(RVW-ST07C) Pc
0.15 0 0.3 0.2 (RVW-ST07D) 0 x
(RVW-ST07D) Pc
0.2 0 0.4 0.2 (RVW-ST07E) 0 x
(RVW-ST07E) Pc
0.25 0 0.5 0.2 (RVW-ST07F) 0 x
(RVW-ST07F) Pc
0.3 0 0.6 0.2 (RVW-ST07G) 0 x
(RVW-ST07G) Pc
0.35 0 0.7 0.2 (RVW-ST07H) 0 x
(RVW-ST07H) Pc
0.4 0 0.8 0.2 (RVW-ST07I) 0 x
(RVW-ST07I) Pc
0.45 0 0.9 0.2 (RVW-ST07J) 0 x
(RVW-ST07J) Pc
0.5 0 1 0.2 (RVW-ST07K) 0 x
(RVW-ST07K) Pc
0.07 0 0.1 0.2 (RVW-ST09B) 0 x
(RVW-ST09B) Pc
0.13 0 0.2 0.2 (RVW-ST09C) 0 x
(RVW-ST09C) Pc
0.2 0 0.3 0.2 (RVW-ST09D) 0 x
(RVW-ST09D) Pc
0.27 0 0.4 0.2 (RVW-ST09E) 0 x
(RVW-ST09E) Pc
0.33 0 0.5 0.2 (RVW-ST09F) 0 x
(RVW-ST09F) Pc
0.4 0 0.6 0.2 (RVW-ST09G) 0 x
(RVW-ST09G) Pc
0.47 0 0.7 0.2 (RVW-ST09H) 0 x
(RVW-ST09H) Pc
0.53 0 0.8 0.2 (RVW-ST09I) 0 x
(RVW-ST09I) Pc
0.6 0 0.9 0.2 (RVW-ST09J) 0 x
(RVW-ST09J) Pc
0.67 0 1 0.2 (RVW-ST09K) 0 x
(RVW-ST09K) Pc
0.08 0 0.1 0.2 (RVW-ST11B) 0 x
(RVW-ST11B) Pc
0.17 0 0.2 0.2 (RVW-ST11C) 0 x
(RVW-ST11C) Pc
0.25 0 0.3 0.2 (RVW-ST11D) 0 x
(RVW-ST11D) Pc
0.33 0 0.4 0.2 (RVW-ST11E) 0 x
(RVW-ST11E) Pc
0.42 0 0.5 0.2 (RVW-ST11F) 0 x
(RVW-ST11F) Pc
0.5 0 0.6 0.2 (RVW-ST11G) 0 x
(RVW-ST11G) Pc
0.58 0 0.7 0.2 (RVW-ST11H) 0 x
(RVW-ST11H) Pc
0.67 0 0.8 0.2 (RVW-ST11I) 0 x
(RVW-ST11I) Pc
0.75 0 0.9 0.2 (RVW-ST11J) 0 x
(RVW-ST11J) Pc
0.83 0 1 0.2 (RVW-ST11K) 0 x
(RVW-ST11K) Pc
0.1 0 0.1 0.2 (RVW-ST12B) 0 x
(RVW-ST12B) Pc
0.2 0 0.2 0.2 (RVW-ST12C) 0 x
(RVW-ST12C) Pc
0.3 0 0.3 0.2 (RVW-ST12D) 0 x
(RVW-ST12D) Pc
0.4 0 0.4 0.2 (RVW-ST12E) 0 x
(RVW-ST12E) Pc
0.5 0 0.5 0.2 (RVW-ST12F) 0 x
(RVW-ST12F) Pc
0.6 0 0.6 0.2 (RVW-ST12G) 0 x
(RVW-ST12G) Pc
0.7 0 0.7 0.2 (RVW-ST12H) 0 x
(RVW-ST12H) Pc
0.8 0 0.8 0.2 (RVW-ST12I) 0 x
(RVW-ST12I) Pc
0.9 0 0.9 0.2 (RVW-ST12J) 0 x
(RVW-ST12J) Pc
1 0 1 0.2 (RVW-ST12K) 0 x
(RVW-ST12K) Pc
0.1 0 0.05 0.2 (RVW-ST15B) 0 x
(RVW-ST15B) Pc
0.2 0 0.1 0.2 (RVW-ST15C) 0 x
(RVW-ST15C) Pc
0.3 0 0.15 0.2 (RVW-ST15D) 0 x
(RVW-ST15D) Pc
0.4 0 0.2 0.2 (RVW-ST15E) 0 x
(RVW-ST15E) Pc
0.5 0 0.25 0.2 (RVW-ST15F) 0 x
(RVW-ST15F) Pc
0.6 0 0.3 0.2 (RVW-ST15G) 0 x
(RVW-ST15G) Pc
0.7 0 0.35 0.2 (RVW-ST15H) 0 x
(RVW-ST15H) Pc
0.8 0 0.4 0.2 (RVW-ST15I) 0 x
(RVW-ST15I) Pc
0.9 0 0.45 0.2 (RVW-ST15J) 0 x
(RVW-ST15J) Pc
1 0 0.5 0.2 (RVW-ST15K) 0 x
(RVW-ST15K) Pc
0.1 0 0.025 0.2 (RVW-ST17B) 0 x
(RVW-ST17B) Pc
0.2 0 0.05 0.2 (RVW-ST17C) 0 x
(RVW-ST17C) Pc
0.3 0 0.075 0.2 (RVW-ST17D) 0 x
(RVW-ST17D) Pc
0.4 0 0.1 0.2 (RVW-ST17E) 0 x
(RVW-ST17E) Pc
0.5 0 0.125 0.2 (RVW-ST17F) 0 x
(RVW-ST17F) Pc
0.6 0 0.15 0.2 (RVW-ST17G) 0 x
(RVW-ST17G) Pc
0.7 0 0.175 0.2 (RVW-ST17H) 0 x
(RVW-ST17H) Pc
0.8 0 0.2 0.2 (RVW-ST17I) 0 x
(RVW-ST17I) Pc
0.9 0 0.225 0.2 (RVW-ST17J) 0 x
(RVW-ST17J) Pc
1 0 0.25 0.2 (RVW-ST17K) 0 x
(RVW-ST17K) Pc
0.1 0 0 0.2 (RVW-ST20B) 0 x
(RVW-ST20B) Pc
0.2 0 0 0.2 (RVW-ST20C) 0 x
(RVW-ST20C) Pc
0.3 0 0 0.2 (RVW-ST20D) 0 x
(RVW-ST20D) Pc
0.4 0 0 0.2 (RVW-ST20E) 0 x
(RVW-ST20E) Pc
0.5 0 0 0.2 (RVW-ST20F) 0 x
(RVW-ST20F) Pc
0.6 0 0 0.2 (RVW-ST20G) 0 x
(RVW-ST20G) Pc
0.7 0 0 0.2 (RVW-ST20H) 0 x
(RVW-ST20H) Pc
0.8 0 0 0.2 (RVW-ST20I) 0 x
(RVW-ST20I) Pc
0.9 0 0 0.2 (RVW-ST20J) 0 x
(RVW-ST20J) Pc
1 0 0 0.2 (RVW-ST20K) 0 x
(RVW-ST20K) Pc
0.1 0.025 0 0.2 (RVW-ST21B) 0 x
(RVW-ST21B) Pc
0.2 0.05 0 0.2 (RVW-ST21C) 0 x
(RVW-ST21C) Pc
0.3 0.075 0 0.2 (RVW-ST21D) 0 x
(RVW-ST21D) Pc
0.4 0.1 0 0.2 (RVW-ST21E) 0 x
(RVW-ST21E) Pc
0.5 0.125 0 0.2 (RVW-ST21F) 0 x
(RVW-ST21F) Pc
0.6 0.15 0 0.2 (RVW-ST21G) 0 x
(RVW-ST21G) Pc
0.7 0.175 0 0.2 (RVW-ST21H) 0 x
(RVW-ST21H) Pc
0.8 0.2 0 0.2 (RVW-ST21I) 0 x
(RVW-ST21I) Pc
0.9 0.225 0 0.2 (RVW-ST21J) 0 x
(RVW-ST21J) Pc
1 0.25 0 0.2 (RVW-ST21K) 0 x
(RVW-ST21K) Pc
0.1 0.05 0 0.2 (RVW-ST22B) 0 x
(RVW-ST22B) Pc
0.2 0.1 0 0.2 (RVW-ST22C) 0 x
(RVW-ST22C) Pc
0.3 0.15 0 0.2 (RVW-ST22D) 0 x
(RVW-ST22D) Pc
0.4 0.2 0 0.2 (RVW-ST22E) 0 x
(RVW-ST22E) Pc
0.5 0.25 0 0.2 (RVW-ST22F) 0 x
(RVW-ST22F) Pc
0.6 0.3 0 0.2 (RVW-ST22G) 0 x
(RVW-ST22G) Pc
0.7 0.35 0 0.2 (RVW-ST22H) 0 x
(RVW-ST22H) Pc
0.8 0.4 0 0.2 (RVW-ST22I) 0 x
(RVW-ST22I) Pc
0.9 0.45 0 0.2 (RVW-ST22J) 0 x
(RVW-ST22J) Pc
1 0.5 0 0.2 (RVW-ST22K) 0 x
(RVW-ST22K) Pc
0.1 0.075 0 0.2 (RVW-ST24B) 0 x
(RVW-ST24B) Pc
0.2 0.15 0 0.2 (RVW-ST24C) 0 x
(RVW-ST24C) Pc
0.3 0.225 0 0.2 (RVW-ST24D) 0 x
(RVW-ST24D) Pc
0.4 0.3 0 0.2 (RVW-ST24E) 0 x
(RVW-ST24E) Pc
0.5 0.375 0 0.2 (RVW-ST24F) 0 x
(RVW-ST24F) Pc
0.6 0.45 0 0.2 (RVW-ST24G) 0 x
(RVW-ST24G) Pc
0.7 0.525 0 0.2 (RVW-ST24H) 0 x
(RVW-ST24H) Pc
0.8 0.6 0 0.2 (RVW-ST24I) 0 x
(RVW-ST24I) Pc
0.9 0.675 0 0.2 (RVW-ST24J) 0 x
(RVW-ST24J) Pc
1 0.75 0 0.2 (RVW-ST24K) 0 x
(RVW-ST24K) Pc
0.1 0.1 0 0.2 (RVW-ST26B) 0 x
(RVW-ST26B) Pc
0.2 0.2 0 0.2 (RVW-ST26C) 0 x
(RVW-ST26C) Pc
0.3 0.3 0 0.2 (RVW-ST26D) 0 x
(RVW-ST26D) Pc
0.4 0.4 0 0.2 (RVW-ST26E) 0 x
(RVW-ST26E) Pc
0.5 0.5 0 0.2 (RVW-ST26F) 0 x
(RVW-ST26F) Pc
0.6 0.6 0 0.2 (RVW-ST26G) 0 x
(RVW-ST26G) Pc
0.7 0.7 0 0.2 (RVW-ST26H) 0 x
(RVW-ST26H) Pc
0.8 0.8 0 0.2 (RVW-ST26I) 0 x
(RVW-ST26I) Pc
0.9 0.9 0 0.2 (RVW-ST26J) 0 x
(RVW-ST26J) Pc
1 1 0 0.2 (RVW-ST26K) 0 x
(RVW-ST26K) Pc
0.08 0.1 0 0.2 (RVW-ST28B) 0 x
(RVW-ST28B) Pc
0.16 0.2 0 0.2 (RVW-ST28C) 0 x
(RVW-ST28C) Pc
0.24 0.3 0 0.2 (RVW-ST28D) 0 x
(RVW-ST28D) Pc
0.32 0.4 0 0.2 (RVW-ST28E) 0 x
(RVW-ST28E) Pc
0.4 0.5 0 0.2 (RVW-ST28F) 0 x
(RVW-ST28F) Pc
0.48 0.6 0 0.2 (RVW-ST28G) 0 x
(RVW-ST28G) Pc
0.56 0.7 0 0.2 (RVW-ST28H) 0 x
(RVW-ST28H) Pc
0.64 0.8 0 0.2 (RVW-ST28I) 0 x
(RVW-ST28I) Pc
0.72 0.9 0 0.2 (RVW-ST28J) 0 x
(RVW-ST28J) Pc
0.8 1 0 0.2 (RVW-ST28K) 0 x
(RVW-ST28K) Pc
0.06 0.1 0 0.2 (RVW-ST30B) 0 x
(RVW-ST30B) Pc
0.12 0.2 0 0.2 (RVW-ST30C) 0 x
(RVW-ST30C) Pc
0.18 0.3 0 0.2 (RVW-ST30D) 0 x
(RVW-ST30D) Pc
0.24 0.4 0 0.2 (RVW-ST30E) 0 x
(RVW-ST30E) Pc
0.3 0.5 0 0.2 (RVW-ST30F) 0 x
(RVW-ST30F) Pc
0.36 0.6 0 0.2 (RVW-ST30G) 0 x
(RVW-ST30G) Pc
0.42 0.7 0 0.2 (RVW-ST30H) 0 x
(RVW-ST30H) Pc
0.48 0.8 0 0.2 (RVW-ST30I) 0 x
(RVW-ST30I) Pc
0.54 0.9 0 0.2 (RVW-ST30J) 0 x
(RVW-ST30J) Pc
0.6 1 0 0.2 (RVW-ST30K) 0 x
(RVW-ST30K) Pc
0.04 0.1 0 0.2 (RVW-ST31B) 0 x
(RVW-ST31B) Pc
0.08 0.2 0 0.2 (RVW-ST31C) 0 x
(RVW-ST31C) Pc
0.12 0.3 0 0.2 (RVW-ST31D) 0 x
(RVW-ST31D) Pc
0.16 0.4 0 0.2 (RVW-ST31E) 0 x
(RVW-ST31E) Pc
0.2 0.5 0 0.2 (RVW-ST31F) 0 x
(RVW-ST31F) Pc
0.24 0.6 0 0.2 (RVW-ST31G) 0 x
(RVW-ST31G) Pc
0.28 0.7 0 0.2 (RVW-ST31H) 0 x
(RVW-ST31H) Pc
0.32 0.8 0 0.2 (RVW-ST31I) 0 x
(RVW-ST31I) Pc
0.36 0.9 0 0.2 (RVW-ST31J) 0 x
(RVW-ST31J) Pc
0.4 1 0 0.2 (RVW-ST31K) 0 x
(RVW-ST31K) Pc
0.02 0.1 0 0.2 (RVW-ST33B) 0 x
(RVW-ST33B) Pc
0.04 0.2 0 0.2 (RVW-ST33C) 0 x
(RVW-ST33C) Pc
0.06 0.3 0 0.2 (RVW-ST33D) 0 x
(RVW-ST33D) Pc
0.08 0.4 0 0.2 (RVW-ST33E) 0 x
(RVW-ST33E) Pc
0.1 0.5 0 0.2 (RVW-ST33F) 0 x
(RVW-ST33F) Pc
0.12 0.6 0 0.2 (RVW-ST33G) 0 x
(RVW-ST33G) Pc
0.14 0.7 0 0.2 (RVW-ST33H) 0 x
(RVW-ST33H) Pc
0.16 0.8 0 0.2 (RVW-ST33I) 0 x
(RVW-ST33I) Pc
0.18 0.9 0 0.2 (RVW-ST33J) 0 x
(RVW-ST33J) Pc
0.2 1 0 0.2 (RVW-ST33K) 0 x
(RVW-ST33K) Pc
0 0.1 0 0.2 (RVW-ST35B) 0 x
(RVW-ST35B) Pc
0 0.2 0 0.2 (RVW-ST35C) 0 x
(RVW-ST35C) Pc
0 0.3 0 0.2 (RVW-ST35D) 0 x
(RVW-ST35D) Pc
0 0.4 0 0.2 (RVW-ST35E) 0 x
(RVW-ST35E) Pc
0 0.5 0 0.2 (RVW-ST35F) 0 x
(RVW-ST35F) Pc
0 0.6 0 0.2 (RVW-ST35G) 0 x
(RVW-ST35G) Pc
0 0.7 0 0.2 (RVW-ST35H) 0 x
(RVW-ST35H) Pc
0 0.8 0 0.2 (RVW-ST35I) 0 x
(RVW-ST35I) Pc
0 0.9 0 0.2 (RVW-ST35J) 0 x
(RVW-ST35J) Pc
0 1 0 0.2 (RVW-ST35K) 0 x
(RVW-ST35K) Pc
0 0.1 0.025 0.2 (RVW-ST37B) 0 x
(RVW-ST37B) Pc
0 0.2 0.05 0.2 (RVW-ST37C) 0 x
(RVW-ST37C) Pc
0 0.3 0.075 0.2 (RVW-ST37D) 0 x
(RVW-ST37D) Pc
0 0.4 0.1 0.2 (RVW-ST37E) 0 x
(RVW-ST37E) Pc
0 0.5 0.125 0.2 (RVW-ST37F) 0 x
(RVW-ST37F) Pc
0 0.6 0.15 0.2 (RVW-ST37G) 0 x
(RVW-ST37G) Pc
0 0.7 0.175 0.2 (RVW-ST37H) 0 x
(RVW-ST37H) Pc
0 0.8 0.2 0.2 (RVW-ST37I) 0 x
(RVW-ST37I) Pc
0 0.9 0.25 0.2 (RVW-ST37J) 0 x
(RVW-ST37J) Pc
0 1 0.25 0.2 (RVW-ST37K) 0 x
(RVW-ST37K) Pc
0 0.1 0.05 0.2 (RVW-ST39B) 0 x
(RVW-ST39B) Pc
0 0.2 0.1 0.2 (RVW-ST39C) 0 x
(RVW-ST39C) Pc
0 0.3 0.15 0.2 (RVW-ST39D) 0 x
(RVW-ST39D) Pc
0 0.4 0.2 0.2 (RVW-ST39E) 0 x
(RVW-ST39E) Pc
0 0.5 0.25 0.2 (RVW-ST39F) 0 x
(RVW-ST39F) Pc
0 0.6 0.3 0.2 (RVW-ST39G) 0 x
(RVW-ST39G) Pc
0 0.7 0.35 0.2 (RVW-ST39H) 0 x
(RVW-ST39H) Pc
0 0.8 0.4 0.2 (RVW-ST39I) 0 x
(RVW-ST39I) Pc
0 0.9 0.45 0.2 (RVW-ST39J) 0 x
(RVW-ST39J) Pc
0 1 0.5 0.2 (RVW-ST39K) 0 x
(RVW-ST39K) Pc
0 0.1 0.075 0.2 (RVW-ST41B) 0 x
(RVW-ST41B) Pc
0 0.2 0.15 0.2 (RVW-ST41C) 0 x
(RVW-ST41C) Pc
0 0.3 0.225 0.2 (RVW-ST41D) 0 x
(RVW-ST41D) Pc
0 0.4 0.3 0.2 (RVW-ST41E) 0 x
(RVW-ST41E) Pc
0 0.5 0.375 0.2 (RVW-ST41F) 0 x
(RVW-ST41F) Pc
0 0.6 0.45 0.2 (RVW-ST41G) 0 x
(RVW-ST41G) Pc
0 0.7 0.525 0.2 (RVW-ST41H) 0 x
(RVW-ST41H) Pc
0 0.8 0.6 0.2 (RVW-ST41I) 0 x
(RVW-ST41I) Pc
0 0.9 0.675 0.2 (RVW-ST41J) 0 x
(RVW-ST41J) Pc
0 1 0.75 0.2 (RVW-ST41K) 0 x
(RVW-ST41K) Pc
0 0.1 0.1 0.2 (RVW-ST43B) 0 x
(RVW-ST43B) Pc
0 0.2 0.2 0.2 (RVW-ST43C) 0 x
(RVW-ST43C) Pc
0 0.3 0.3 0.2 (RVW-ST43D) 0 x
(RVW-ST43D) Pc
0 0.4 0.4 0.2 (RVW-ST43E) 0 x
(RVW-ST43E) Pc
0 0.5 0.5 0.2 (RVW-ST43F) 0 x
(RVW-ST43F) Pc
0 0.6 0.6 0.2 (RVW-ST43G) 0 x
(RVW-ST43G) Pc
0 0.7 0.7 0.2 (RVW-ST43H) 0 x
(RVW-ST43H) Pc
0 0.8 0.8 0.2 (RVW-ST43I) 0 x
(RVW-ST43I) Pc
0 0.9 0.9 0.2 (RVW-ST43J) 0 x
(RVW-ST43J) Pc
0 1 1 0.2 (RVW-ST43K) 0 x
(RVW-ST43K) Pc
0 0.075 0.1 0.2 (RVW-ST45B) 0 x
(RVW-ST45B) Pc
0 0.15 0.2 0.2 (RVW-ST45C) 0 x
(RVW-ST45C) Pc
0 0.225 0.3 0.2 (RVW-ST45D) 0 x
(RVW-ST45D) Pc
0 0.3 0.4 0.2 (RVW-ST45E) 0 x
(RVW-ST45E) Pc
0 0.375 0.5 0.2 (RVW-ST45F) 0 x
(RVW-ST45F) Pc
0 0.45 0.6 0.2 (RVW-ST45G) 0 x
(RVW-ST45G) Pc
0 0.525 0.7 0.2 (RVW-ST45H) 0 x
(RVW-ST45H) Pc
0 0.6 0.8 0.2 (RVW-ST45I) 0 x
(RVW-ST45I) Pc
0 0.675 0.9 0.2 (RVW-ST45J) 0 x
(RVW-ST45J) Pc
0 0.75 1 0.2 (RVW-ST45K) 0 x
(RVW-ST45K) Pc
0 0.05 0.1 0.2 (RVW-ST47B) 0 x
(RVW-ST47B) Pc
0 0.1 0.2 0.2 (RVW-ST47C) 0 x
(RVW-ST47C) Pc
0 0.15 0.3 0.2 (RVW-ST47D) 0 x
(RVW-ST47D) Pc
0 0.2 0.4 0.2 (RVW-ST47E) 0 x
(RVW-ST47E) Pc
0 0.25 0.5 0.2 (RVW-ST47F) 0 x
(RVW-ST47F) Pc
0 0.3 0.6 0.2 (RVW-ST47G) 0 x
(RVW-ST47G) Pc
0 0.35 0.7 0.2 (RVW-ST47H) 0 x
(RVW-ST47H) Pc
0 0.4 0.8 0.2 (RVW-ST47I) 0 x
(RVW-ST47I) Pc
0 0.45 0.9 0.2 (RVW-ST47J) 0 x
(RVW-ST47J) Pc
0 0.5 1 0.2 (RVW-ST47K) 0 x
(RVW-ST47K) Pc
0 0.025 0.1 0.2 (RVW-ST49B) 0 x
(RVW-ST49B) Pc
0 0.05 0.2 0.2 (RVW-ST49C) 0 x
(RVW-ST49C) Pc
0 0.075 0.3 0.2 (RVW-ST49D) 0 x
(RVW-ST49D) Pc
0 0.1 0.4 0.2 (RVW-ST49E) 0 x
(RVW-ST49E) Pc
0 0.125 0.5 0.2 (RVW-ST49F) 0 x
(RVW-ST49F) Pc
0 0.15 0.6 0.2 (RVW-ST49G) 0 x
(RVW-ST49G) Pc
0 0.175 0.7 0.2 (RVW-ST49H) 0 x
(RVW-ST49H) Pc
0 0.2 0.8 0.2 (RVW-ST49I) 0 x
(RVW-ST49I) Pc
0 0.225 0.9 0.2 (RVW-ST49J) 0 x
(RVW-ST49J) Pc
0 0.25 1 0.2 (RVW-ST49K) 0 x
(RVW-ST49K) Pc
PB
%AI5_EndPalette
%AI5_Begin_NonPrinting
Np
%AI8_PluginGroupInfo
(Adobe Path Blends) (Adobe \203u\203\214\203\223\203h\203v\203\211\203O\203C\203\223) (\203\211\203C\203u\203u\203\214\203\223\203h.aip)
%AI8_PluginGroupInfo
(Adobe PatternOnPath Brush Tool) (Adobe \203p\203^\201[\203\223\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213.aip)
%AI8_PluginGroupInfo
(Adobe ArtOnPath Brush Tool) (Adobe \203A\201[\203g\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203A\201[\203g\203u\203\211\203V\203c\201[\203\213.aip)
%AI8_PluginGroupInfo
(Adobe Calligraphic Brush Tool) (Adobe \203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\203J\203\212\203O\203\211\203t\203B\203u\203\211\203V\203c\201[\203\213.aip)
%AI8_PluginGroupInfo
(Adobe Scatter Brush Tool) (Adobe \216U\225z\203u\203\211\203V\203v\203\211\203O\203C\203\223) (\216U\225z\203u\203\211\203V\203c\201[\203\213.aip)
%AI8_PluginGroupInfo
(Adobe Deform Plugin) (Adobe \203G\203\223\203x\203\215\201[\203v\203v\203\211\203O\203C\203\223) (\203G\203\223\203x\203\215\201[\203v\202\250\202\346\202\321\203\217\201[\203v.aip)
%AI8_PluginGroupInfo
(Pathfinder Suite) (Adobe Compound Shape) (\203p\203X\203t\203@\203C\203\223\203_\203Z\203b\203g.aip)
%AI8_PluginGroupInfo
(Adobe Flare Plugin) (Flare) (\203t\203\214\203A.aip)
%AI8_PluginGroupInfo
(Adobe Symbolism) (Adobe \203V\203\223\203{\203\213) (\203V\203\223\203{\203\213\203c\201[\203\213.aip)
%AI5_End_NonPrinting--
%%EndSetup
%AI5_BeginLayer
1 1 1 1 0 0 1 0 79 128 255 0 100 Lb
(\203\214\203C\203\204\201[ 1) Ln
0 A
LB
%AI5_EndLayer--
%%PageTrailer
gsave annotatepage grestore showpage
%%Trailer
Adobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF
